{"version":3,"sources":["views/pages/login/recoverPassword/RecoverPassword.jsx","assets/images/oon_icon_novo.png","views/pages/login/newAccount/NewAccount.jsx","views/pages/login/Login.jsx"],"names":["Recover","useState","show","setShow","email","setEmail","color","variant","onClick","data","className","Modal","onHide","size","Header","closeButton","Title","Body","Form","Group","controlId","Label","Control","type","onChange","e","target","value","placeholder","mySubString","console","log","length","substring","lastIndexOf","alert","NewAccount","xs","align","rounded","src","imgOON","width","height","CryptoJS","require","DefaultLayout","React","lazy","Login","user","setUser","password","setPassword","flag","setFlag","lembraMin","setLembraMin","Cookies","get","path","name","render","props","id","label","postData","axios","post","headers","then","res","response","status","usertype","AES","encrypt","decrypted","decrypt","set","JSON","stringify","convertido","toString","enc","Utf8","token","criptar","catch","r","RecoverPassword"],"mappings":"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","file":"static/js/25.ac93d9b4.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport { Form , Modal, Button }  from 'react-bootstrap';\nimport {\n  CButton,\n  CRow,\n  CCol,\n  \n} from '@coreui/react'\n\nconst Recover = () =>{\n    // propriedades do modal\n    const [visible, setVisible] = useState(false)  \n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const [email, setEmail] = useState('')\n    const changeEmail = (e)=>{ setEmail(e.target.value)} //  pegando valores do email\n    const [respEndpoint, setRespEndpoint]=useState(true) // apos o envio do email, pegar resposta\n    function verifica(data){ \n        const handleShow =  setShow(true);\n    }\n\n    function salvarEdicoes (){\n        \n        let mySubString\n        // caso usuario nao envie nada no email, verificar o campo.console.log('teste', mySubString)\n        console.log('teste', email)\n        if(email.length > 1){\n             mySubString = email.substring(\n                email.lastIndexOf(\"@\") + 1, \n                email.lastIndexOf(\".\")\n            );  \n        }else{\n            // Solucao temporaria\n            mySubString = 'errado'\n        }\n        \n\n        // permitir o envio do email somente se tiver dominio oonpayperuse, oonseguros\n        if((mySubString === 'oonpayperuse') ||(mySubString ==='oonseguros')){\n            verificaMail()\n            alert('Dominio Certo')\n        }else{\n            alert('Dominio Errado')\n        }\n\n        setShow(false); // fechar modal\n    }\n\n    function verificaMail (){\n        // envia o email para o endpoint, Firebase faz tudo já\n        // so chamar api do firebase\n        console.log('email enviado', email) \n    }\n\n    return (\n        <> \n            <CButton  color=\"link\" variant='ghost' onClick={verifica} className=\"btnLogin\">\n                esqueci minha senha\n            </CButton>\n\n            <Modal \n                show={show} \n                onHide={handleClose}\n                size=\"lg\"\n            >\n                    \n                <Modal.Header  closeButton>\n                    <Modal.Title>Recuperação de senha</Modal.Title>\n                </Modal.Header>\n                <Modal.Body className='container-body'>\n                    <CRow>\n                        <CCol>\n                            <Form>\n                                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                                    <Form.Label>Digite um e-mail cadastrado</Form.Label>\n                                    <Form.Control type=\"email\"  onChange={changeEmail} value={email} placeholder=\"Digite seu e-mail\" />\n                                </Form.Group>\n                            </Form> \n                            <br />\n                            <CButton onClick={salvarEdicoes} color=\"dark\" className=\"btnLogin\">\n                                Enviar\n                            </CButton>\n                        </CCol>\n                    </CRow>\n                </Modal.Body>\n\n                \n            </Modal>\n        </>\n    )\n}\n\nexport default Recover","export default __webpack_public_path__ + \"static/media/oon_icon_novo.37962d3d.png\";","import React, {useState} from 'react'\n\nimport { Form , Modal, Button }  from 'react-bootstrap';\nimport './newAccount.css'\n\nimport imgOON from './../../../../assets/images/oon_icon_novo.png'\n\nimport {\n    CButton,\n    CRow,\n    CCol,\n    CImage  \n    \n  } from '@coreui/react'\n\nconst NewAccount = () => {\n\n    const [visible, setVisible] = useState(false)  \n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const [email, setEmail] = useState('')\n    const changeEmail = (e)=>{ setEmail(e.target.value)} //  pegando valores do email\n    const [respEndpoint, setRespEndpoint]=useState(true) // apos o envio do email, pegar resposta\n\n    function openModal(data){ \n        const handleShow =  setShow(true);\n    }\n\n    const resposta = true\n\n\n    return ( \n        <>\n            <CButton  onClick={openModal} color='dark' className=\"btnLogin\">\n                Cria uma nova conta\n            </CButton>\n\n            <Modal \n                show={show} \n                onHide={handleClose}\n                size=\"xl\"\n            >\n                    \n                <Modal.Header  closeButton>\n                    <Modal.Title>Criar nova conta</Modal.Title>\n                </Modal.Header>\n                <Modal.Body className='container-body'>\n                    <CRow>\n                        <CCol className='container-newAccount-back'></CCol>\n\n                        <CCol xs={8} className='container-newAccount-mid'>\n\n                            <div className=\"clearfix\">\n                                <CImage align=\"center\" rounded src={imgOON} width={200} height={200} />\n                            </div>\n\n                            <div>\n                                <label> <b> Obs: </b> A criação de uma nova conta está condicionada ao usuário estar pré cadastrado no sistema</label>\n                                <br />\n                                <br />\n                                <Form>\n                                    <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                                        <Form.Label>Inserir um e-mail OON</Form.Label>\n                                        <Form.Control type=\"email\"  placeholder=\"E-mail\" />\n                                        <br />\n                                        <Form.Label>Inserir uma senha</Form.Label>\n                                        <Form.Control type=\"password\"  placeholder=\"Senha\" />\n                                    </Form.Group>\n                                </Form>\n                            </div>\n                            <br />\n                            <CButton color='dark' className='btn-salvar'>Criar conta</CButton>\n                            \n                            <br /> <br /> \n                            {resposta == false ? \n                                <> \n                                    <div className='container-err'>\n                                        <label className='label-newAccount-error'> Empregado não encontrado. </label>\n                                    </div>\n                                    \n                                </>\n                                :null\n                            }\n                            <label>  </label> \n                            <br /> <br />\n                           \n                        </CCol>\n\n                        <CCol className='container-newAccount-back' > \n                        {/* <label > OON - Seguros </label> */}\n                        </CCol>\n                    </CRow>\n                </Modal.Body>\n\n                \n            </Modal>\n\n        </> \n\n    )\n}\n\n\nexport default NewAccount ","import React, { useState } from 'react'\nimport axios  from \"axios\"\nimport { HashRouter, Route, Switch } from 'react-router-dom'\n\nvar CryptoJS = require(\"crypto-js\");\n\nimport { Form  }  from 'react-bootstrap';\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CCol,\n  CContainer,\n  CForm,\n  CFormInput,\n  CNavLink,\n  CInputGroup,\n  CFormCheck,\n  CRow,\n} from '@coreui/react'\n\nimport './login.css'\n\nimport CIcon from '@coreui/icons-react'\n\nimport RecoverPassword from './recoverPassword/RecoverPassword'\nimport NewAccount from './newAccount/NewAccount'\n\nimport { cilLockLocked, cilUser } from '@coreui/icons'\nimport Cookies from 'js-cookie'\nconst DefaultLayout = React.lazy(() => import('../../../layout/DefaultLayout'))\n\nconst Login = () => {\n  const [user, setUser] = useState('')\n  const [password, setPassword] = useState('')\n\n  const [flag, setFlag] = useState(false)   // AQUI A FLAG DEVE SER FALSE \n\n  // LEMBRAR DE MIN\n  const [lembraMin, setLembraMin] = useState(false)\n  const lembra = () =>{\n    setLembraMin(true)\n    console.log('lembra de min vale', lembraMin)\n  }\n\n  const userLogin = (e) => {\n    // console.log('e vale', e.target.value)\n    setUser(e.target.value)\n  }\n\n  const userPassword = (e) => {\n    // console.log('e senha', e.target.value)\n    setPassword(e.target.value)\n  }\n\n  let config = {\n    headers: {'Content-Type': 'application/json'}\n  };\n\n  let dado\n\n  const urlDomain = 'http://dashboardbff.oonpayperuse.com.br' //'http://localhost:8080'  //http://dashboardbff.oonpayperuse.com.br\n  const login =  () => {\n    let axiosConfig = {\n      headers: {\n          'Content-Type': 'application/json;charset=UTF-8',\n          \"Access-Control-Allow-Origin\": \"*\",\n      }\n    };\n    var postData = {\n      email: user,\n      password: password\n    };\n\n      axios.post(`${urlDomain}/login`, postData, axiosConfig)\n      .then((res) => {\n        verificaLogin(res)\n      })\n      .catch(r =>{ \n        console.log('error', r), alert('Senha errada')\n      })\n  }\n\n  const token = Cookies.get('TokenID')\n  function verificaLogin(response){\n\n    // resposta 200 permiti o login\n    if(response.status == 200){\n\n      // encriptar valores sensiveis\n       criptar(response)\n     // conversoes()\n     \n    }\n  }\n\n  function criptar(response){\n\n    setFlag(true)\n\n    console.log('antes da encriptografi',response.data.usertype )\n\n    // encriptografado\n    var encrypted = CryptoJS.AES.encrypt(response.data.usertype, 'secret');\n  \n    // decritpado\n    var decrypted = CryptoJS.AES.decrypt(response.data.usertype, 'secret');\n    console.log('DECRIPTEDE', decrypted)\n\n    // Cookies.set('userType2', decrypted.toString())\n    Cookies.set('userType2', JSON.stringify(decrypted))\n\n    // Desencriptografado\n    var convertido = decrypted.toString(CryptoJS.enc.Utf8);\n    console.log('convertido vem ', convertido)\n\n\n    Cookies.set('TokenID', response.data.token)\n    // Cookies.set('userType', JSON.stringify(decrypted))  // Adicionar valor encriptografado\n    Cookies.set('userType', response.data.usertype)\n  }\n\n\n  if(flag === true){\n      return (\n        <Route  path=\"/\" name=\"Home\" render={(props) => <DefaultLayout {...props} />} />\n      )\n  }else{\n    return (\n      <div className=\"bg-light min-vh-100 d-flex flex-row align-items-center fundoBody\">\n        <CRow>\n          <CCol className='loginEsq'>\n           <p className='tituloLogin'> Bem vindo de volta </p>\n           <p  className='subLogin'> Sentimos sua falta!  </p>\n          </CCol>\n          <CCol  className='loginDir'>\n            <h2>OON PAYPER USE</h2>\n            <h6>Faça login na sua conta</h6>\n            <div className='inputsContainer'>\n            <Form>\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                <Form.Label>E-mail</Form.Label>\n                <Form.Control type=\"email\"  onChange={userLogin} value={user} placeholder=\"Digite seu e-mail\" />\n              </Form.Group>\n\n              <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                <Form.Label>Senha</Form.Label>\n                <Form.Control type=\"password\"  onChange={userPassword} value={password}  placeholder=\"Digite sua senha\" />\n              </Form.Group>\n              <CFormCheck id=\"flexCheckDefault\" onClick={lembra} label=\"Lembrar de min\"/>\n            </Form>\n            \n            <br />\n\n          \n            <CButton onClick={login} color=\"dark\" className=\"btnLogin\">\n              Entrar\n            </CButton>\n\n            \n            <NewAccount />\n            <RecoverPassword />\n            \n\n          </div>\n          </CCol>\n        </CRow>\n        \n      </div>\n    \n    )\n  }\n\n  \n}\n\nexport default Login\n"],"sourceRoot":""}