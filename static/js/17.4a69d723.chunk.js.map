{"version":3,"sources":["routes.js","components/AppContent.jsx","components/AppFooter.js","components/notify/Render/RenderNotify.jsx","components/notify/Notify.jsx","assets/images/avatars/2.jpg","components/header/AppHeaderDropdown.js","assets/images/oon.png","components/AppHeader.js","components/AppSidebarNav.js","_nav.js","components/AppSidebar.js","layout/DefaultLayout.js"],"names":["Dashboard","React","lazy","Usuarios","Device","Rastreamento","Financeiro","routes","path","exact","name","component","AppContent","fluid","className","fallback","color","map","route","idx","render","props","from","to","memo","AppFooter","Render","notificacoes","item","titulo","text","Notify","cont","useState","flag","setFlag","handleClose","setShow","show","verifica","notificacao","numNot","length","rest","ClearNotify","content","variant","size","onClick","icon","cilRecycle","index","Modal","onHide","Body","RenderNotify","placement","cilBellExclamation","position","shape","cilBell","AppHeaderDropdown","caret","src","avatar8","cilSettings","cilUser","Cookies","remove","window","location","reload","cilExitToApp","AppHeader","dispatch","useDispatch","sidebarShow","useSelector","state","data","Date","diaSemana","Array","getDay","mesAno","getMonth","anoAtual","getFullYear","diaAtual","getDate","type","cilMenu","logoOON","width","height","AppSidebarNav","items","useLocation","navLink","badge","navItem","Component","NavLink","activeClassName","key","navGroup","String","toggler","visible","pathname","startsWith","Fragment","admin","CNavItem","cilHome","customClassName","CNavTitle","cilCarAlt","cilCog","cilMoney","cilSpeedometer","cilWarning","cilFlagAlt","cilPeople","cilDescription","cilTask","cilPhone","gerente","usuario","_nav","user","AppSidebar","unfoldable","sidebarUnfoldable","onVisibleChange","navigation","DefaultLayout"],"mappings":"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","file":"static/js/17.4a69d723.chunk.js","sourcesContent":["import React from 'react'\n\nconst Dashboard = React.lazy(() => import('./views/dashboard/Dashboard')) // painel\n// const Colors = React.lazy(() => import('./views/theme/colors/Colors'))\nconst Usuarios = React.lazy(() => import('./views/employees/Users'))\nconst Device = React.lazy(() => import('./views/devices/Devices'))\nconst Permissoes = React.lazy(() => import('./views/permissons/Permissions'))\nconst Rastreamento = React.lazy(() => import('./views/Tracking/Tracking'))\nconst Financeiro = React.lazy(() => import('./views/finance/Finance'))\nconst mapBox = React.lazy(() => import('./views/mapBox/Map'))\nconst Plano = React.lazy(() => import('./views/plans/Plans'))\nconst Cobertura = React.lazy(() => import('./views/coverages/Services'))\nconst Chamados = React.lazy(() => import('./views/calls/Call'))\nconst Configuracoes  = React.lazy(() => import('./views/settings/Setting'))\nconst Sinistro  = React.lazy(() => import('./views/sinister/Sinister'))\nconst Riscos = React.lazy(() => import('./views/scratchs/Scratch'))\nconst Home = React.lazy(() => import('./views/home/Home'))\nconst Assistencia = React.lazy(() => import('./views/assistence24h/Assistence'))\n\nconst routes = [\n  { path: '/', exact: true, name: 'Home' },\n  { path: '/dashboard', name: 'Dashboard', component: Dashboard },\n  { path: '/Users', name: 'Usuarios', component: Usuarios },\n  { path: '/devices', name: 'Veículos', component: Device },\n  { path: '/rastreamento', name: 'Rastreamento', component: Rastreamento },\n  { path: '/mapbox', name: 'Rastreamento', component: mapBox },\n  {path: '/financeiro', name:'Financeiro', component: Financeiro},\n  {path: '/planos', name:'Planos', component: Plano},\n  {path: '/coberturas', name:'Coberturas', component: Cobertura},\n  {path: '/chamados', name:'Chamados', component: Chamados},\n  {path: '/configuracoes', name:'Configurações', component: Configuracoes},\n  {path: '/sinistro', name:'Sinistro', component: Sinistro},\n  {path: '/riscos', name:'Riscos', component: Riscos},\n  {path: '/home', name:'Home2', component: Home},\n  {path: '/assistencia', name:'Assistencia', component: Assistencia},\n  \n]\n\nexport default routes\n","import React, { Suspense } from 'react'\nimport { Redirect, Route, Switch } from 'react-router-dom'\nimport { CContainer, CSpinner } from '@coreui/react'\n// routes config\nimport routes from '../routes'\n\nconst AppContent = () => {\n  return (\n    <CContainer fluid className='teste'>\n      <Suspense fallback={<CSpinner color=\"primary\" />}>\n        <Switch>\n          {routes.map((route, idx) => {\n            return (\n              route.component && (\n                <Route\n                  key={idx}\n                  path={route.path}\n                  exact={route.exact}\n                  name={route.name}\n                  render={(props) => (\n                    <>\n                      <route.component {...props} />\n                    </>\n                  )}\n                />\n              )\n            )\n          })}\n          <Redirect from=\"/\" to=\"/home\" />\n        </Switch>\n      </Suspense>\n    </CContainer>\n  )\n}\n\nexport default React.memo(AppContent)\n","import React from 'react'\nimport { CFooter } from '@coreui/react'\n\nconst AppFooter = () => {\n  return (\n    <CFooter>\n      <div className=\"ms-auto\">\n         <span className=\"ms-1\">&copy; OON PAYPER USE</span>\n        {/*\n        <a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\">\n          OON Payper Use\n        </a>  */}\n       \n      </div>\n    </CFooter>\n  )\n}\n\nexport default React.memo(AppFooter)\n","import React from 'react'\n\nconst Render = (props) =>{\n\n    return (\n        <>\n            {props.notificacoes.map(item =>(\n                <div> \n                    <label className='Titulo-notificacao'> {item.titulo}</label>\n                    <br />\n                    <p className='texto-notificacao'> {item.text}</p>\n                    <hr />\n                </div> \n           \n           ))}\n        </>\n    )\n}\n\nexport default Render;","import React, {useState} from 'react'\nimport { Button, Modal,  Form  }  from 'react-bootstrap';\nimport CIcon from '@coreui/icons-react'\nimport { cilBell, cilBellExclamation, cilRecycle, cilMenu } from '@coreui/icons'\nimport {\n    CContainer,\n    CHeader,\n    CHeaderBrand,\n    CButton,\n    CBadge,\n    CPopover,\n  } from '@coreui/react'\nimport './notify.css'\n\nimport RenderNotify from './Render/RenderNotify'\n\nconst Notify = () =>{\n    let cont =0 \n    \n    const [flag, setFlag] = useState(1) // pegar quantidade de novas notificacoes\n    const handleClose = () => setShow(false);\n    const [visible, setVisible] = useState(false)  \n    const [show, setShow] = useState(false);\n    const verifica = ()=>setShow(true)\n    const salvarInfos = () => {\n        setShow(false);\n    }\n\n\n    const [notificacao, setNotificacao]= useState(\n        [\n            {titulo:'Notificacao 1', text:'texto notificacao1'},\n            {titulo:'Notificacao 2', text:'texto notificacao2'},\n            {titulo:'Notificacao 3', text:'texto notificacao3'},\n            {titulo:'Notificacao 1', text:'texto notificacao1'},\n            {titulo:'Notificacao 2', text:'texto notificacao2'},\n            {titulo:'Notificacao 3', text:'texto notificacao3'},\n            {titulo:'Notificacao 1', text:'texto notificacao1'},\n            {titulo:'Notificacao 2', text:'texto notificacao2'},\n        ]\n    ) \n    const numNot = notificacao.length\n    const rest = numNot - 5\n    // limpa notificacoes, provavelmente isso vai ser feito pelo BFF\n    const ClearNotify = () => {\n        setFlag(0)\n    }\n\n    if(flag > 0){\n        return (\n            <>  \n    \n                <CPopover\n                    content={\n                        <div>\n                            <div className='container-lixeira'> \n                                <CButton variant='outline' size='sm' color=\"danger\" className=\"position-lixeira-relative\" onClick={ClearNotify} > \n                                    <CIcon icon={cilRecycle} size=\"xl\" />\n                                </CButton>\n                            </div>\n                            \n                            <hr />\n                            {notificacao.map((item, index)=>{\n                                    if(index < 5){\n                                        return(\n                                            <div> \n                                                <label className='Titulo-notificacao'> {item.titulo}</label>\n                                                <br />\n                                                <p className='texto-notificacao'> {item.text}</p>\n                                                <hr />\n                                                \n                                            </div> \n                                        )\n                                    }else if(cont <1){\n                                        cont = 1\n                                        return(\n                                            <>\n                                                {/* Abre um modal listando todas notificações. */}\n                                                <CButton onClick={verifica} className='btn-notificacao-modal' color='dark' variant='ghost'> Mais {rest} notificações </CButton>\n                                                <Modal \n                                                    show={show} \n                                                    onHide={handleClose}\n                                                    size=\"xl\"\n                                                    \n                                                >\n                                                    \n                                                    <Modal.Body className='container-body'>\n                                                        <RenderNotify notificacoes = {notificacao} /> \n                                                    </Modal.Body>\n                                                    \n                                                </Modal>\n                                            </>\n                                        )\n                                    }\n                                }\n                            )}\n                            \n                        </div>\n                    }\n                    placement=\"bottom\"\n                    className='notificacao-popover'\n                >\n                    <CButton variant='ghost' size='xl' color=\"danger\" onClick={ClearNotify} className=\"position-relative\">\n                        <CIcon icon={cilBellExclamation} size=\"xl\" />\n                        <CBadge color=\"danger\"  position=\"top-end\" shape=\"rounded-pill\">\n                            {numNot}\n                        </CBadge>\n                    </CButton>\n                </CPopover>\n                \n            </>\n        )\n    }else{\n        return (\n            <>  \n                <CPopover\n                    content={<h6>Não há notificações</h6>}\n                    placement=\"bottom\"\n                    className='notificacao-popover'\n                >\n                    <CButton variant='ghost' color=\"dark\">\n                        <CIcon icon={cilBell} size=\"xl\" />\n                    </CButton>\n                </CPopover>\n                \n            </>\n        )\n    }\n   \n}\n\nexport default Notify","export default __webpack_public_path__ + \"static/media/2.0c06e43d.jpg\";","import React, {useState} from 'react'\nimport {\n  CAvatar,\n  CBadge,\n  CDropdown,\n  CDropdownDivider,\n  CDropdownHeader,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle,\n} from '@coreui/react'\n\nimport Cookies from 'js-cookie'\nimport './appHeader.css'\n\nimport {\n  cilBell,\n  cilCreditCard,\n  cilCommentSquare,\n  cilEnvelopeOpen,\n  cilFile,\n  cilLockLocked,\n  cilSettings,\n  cilExitToApp,\n  cilTask,\n  cilUser,\n} from '@coreui/icons'\nimport CIcon from '@coreui/icons-react'\n\nimport avatar8 from './../../assets/images/avatars/2.jpg'\nimport { Link } from 'react-router-dom'\n\nconst AppHeaderDropdown = () => {\n\n  const sairTela = () =>{\n    // localStorage.removeItem(\"TokenID\") // exclui o token\n    Cookies.remove('TokenID', { path: '' })\n    window.location.reload()\n  }\n\n  const [configRoute, setConfigRoute] =  useState(false)\n  const configScreen = () =>{\n    setConfigRoute(true)\n  }\n\n    return (\n      <CDropdown variant=\"nav-item\">\n        <CDropdownToggle placement=\"bottom-end\" className=\"py-0\" caret={false}>\n          <CAvatar src={avatar8} size=\"md\" />\n        </CDropdownToggle>\n        \n        <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\n          <CDropdownHeader className=\"bg-light fw-semibold py-2\">Configurações</CDropdownHeader>\n          \n          <CDropdownItem >\n            <Link to='/configuracoes' className='btn-config-screen' >\n              <CIcon icon={cilSettings} className=\"me-2\" />\n              Perfil\n            </Link>\n          </CDropdownItem>\n\n          <CDropdownItem >\n            <Link to='/configuracoes' className='btn-config-screen' >\n              <CIcon icon={cilUser} className=\"me-2\" />\n              Configurações\n            </Link>\n          </CDropdownItem>\n          {/* <CDropdownItem >\n            <CIcon icon={cilUser} className=\"me-2 btn-config-screen\" />\n             <label className='btn-config-screen' > Configurações </label> \n          </CDropdownItem> */}\n       \n          <CDropdownDivider />\n\n        \n          <CDropdownItem onClick={sairTela}>\n            <CIcon icon={cilExitToApp} className=\"me-2 btn-config-screen\"  />\n              <label className='btn-config-screen' > Sair </label> \n          </CDropdownItem>\n        </CDropdownMenu>\n\n      </CDropdown>\n    )\n  \n}\n\nexport default AppHeaderDropdown\n","export default __webpack_public_path__ + \"static/media/oon.d7899877.png\";","import React, {useState} from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  CContainer,\n  CHeader,\n  CHeaderBrand,\n  CHeaderDivider,\n  CHeaderNav,\n  CHeaderToggler,\n  CImage,\n  CNavItem,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilBell, cilEnvelopeOpen, cilList, cilMenu } from '@coreui/icons'\nimport './AppHeader.css'\nimport NotifySino from './notify/Notify'\n\n// import { AppBreadcrumb } from './index'\nimport { AppHeaderDropdown } from './header/index'\nimport logoOON from  './../assets/images/oon.png'\n\nconst AppHeader = () => {\n  const dispatch = useDispatch()\n  const sidebarShow = useSelector((state) => state.sidebarShow)\n  \n\n  var data = new Date();\n  var dias = new Array(\n    '  domingo ','  segunda-feira ','  terça-feira ','  quarta-feira ','  quinta-feira ','  sexta-feira ','  sábado '\n  );\n  const diaSemana = dias[data.getDay()]\n\n  var mes = new Array(\n    'Janeiro ','Fevereiro ','Março ','Abril ','Maio ','Junho ','Julho ', 'Agosto ', 'Setembro ','Outubro ', 'Novembro ', 'Dezembro '\n  );\n  const space = '    '\n  const mesAno = mes[data.getMonth()]\n   const anoAtual = data.getFullYear()\n  // Mes ano, dia e diaNum\n  const diaAtual = data.getDate()\n  return (\n    <CHeader position=\"sticky\" className=\"mb-4 headerContainer\">\n      <CContainer fluid>\n        <CHeaderToggler\n          className=\"ps-1\"\n          onClick={() => dispatch({ type: 'set', sidebarShow: !sidebarShow })}\n        >\n          <CIcon icon={cilMenu} size=\"lg\" />\n        </CHeaderToggler>\n        {/* LOGO QUANDO A TELA FICA MENOR */}\n        <CHeaderBrand className=\"mx-auto d-md-none\" to=\"/\">\n          <CImage fluid src = {logoOON} width={180} height={180}  />\n        </CHeaderBrand>\n        <CHeaderNav className=\"d-none d-md-flex me-auto\">\n          <CNavItem className='container-data'>\n              <label className='text-ano-mes'> {mesAno} {anoAtual}</label>\n              <label className='text-dia'> {space}  {diaSemana}, {diaAtual} </label>\n          </CNavItem>\n        </CHeaderNav>\n       \n        <CHeaderNav>\n          <CNavItem>\n              <NotifySino />\n          </CNavItem>\n        </CHeaderNav>\n        <CHeaderNav className=\"ms-3\">\n          <AppHeaderDropdown />\n        </CHeaderNav>\n        <CHeaderNav className=\"ms-3\">\n          <div className='container-header-name'> \n            <label className='name-header'> Gustavo Alcantara</label>\n            <br /> \n            <label className='funcao-header'> Administrador </label>\n          </div>\n        </CHeaderNav>\n\n      </CContainer>\n      \n      {/* <CContainer fluid>\n        <AppBreadcrumb />\n      </CContainer> */}\n    </CHeader>\n  )\n}\n\nexport default AppHeader\n","import React from 'react'\nimport { NavLink, useLocation } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nimport { CBadge } from '@coreui/react'\n\nexport const AppSidebarNav = ({ items }) => {\n  const location = useLocation()\n  const navLink = (name, icon, badge) => {\n    return (\n      <>\n        {icon && icon}\n        {name && name}\n        {badge && (\n          <CBadge color={badge.color} className=\"ms-auto\">\n            {badge.text}\n          </CBadge>\n        )}\n      </>\n    )\n  }\n\n  const navItem = (item, index) => {\n    const { component, name, badge, icon, ...rest } = item\n    const Component = component\n    return (\n      <Component\n        {...(rest.to &&\n          !rest.items && {\n            component: NavLink,\n            activeClassName: 'active',\n          })}\n        key={index}\n        {...rest}\n      >\n        {navLink(name, icon, badge)}\n      </Component>\n    )\n  }\n  const navGroup = (item, index) => {\n    const { component, name, icon, to, ...rest } = item\n    const Component = component\n    return (\n      <Component\n        idx={String(index)}\n        key={index}\n        toggler={navLink(name, icon)}\n        visible={location.pathname.startsWith(to)}\n        {...rest}\n      >\n        {item.items?.map((item, index) =>\n          item.items ? navGroup(item, index) : navItem(item, index),\n        )}\n      </Component>\n    )\n  }\n\n  return (\n    <React.Fragment>\n      {items &&\n        items.map((item, index) => (item.items ? navGroup(item, index) : navItem(item, index)))}\n    </React.Fragment>\n  )\n}\n\nAppSidebarNav.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.any).isRequired,\n}\n","import React from 'react'\nimport axios  from \"axios\"\nimport CIcon from '@coreui/icons-react'\nimport { CNavGroup, CNavItem, CNavTitle } from '@coreui/react'\nimport {\n  FaCarSide, \n  FaChartBar, \n  FaUserFriends, \n  FaMapMarkedAlt, \n  FaExclamationCircle, \n  FaMoneyBillAlt, \n  FaTasks,\n  FaMoneyBillWaveAlt,\n  FaPhoneAlt,\n  FaExternalLinkAlt,\n  FaCog\n} \n  from 'react-icons/fa';\n\nimport './nav.css'\nimport {\n  cilPeople,\n  cilCarAlt,\n  cilSpeedometer,\n  cilLocationPin,\n  cilWarning,\n  cilDescription,\n  cilTask,\n  cilPhone,\n  cilMoney,\n  cilCog,\n  cilExitToApp,\n  cilFlagAlt,\n  cilHome,\n\n} from '@coreui/icons'\n\n\n\nconst admin = [\n  \n  {\n    component: CNavItem,\n    name: 'Home',\n    to: '/home',\n    icon: <CIcon icon={cilHome} customClassName=\"nav-icon\" />,\n  },\n\n\n  // GRUPO SETORES \n  {\n    component: CNavTitle,\n    name: 'Setores',\n  },\n  {\n    component: CNavItem,\n    name: 'Veículos',\n    to: '/devices',\n    icon: <CIcon icon={cilCarAlt} customClassName=\"nav-icon\" />,\n  },\n  {\n    component: CNavItem,\n    name: 'Rastreamento',\n    to: '/rastreamento',\n    icon: <CIcon icon={cilCog} customClassName=\"nav-icon\" />,\n  },\n  // {\n  //   component: CNavItem,\n  //   name: 'Rastreamento',\n  //   to: '/mapbox',\n  //   icon:  <CIcon icon={cilLocationPin} customClassName=\"nav-icon\" />,\n  // },\n  {\n    component: CNavItem,\n    name: 'Financeiro',\n    to: '/financeiro',\n    icon: <CIcon icon={cilMoney} customClassName=\"nav-icon\" />,\n  },\n  {\n    component: CNavItem,\n    name: 'Painel', // Dashboard\n    to: '/dashboard',\n    icon: <CIcon icon={cilSpeedometer} customClassName=\"nav-icon\" />,\n    // badge: {\n    //   color: 'info',\n    //   text: 'NEW',\n    // },\n  },\n  {\n    component: CNavItem,\n    name: 'Sinistro',\n    to: '/sinistro',\n    icon: <CIcon icon={cilWarning} customClassName=\"nav-icon\" />,\n  },\n  {\n    component: CNavItem,\n    name: 'Assistencia',\n    to: '/assistencia',\n    icon: <CIcon icon={cilCog} customClassName=\"nav-icon\" />,\n  },\n  {\n    component: CNavItem,\n    name: 'Riscos',\n    to: '/riscos',\n    icon: <CIcon icon={cilFlagAlt} customClassName=\"nav-icon\" />,\n  },\n  {\n    component: CNavItem,\n    name: 'Funcionários',\n    to: '/Users', \n   icon: <CIcon icon={cilPeople} customClassName=\"nav-icon\" />,\n  },\n\n\n  // GRUPO SERVICÇOS\n  {\n    component: CNavTitle,\n    name: 'Serviços',\n  },\n  {\n    component: CNavItem,\n    name: 'Planos',\n    to: '/planos',\n    icon: <CIcon icon={cilDescription} customClassName=\"nav-icon\" />,\n  },\n  \n  {\n    component: CNavItem,\n    name: 'Coberturas',\n    to: '/coberturas',\n    icon: <CIcon icon={cilTask} customClassName=\"nav-icon\" />,\n  },\n  \n   //GRUPO OUTROS \n   {\n    component: CNavTitle,\n    name: 'Outros',\n  },\n  \n  {\n    component: CNavItem,\n    name: 'Chamados',\n    to: '/chamados',\n    icon: <CIcon icon={cilPhone} customClassName=\"nav-icon\" />,\n  },\n  \n  {\n    component: CNavItem,\n    name: 'Configurações',\n    to: '/configuracoes',\n    icon: <CIcon icon={cilCog} customClassName=\"nav-icon\" />,\n  },\n\n  \n\n]\n\nconst gerente = [\n  \n]\n\nconst usuario = [\n \n]\n\n\n function _nav (){\n\n  // const token = localStorage.getItem(\"TokenID\");\n  // pegar configs do usuario atual que está usando o sistema \n  // let axiosConfig = {\n  //   headers: {\n  //       'Authorization': token, \n  //       'Content-Type': 'application/json;charset=UTF-8',\n  //       \"Access-Control-Allow-Origin\": \"*\",\n  //   }\n  // };\n  // var postData = {\n  //   email: user,\n  //   password: password\n  // };\n\n  //   // puxar dados do usuario que logou no sistema, pegar informacao do usuario pelo tokem dele, pega tipo dele \n  //   await axios.post('http://dashboardbff.oonpayperuse.com.br/login', postData, axiosConfig)\n  //   .then((res) => {\n  //     verificaLogin(res)\n  //     const user = res.user.type\n  //   })\n  //   .catch((err) => {\n  //     console.log(\"AXIOS ERROR: \", err);\n  //   })\n  const user =  {userDepart:'ADMIN', userType:'ADMIN'} \n\n  if(user.userDepart == 'ADMIN'){\n      if(user.userType == 'ADMIN'){\n        return admin \n      }\n  }else if (user.userDepart == 'Comercial'){\n      if(user.userType == 'ADMIN'){\n        return gerente\n      }else if(user.userType == 'manager'){\n\n      }else{\n        // retorna support  \n      }\n    return gerente\n  }else{\n    return usuario \n  }\n}\n\n\nexport default _nav()\n\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { CSidebar, CSidebarBrand, CSidebarNav, CSidebarToggler, CImage } from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { ciOnnIcon} from '@coreui/icons'\nimport { AppSidebarNav } from './AppSidebarNav'\n\nimport logoOON from  './../assets/images/oon.png'\nimport { sygnet } from 'src/assets/brand/sygnet'\n\nimport SimpleBar from 'simplebar-react'\nimport 'simplebar/dist/simplebar.min.css'\n\n// sidebar nav config\nimport navigation from '../_nav'\n\nconst AppSidebar = () => {\n  const dispatch = useDispatch()\n  const unfoldable = useSelector((state) => state.sidebarUnfoldable)\n  const sidebarShow = useSelector((state) => state.sidebarShow)\n\n  return (\n    <CSidebar\n      position=\"fixed\"\n      className='sideBarContainer'\n      unfoldable={unfoldable}\n      visible={sidebarShow}\n      onVisibleChange={(visible) => {\n        dispatch({ type: 'set', sidebarShow: visible })\n      }}\n    >\n      <CSidebarBrand className=\"d-none d-md-flex logoContainer\" to=\"/\">\n        {/* <CIcon className=\"sidebar-brand-full\" icon={ciOnnIcon} height={35} /> */}\n        {/* <CIcon className=\"sidebar-brand-narrow\" icon={sygnet} height={35} /> */}\n        <CImage fluid src = {logoOON} width={180} height={180}  />\n      </CSidebarBrand>\n      <CSidebarNav>\n        <SimpleBar className='fontItemNav'>\n          <AppSidebarNav items={navigation}  />\n          <CSidebarToggler\n            className=\"d-none d-lg-flex controlerSideBar\"\n            onClick={() => dispatch({ type: 'set', sidebarUnfoldable: !unfoldable })}\n          />\n        </SimpleBar>\n      </CSidebarNav>\n      \n    </CSidebar>\n  )\n}\n\nexport default React.memo(AppSidebar)\n","import React from 'react'\nimport { AppContent, AppSidebar, AppFooter, AppHeader } from '../components/index'\n\nconst DefaultLayout = () => {\n  return (\n    <div>\n      <AppSidebar />\n      <div className=\"wrapper d-flex flex-column min-vh-100 bg-light\">\n        <AppHeader />\n        {/* className=\"body flex-grow-1 px-3\" */}\n        <div className=\"body flex-grow-1  px-1 \"> \n          <AppContent />\n        </div>\n        <br />\n        <AppFooter />\n      </div>\n    </div>\n  )\n}\n\nexport default DefaultLayout\n"],"sourceRoot":""}