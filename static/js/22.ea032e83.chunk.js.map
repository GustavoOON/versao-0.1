{"version":3,"sources":["configMap.js","assets/images/car_ativo.png","assets/images/car_desativo.png","assets/images/carro01.jpeg","views/Tracking/render/InfoWindow.jsx","views/Tracking/reports/Resume.jsx","views/Tracking/reports/Travel.jsx","views/Tracking/reports/Routes.jsx","views/Tracking/render/Report.jsx","views/Tracking/render/InfosCars.jsx","views/Tracking/Tracking.jsx"],"names":["tokenMap","InfoWindowPop","props","useState","statusCarro","position","lat","device","actuallyPosition","lng","onCloseClick","closePop","className","sm","width","height","src","carro","name","size","color","shape","Resume","show","setShow","handleClose","fullscreen","setFullscreen","onClick","breakpoint","Modal","onHide","Header","closeButton","Title","Body","Footer","Report","data","Date","setDay","setMouth","setYear","hourPass","setHourPass","hourActually","setHourActually","dateInicio","setDateInicio","dateFinal","setDateFinal","dateMax","setDateMax","useEffect","getDate","getMonth","getFullYear","aux","getHours","console","log","fluid","disabled","options","label","value","placeholder","type","onChange","e","target","max","min","id","style","alignItems","infoCars","visible","expand","variant","align","responsive","striped","scope","placa","distancia","map","index","toString","Tracking","isLoaded","useJsApiLoader","googleMapsApiKey","libraries","React","setMap","onUnmount","useCallback","flagBTN","setFlagBTN","closePopup","setSelecionado","closeModal","setFlagBTN2","show2","setShow2","flagBTN2","closeModal2","selecionado","selected","mapContainerStyle","center","zoom","disableDefaultUI","zoomControl","fullscreenControl","streetViewControl","path","status","title","item","icon","url","online","scaledSize","window","google","maps","Size","origin","Point","anchor","InfoWindow","offline","Spinner","animation"],"mappings":"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","file":"static/js/22.ea032e83.chunk.js","sourcesContent":["\n\nconst tokenMap = 'AIzaSyB9I7snvZRRQ6faupULeBXYz5tU2AUuWek'\n\n\nexport default tokenMap;","export default __webpack_public_path__ + \"static/media/car_ativo.233298c6.png\";","export default __webpack_public_path__ + \"static/media/car_desativo.67650045.png\";","export default __webpack_public_path__ + \"static/media/carro01.33222a01.jpeg\";","import React, {useState} from 'react'\n\nimport {InfoWindow} from '@react-google-maps/api';\nimport { CImage, CButton, CContainer, CRow, CCol } from '@coreui/react'\nimport carro from './../../../assets/images/carro01.jpeg'\n\nimport './../css/infoWindow.css'\n\nconst InfoWindowPop = (props) =>{\n\n    const [statusCarro, setStatusCarro] = useState(false)\n    const [selected, setSelected] = useState(null)\n\n\n    function close(){\n        props.closePop()\n    }\n    \n    return (\n        <>  \n            <InfoWindow position={{lat: props.device.actuallyPosition.lat , lng:  props.device.actuallyPosition.lng}} onCloseClick={close} > \n                <div className='container-infoWindow'>\n                  \n                  <CRow className=\"container-infoWindow-linha1 \">\n                    <CCol className='line1-colLeft' sm=\"auto\">\n                        <CImage width={180} height={100}  src = {carro} className='img-pop' />\n                    </CCol>\n                    <CCol  className = 'line2-colRight'>\n                        <br />\n                        <div className='linha1-container-left'>\n                            <label className='font-sub'> Placa </label>\n                            <br />\n                            <label className='font-text'>XXX-1234</label> \n                            <br />\n                            <label className='font-sub'> Nome </label>\n                            <br />\n                            <label className='font-text'> {props.device.name} </label>\n                            <br />\n                        </div>\n                    </CCol>\n                  </CRow>\n\n                  <CRow  className = \"container-infoWindo-linha2\" >\n\n                    <CCol className='line2-col-left' sm=\"auto\">\n                        <label className='font-sub'> Status </label>\n                        <br />\n                        { statusCarro == true ? (\n                            <label className='font-text'>Em Movimento </label> \n                          )\n                            : \n                            <label className='font-text'>Parado</label> \n                        }\n                        <br />\n                        <label className='font-sub'> Velocidade </label>\n                        <br />\n                        <label className='font-text'> 60 km/h</label> \n                        \n                    </CCol>\n\n                    <CCol className='line2-col-mid' sm=\"auto\"> \n                        <label className='font-sub'> Motorista </label>\n                        <br />\n                        <label className='font-text'> Gustavo Alcantara </label> \n                        <br />\n                        <label className='font-sub'> Pagamento </label>\n                        <br />\n                        <label className='font-text'> R$ 450,20</label> \n                        <br />\n                        \n                    </CCol>\n\n                    <CCol className='line2-col-right' sm=\"auto\">\n                        <CButton className= \"btn-relatorio\" size='sm' color=\"secondary\" shape=\"rounded-pill\" >\n                            <label className='font-btns'> Relatório Completo </label>\n                        </CButton>\n                        <br /><br />\n                        <CButton className= \"btn-carro\" size='sm' color=\"secondary\" shape=\"rounded-pill\" >\n                            <label className='font-btns'> Informações Veículo  </label>\n                        </CButton>\n                    </CCol>\n                  </CRow>\n                  <br />\n                </div>\n              \n            </InfoWindow>\n        </>\n    )\n}\n\nexport default InfoWindowPop","import React, { useState } from 'react'\nimport {\n    CButton,\n\n  } from '@coreui/react'\n\nimport { Modal } from 'react-bootstrap';\n\nconst Resume = () =>{\n\n    const [visible, setVisible] = useState(false)  \n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const [fullscreen, setFullscreen] = useState(true);\n    \n    function verifica(breakpoint){\n        setFullscreen(breakpoint);\n        const handleShow =  setShow(true);\n        \n    }\n    return (\n        <> \n            <CButton onClick={verifica} > Gerar Relatório </CButton>\n\n            <Modal \n                show={show} \n                onHide={handleClose}\n                fullscreen={fullscreen}\n                // size=\"xl\"\n            >\n                    \n                <Modal.Header  closeButton>\n                    <Modal.Title>Resumo da operação </Modal.Title>\n                </Modal.Header>\n                <Modal.Body className='container-body'>\n                    <p>Lorem, ipsum dolor sit amet consectetur adipisicing elit. Doloribus repellat suscipit consequatur dignissimos veritatis! Dolores, voluptates iure quasi laboriosam aperiam, tempore praesentium est rerum itaque commodi, quos dignissimos magnam excepturi?</p>\n                </Modal.Body>\n                <Modal.Footer>  \n                    <CButton onClick={handleClose}>\n                        Sair\n                    </CButton>\n                    \n                </Modal.Footer>\n                    \n            </Modal>\n        </>\n    )   \n}\n\nexport default Resume","import React, { useState } from 'react'\nimport {\n    CButton,\n\n  } from '@coreui/react'\n\nimport { Modal } from 'react-bootstrap';\n\nconst Resume = () =>{\n\n    const [visible, setVisible] = useState(false)  \n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const [fullscreen, setFullscreen] = useState(true);\n    \n    function verifica(breakpoint){\n        setFullscreen(breakpoint);\n        const handleShow =  setShow(true);\n        \n    }\n    return (\n        <> \n            <CButton onClick={verifica} > Gerar Relatório </CButton>\n\n            <Modal \n                show={show} \n                onHide={handleClose}\n                fullscreen={fullscreen}\n                // size=\"xl\"\n            >\n                    \n                <Modal.Header  closeButton>\n                    <Modal.Title>Resumo da operação </Modal.Title>\n                </Modal.Header>\n                <Modal.Body className='container-body'>\n                    <p>Lorem, ipsum dolor sit amet consectetur adipisicing elit. Doloribus repellat suscipit consequatur dignissimos veritatis! Dolores, voluptates iure quasi laboriosam aperiam, tempore praesentium est rerum itaque commodi, quos dignissimos magnam excepturi?</p>\n                </Modal.Body>\n                <Modal.Footer>  \n                    <CButton  onClick={handleClose}>\n                        Sair\n                    </CButton>\n                 \n                </Modal.Footer>\n                    \n            </Modal>\n        </>\n    )   \n}\n\nexport default Resume","import React, { useState } from 'react'\nimport {\n    CButton,\n\n  } from '@coreui/react'\n\nimport { Modal } from 'react-bootstrap';\n\nconst Resume = () =>{\n\n    const [visible, setVisible] = useState(false)  \n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const [fullscreen, setFullscreen] = useState(true);\n    \n    function verifica(breakpoint){\n        setFullscreen(breakpoint);\n        const handleShow =  setShow(true);\n        \n    }\n    return (\n        <> \n            <CButton onClick={verifica} > Gerar Relatório </CButton>\n\n            <Modal \n                show={show} \n                onHide={handleClose}\n                fullscreen={fullscreen}\n                // size=\"xl\"\n            >\n                    \n                <Modal.Header  closeButton>\n                    <Modal.Title>Resumo da operação </Modal.Title>\n                </Modal.Header>\n                <Modal.Body className='container-body'>\n                    <p>Lorem, ipsum dolor sit amet consectetur adipisicing elit. Doloribus repellat suscipit consequatur dignissimos veritatis! Dolores, voluptates iure quasi laboriosam aperiam, tempore praesentium est rerum itaque commodi, quos dignissimos magnam excepturi?</p>\n                </Modal.Body>\n                <Modal.Footer>  \n                    <CButton onClick={handleClose}>\n                        Sair\n                    </CButton>\n                    \n                </Modal.Footer>\n                    \n            </Modal>\n        </>\n    )   \n}\n\nexport default Resume","import React, { useState,  useEffect } from 'react'\n// import './report.css'\n\n// import bibliotecas\nimport Resumo from './../reports/Resume'\nimport Viagens from './../reports/Travel'\nimport Rotas from './../reports/Routes'\n\nimport {\n    CButton,\n    CCard,\n    CCardBody,\n    CCardTitle,\n    CRow, \n    CCol,\n    CContainer,\n    CCardText,\n    CInputGroup,\n    CFormSelect,\n    CFormInput, \n  } from '@coreui/react'\n\n\nconst Report = () => {\n    var data = new Date();\n    const [visible, setVisible] = useState(false)\n    const [day, setDay] = useState()\n    const [mounth, setMouth] = useState()\n    const [year, setYear] = useState()\n\n    const [hourPass, setHourPass] = useState()\n    const [hourActually, setHourActually] = useState()\n\n    const [dateInicio, setDateInicio] = useState()\n    const [dateFinal, setDateFinal] = useState()\n    const [dateMax, setDateMax] = useState() // data maxima \n    // Pega data e hora\n    useEffect(()=>{\n        setDay(data.getDate())\n        setMouth(data.getMonth()+1)\n        setYear(data.getFullYear())\n\n        // Pegando hora\n        let aux = data.getHours() - 1\n        if(aux < 10){\n            aux = '0'+aux\n        }\n        console.log('aux', aux)\n        setHourPass( aux +':'+'00')\n        setHourActually(data.getHours()+':'+'00')\n\n        // setando a data\n        setDateInicio(data.getFullYear()+'-'+(data.getMonth()+1)+'-'+data.getDate()) // data que será pega no filtro\n        setDateFinal(data.getFullYear()+'-'+(data.getMonth()+1)+'-'+data.getDate())\n        setDateMax(data.getFullYear()+'-'+(data.getMonth()+1)+'-'+data.getDate()) // limita a data maxima de hoje\n    },[])\n\n    const selectDateInicio = (e) =>{\n        setDateInicio(e.target.value)\n    }\n    const selectDateFinal = (e) =>{\n        setDateFinal(e.target.value)\n    }\n    const selectHourPass = (e) =>{\n        setHourPass(e.target.value)\n    }\n    const selectHourActually = (e) =>{\n        setHourActually(e.target.value)\n    }\n\n    if(dateInicio == ''){\n        return (\n            <h3> Carregando... </h3>\n        )\n    }else{\n        return (\n            <>  \n                <h5>Filtrar Relatórios</h5>\n                <CContainer fluid className='menu-report'>\n                    <CRow className=\"align-items-start\">\n                        <CCol>\n                            <CFormSelect \n                                disabled\n                                aria-label=\"Selecione o Local\"\n                                options={[\n                                    'Selecione o Local',\n                                    { label: 'BH', value: '1' },\n                                    { label: 'SP', value: '2' },\n                                    { label: 'RJ', value: '3' }\n                                ]}\n                            />\n                        </CCol>\n                        <CCol>\n                            <CFormSelect \n                                aria-label=\"Selecione o Grupo\"\n                                options={[\n                                    'Selecione o Grupo',\n                                    { label: 'A', value: '1' },\n                                    { label: 'B', value: '2' },\n                                    { label: 'C', value: '3' }\n                            ]}\n                            />\n                        </CCol>\n                        <CCol>\n                            <CInputGroup className=\"mb-3\">\n                                <CFormInput placeholder='Digite a placa' />\n                            </CInputGroup>\n                        </CCol>\n                    </CRow>\n\n\n                    {/* ESTA DANDO ERRO DE WARNING    😔  - refazer   */}\n                    <CRow className=\"align-items-start\">\n                        <CCol>\n                            <h6> Início </h6>\n                            <input  type=\"date\" onChange={selectDateInicio} value={dateInicio} max={dateMax} min='2018-01-01' ></input>\n                            <input type=\"time\" id=\"inicio\" onChange={selectHourPass} value={hourPass} ></input>\n                        </CCol>\n                        <CCol>\n                            <h6> Fim </h6>\n                            <input   type=\"date\"  onChange={selectDateFinal} value={dateFinal} max={dateMax} min='2018-01-01'></input>\n                            <input type=\"time\" id=\"fim\" onChange={selectHourActually} value={hourActually} ></input>\n                        </CCol>\n                    </CRow> \n\n\n                </CContainer>           \n                            \n    \n                <br />\n                <div style={{ alignItems:\"center\" }}  >\n                    <CRow>\n                        <CCol>\n                                <CCard style={{ width: '18rem', height:'100%' }} className=\"container-card\">\n                                    <CCardBody>\n                                        <CCardTitle>Resumo</CCardTitle>\n                                        <CCardText>\n                                            Informações sobre a placa do veículo selecionada.\n                                        </CCardText>\n    \n                                        {/* Passar valores do filtro  */}\n                                    <Resumo />\n                                    </CCardBody>\n                                </CCard>\n                        </CCol>\n    \n                        <CCol>\n                                <CCard style={{ width: '18rem', height:'100%' }} className=\"container-card\">\n                                    <CCardBody>\n                                        <CCardTitle>Viagens</CCardTitle>\n                                        <CCardText>\n                                            Relatórios de viagens do dispositivo.\n                                        </CCardText>\n                                        {/* Passar valores do filtro  */}\n                                        <Viagens />\n                                    </CCardBody>\n                                </CCard>\n                        </CCol>\n    \n                        <CCol>\n                                <CCard style={{ width: '18rem', height:'100%' }} className=\"container-card\">\n                                    <CCardBody>\n                                        <CCardTitle>Rotas</CCardTitle>\n                                        <CCardText>\n                                                Relatório de rotas do dispositivo\n                                        </CCardText>\n                                        {/* Passar valores do filtro  */}\n                                        <Rotas />\n                                    </CCardBody>\n                                </CCard>\n                        </CCol>\n                        \n                    </CRow>\n                </div>\n                <br />\n            </>\n        )\n    }\n   \n}\n\nexport default Report","import React, {useState, useEffect} from 'react'\nimport { BsSearch  } from 'react-icons/bs';\n\nimport {\n    CButton,\n    CTable,\n    CNavbar,\n    CCollapse,\n    CFormSelect ,\n    CNavbarBrand,\n    CNavbarNav,\n    CNavbarToggler,\n    CFormInput,\n    CForm,\n    CTableHead,\n    CTableHeaderCell,\n    CTableDataCell,\n    CTableRow,\n    CTableBody  \n  } from '@coreui/react'\n\nconst infoCars = () =>{\n    const [visible, setVisible] = useState(false)  \n\n   // obter informaçoes via end-point assinaturas\n   const devices = [\n       {name: \"Joao\" ,placa:\"xxx-1234\"  , distancia:39 },\n       {name: \"Maria\" ,placa:\"xyz-4321\"  , distancia:19 },\n       {name: \"Betania\" ,placa:\"yyy-2222\"  , distancia:9 },\n       {name: \"Paulo\" ,placa:\"ppp-1234\"  , distancia:109 },\n   ]\n\n    return (\n        <div > \n            <div className='container-info-cars'>\n                <CNavbar expand=\"lg\"  >\n                    <CNavbarToggler\n                      aria-label=\"Toggle navigation\"\n                      aria-expanded={visible}\n                     \n                    />\n                    <CCollapse className=\"navbar-collapse\" visible={visible}>\n                      {/* <CIcon icon={cilUser } size=\"xl\"/> */}\n                      <CNavbarBrand> Dispositivos  </CNavbarBrand>\n                      <CNavbarBrand> \n                        {/* <CFormSelect \n                          aria-label=\"Default select example\"\n                          options={options}\n                          onChange={menuUsers}\n                        \n                        /> */}\n                      </CNavbarBrand>\n                      <CNavbarNav className=\"me-auto mb-2 mb-lg-0\">\n                      </CNavbarNav>\n                      <CForm className=\"d-flex\">\n                        {/* <CFormInput type=\"text\" onChange={Pegandobusca} value={busca2} size ='md' className=\"me-2\" placeholder=\"Pesquise\" /> */}\n                        <CFormInput type=\"text\"  size ='sm' className=\"me-2\" placeholder=\"Pesquise uma placa\" />\n                        <CButton   variant='ghost'  color=\"secondary\" >\n                          <BsSearch className='user-icons' />\n                        </CButton>\n                        {/* <CButton onClick={retiraFiltro}   variant='ghost'  color=\"secondary\" >\n                          <BsArrowClockwise className='user-icons' />\n                        </CButton> */}\n                      </CForm>\n                    </CCollapse>\n                </CNavbar>\n            </div>\n            <hr />\n            <div className=\"container-infoCars-table\">\n                <CTable align=\"middle\" responsive striped>\n                    <CTableHead>\n                        <CTableRow>\n                            <CTableHeaderCell scope=\"col\" className=\"w-25\">#</CTableHeaderCell>\n                            <CTableHeaderCell scope=\"col\" className=\"w-25\">Name</CTableHeaderCell>\n                            <CTableHeaderCell scope=\"col\" className=\"w-25\">Placa</CTableHeaderCell>\n                            <CTableHeaderCell scope=\"col\" className=\"w-25\">Quilometragem</CTableHeaderCell>\n                        </CTableRow>\n                    </CTableHead>\n                    <CTableBody>\n\n                        {devices.map((device, index) => {\n                            return (\n                                <CTableRow key={index.toString()} >\n                                  <CTableHeaderCell scope=\"row\"> {index}</CTableHeaderCell>\n                                  <CTableDataCell>{device.name}</CTableDataCell>\n                                  <CTableDataCell>{device.placa}</CTableDataCell>\n                                  <CTableDataCell>{device.distancia} Km</CTableDataCell>\n                                </CTableRow>\n                            )\n                        })}\n\n\n                        \n                    </CTableBody>\n                </CTable>\n\n            </div>\n\n\n        </div>\n\n    )\n}\n\nexport default infoCars","import React, {useState} from 'react'\n//import useWebSocket, { ReadyState } from 'react-use-websocket';\n\nimport './tracking.css'\nimport { Spinner, Modal }  from 'react-bootstrap';\nimport { CImage, CButton, CContainer, CRow, CCol } from '@coreui/react'\n\nimport online from './../../assets/images/car_ativo.png'\nimport offline from './../../assets/images/car_desativo.png'\n\nimport {  GoogleMap, Marker, Polyline,  useJsApiLoader} from '@react-google-maps/api';\n\nimport InfoWindowPopup from './render/InfoWindow'\nimport Report from './render/Report'\nimport InfoCar from './render/InfosCars'\n\nimport { BsFillBarChartLineFill, BsCurrencyDollar  } from 'react-icons/bs';\n\nimport tokenMap from './../../configMap'\n\nconst Tracking = () => {\n\n  //Public API that will echo messages sent to it back to the client\n  const [socketUrl, setSocketUrl] = useState('wss://echo.websocket.org');\n  const [messageHistory, setMessageHistory] = useState([]);\n\n  const [response, setResponse] = useState(\"\");\n\n  const containerStyle = {\n    width: '100%' ,\n    height: '80vh'\n  };\n\n  const center = {\n    lat: -19.9190991,\n    lng: -43.9385985\n  };\n\n  const options = {\n    // styles: mapSyles,\n    disableDefaultUI: true,\n    zoomControl:true,\n    fullscreenControl: true,\n    streetViewControl: true,\n  }\n\n  const libraries = [\"places\"];\n\n  const { isLoaded } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: tokenMap,  // trocar o token aqui, TOKEN PESSOAL \n    libraries,\n  })\n\n  const [statusCarro, setStatusCarro] = useState(false)\n  const [map, setMap] = React.useState(null)\n  const onUnmount = React.useCallback(function callback(map) {\n      setMap(null)\n  }, [])\n\n    \n  const pos = [\n    {   \n        id:2,\n        name:'Gol bola',\n        actuallyPosition: {lat:-19.956813 , lng:-43.957453},\n        path : [\n          {lat:-19.956813 ,lng:-43.957453}, \n          {lat:-19.958517 ,lng:-43.957120}, \n          {lat:-19.959273 ,lng:-43.957313}, \n          {lat:-19.960473 ,lng:-43.957410},\n          {lat:-19.961623 ,lng:-43.957206} \n        ],\n        status:1, \n        title: \"Uluru (Ayers Rock)\"\n    },\n    {   \n        id:3,\n        name:'pegeout 207',\n        actuallyPosition: {lat:-19.941351, lng: -44.007802},\n        path : [\n          {lat:-19.941351 ,lng:-44.007802}, \n          {lat:-19.943328 ,lng:-44.007822}, \n          {lat:-19.945738 ,lng:-44.007931}, \n          {lat:-19.947402 ,lng:-44.008073}, \n          {lat:-19.949974 ,lng:-44.008435},\n          {lat:-19.951154 ,lng:-44.007984}, \n        ],\n        status:1, \n        title: \"Uluru (Ayers Rock)222\"\n    },\n    {   \n        id:4,\n        name:'Camaro',\n        actuallyPosition: {lat:-19.963912, lng: -43.962984},\n        status:1, \n        path : [\n          {lat:-19.963912 ,lng:-43.962984},\n          {lat:-19.964376 ,lng:-43.962540},\n          {lat:-19.964684 ,lng:-43.962052},\n          {lat:-19.965087 ,lng:-43.960722},\n        ],\n        title: \"Uluru (Ayers Rock)222\"\n    },\n    {   \n        id:5,\n        name:'Mustang',\n        actuallyPosition: {lat:-19.969876, lng: -43.944595},\n        path : [\n          {lat:-19.969876 ,lng:-43.944595}, \n          {lat:-19.968899 ,lng:-43.944242}, \n          {lat:-19.967467 ,lng:-43.943652}, \n          {lat:-19.966489 ,lng:-43.942332},  \n          {lat:-19.966045 ,lng:-43.940937}, \n          {lat:-19.965400 ,lng:-43.939542}\n        ],\n        status:0,  \n        title: \"Uluru (Ayers Rock)22\"\n    },\n  ]\n\n  const [show, setShow] = useState(false);\n  const [flagBTN, setFlagBTN] = useState(true)\n\n  // Modal 1 de relatorio\n  function openModal(){\n      const handleShow =  setShow(true);\n      setFlagBTN(false)\n      setFlagBTN2(false)\n  }\n\n  const closePopup = () =>{\n    setSelecionado('')\n  }\n\n  const closeModal = () =>{\n    setFlagBTN(true)\n    setFlagBTN2(true)\n    setShow(false)\n  }\n\n  const [show2, setShow2] = useState(false);\n  const [flagBTN2, setFlagBTN2] = useState(true)\n\n  // Modal 2 de informações dos carros \n  function openModal2(){\n    const handleShow2 =  setShow2(true);\n    setFlagBTN2(false)\n    setFlagBTN(false)\n  } \n\n  const closeModal2 = () =>{\n    setFlagBTN2(true)\n    setFlagBTN(true)\n    setShow2(false)\n  }\n\n  const onLoad = polyline => {\n    console.log('polyline: ', polyline)\n  };\n  \n  \n  const [selecionado, setSelecionado] = useState('')\n  // escolhe o carro no map\n  const selected = (e) =>{\n    setSelecionado(e)\n  }\n\n    if(isLoaded){\n      return (\n        <> \n          <div className='porBaixo'>\n            <div className='porCima'> \n              {flagBTN === true ? \n                (   <CButton className='button-css' size=\"sm\" onClick={openModal} color=\"dark\" >\n                      <BsFillBarChartLineFill />\n                    </CButton>)\n                :null\n              }\n              <div className='modalPorCima'>\n                <Modal \n                  show={show} \n                  onHide={closeModal}\n                  size=\"xl\"\n                >\n                  <Modal.Header  closeButton>\n                      <Modal.Title>Relatórios</Modal.Title>\n                  </Modal.Header>\n                  <Modal.Body className='container-body'>\n                      <Report /> \n                  </Modal.Body>\n                  <Modal.Footer>  \n                      <CButton  onClick={closeModal}>\n                          Sair\n                      </CButton>\n                  </Modal.Footer>\n                </Modal>\n              </div>\n            </div>\n\n\n            <div className='porCima2'> \n              {flagBTN2 === true ? \n                (   <CButton className='button-css' size=\"sm\" onClick={openModal2} color=\"warning\" >\n                      <BsCurrencyDollar />\n                    </CButton>)\n                :null\n              }\n           \n              <div className='modalPorCima2'>\n                <Modal \n                  show={show2} \n                  onHide={closeModal2}\n                  size=\"xl\"\n                >\n                  {/* <Modal.Header  closeButton>\n                      <Modal.Title>Dispositivos</Modal.Title>\n                  </Modal.Header> */}\n                  <Modal.Body className='container-body'>\n                      <InfoCar /> \n                  </Modal.Body>\n                  <Modal.Footer>  \n                      <CButton  onClick={closeModal2}>\n                          Sair\n                      </CButton>\n                  \n                  </Modal.Footer>\n                </Modal>\n              </div>\n            </div>\n\n            <GoogleMap\n              mapContainerStyle={containerStyle}\n              center={center}\n              zoom={10}\n              onUnmount={onUnmount}\n              options={options} // muda a estilizacao do mapa\n            >\n              \n\n              {pos.map((item, index) =>{\n                if(item.status == 1){\n                  return (\n                    <div key={index.toString()}>\n                      <Polyline\n                        path={item.path}\n                      />\n                      <Marker\n                        key={item.id}\n                        position={{lat:item.actuallyPosition.lat, lng:item.actuallyPosition.lng} }\n                        icon={{\n                          url: online,\n                          scaledSize: new window.google.maps.Size(32,32),\n                          origin: new window.google.maps.Point(0,0),\n                          anchor: new window.google.maps.Point(15,15),\n                        }} \n                        \n                        onClick={() => {selected(item)}}\n                      /> \n                      {selecionado != '' ? \n                        (\n                          <InfoWindowPopup closePop={closePopup} device={selecionado} />\n                        )\n                          :null\n                      }\n                    </div>\n                  )\n                }else{\n                  return (\n                    <div key={index.toString()}>\n                      <Polyline\n                        path={item.path}\n                      />\n                      <Marker\n                        key={item.id}\n                        position={{lat:item.actuallyPosition.lat, lng:item.actuallyPosition.lng} }\n                        icon={{\n                          url: offline,\n                          scaledSize: new window.google.maps.Size(30,30),\n                          origin: new window.google.maps.Point(0,0),\n                          anchor: new window.google.maps.Point(15,15),\n                        }} \n                        onClick={() => {selected(item)}}\n                      />\n\n                      {selecionado != '' ? \n                        (\n                          <InfoWindowPopup closePop={closePopup} device={selecionado}/>\n                        )\n                          :null\n                      }\n                    </div>\n                  )\n                }\n              })}\n\n            </GoogleMap>\n          </div>\n          \n        </>\n    )\n    }else{\n      return(\n        <>\n          <h4> <Spinner animation=\"grow\" variant=\"info\" />  </h4> \n        </>\n      )\n    }\n  \n  \n  }\n\nexport default Tracking"],"sourceRoot":""}