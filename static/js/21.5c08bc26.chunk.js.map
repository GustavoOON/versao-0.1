{"version":3,"sources":["../node_modules/classnames/index.js","../node_modules/react-bootstrap/esm/ThemeProvider.js","config.js","views/components/Pagination.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/react-bootstrap/esm/Spinner.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","views/coverages/render/BtnEdit.jsx","views/coverages/render/NewServices.jsx","views/coverages/render/Status.jsx","views/coverages/Services.jsx"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","key","call","join","module","exports","default","ThemeContext","React","prefixes","Consumer","Provider","useBootstrapPrefix","prefix","defaultPrefix","useContext","configCookies","token","Cookies","get","headers","Authorization","urlDomain","Pagination","numberOfPages","page","previousPage","setPreviousPage","currentPage","setCurrentPage","nextPage","setNextPage","qtdElements","name","capturePreviousPage","e","nPage","captureNextPage","className","onClick","variant","defaultChecked","active","Spinner","ref","bsPrefix","animation","size","as","Component","props","bsSpinnerPrefix","_jsx","displayName","asyncGeneratorStep","gen","resolve","reject","_next","_throw","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","err","undefined","CryptoJS","require","BtnEdit","useState","nameService","usT","AES","decrypt","visible","setVisible","deleteCoverage","setDeleteCoverage","item","description","servico","setServico","parseFloat","valuePerKm","valueKm","setValueKm","a","alignment","onClose","onChange","target","options","map","label","rows","type","required","min","step","BtnNewService","setNameService","placeholder","Status","status","valid","Services","setNumberOfPages","useEffect","data","totalPages","busca","msgOri","enc","Utf8","services","userType","busca2","setBusca","dados2","dados","id","eventId","icon","BuscaUser","auxBusca","toLocaleLowerCase","includes","setDados","atualizar","color","attPage","striped","align","hover","responsive","console","log","index","disabled","parentCallback"],"mappings":"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","file":"static/js/21.5c08bc26.chunk.js","sourcesContent":["/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ThemeContext = /*#__PURE__*/React.createContext({\n  prefixes: {}\n});\nconst {\n  Consumer,\n  Provider\n} = ThemeContext;\n\nfunction ThemeProvider({\n  prefixes = {},\n  dir,\n  children\n}) {\n  const contextValue = useMemo(() => ({\n    prefixes: { ...prefixes\n    },\n    dir\n  }), [prefixes, dir]);\n  return /*#__PURE__*/_jsx(Provider, {\n    value: contextValue,\n    children: children\n  });\n}\n\nexport function useBootstrapPrefix(prefix, defaultPrefix) {\n  const {\n    prefixes\n  } = useContext(ThemeContext);\n  return prefix || prefixes[defaultPrefix] || defaultPrefix;\n}\nexport function useIsRTL() {\n  const {\n    dir\n  } = useContext(ThemeContext);\n  return dir === 'rtl';\n}\n\nfunction createBootstrapComponent(Component, opts) {\n  if (typeof opts === 'string') opts = {\n    prefix: opts\n  };\n  const isClassy = Component.prototype && Component.prototype.isReactComponent; // If it's a functional component make sure we don't break it with a ref\n\n  const {\n    prefix,\n    forwardRefAs = isClassy ? 'ref' : 'innerRef'\n  } = opts;\n  const Wrapped = /*#__PURE__*/React.forwardRef(({ ...props\n  }, ref) => {\n    props[forwardRefAs] = ref;\n    const bsPrefix = useBootstrapPrefix(props.bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Component, { ...props,\n      bsPrefix: bsPrefix\n    });\n  });\n  Wrapped.displayName = `Bootstrap(${Component.displayName || Component.name})`;\n  return Wrapped;\n}\n\nexport { createBootstrapComponent, Consumer as ThemeConsumer };\nexport default ThemeProvider;","import Cookies from \"js-cookie\";\n\n// Endereço padrão das API\n\nconst prod = \"http://dashboardbff.oonpayperuse.com.br\";\nconst dev = \"http://localhost:8080\";\n\nconst tokenMaps = \"AIzaSyB9I7snvZRRQ6faupULeBXYz5tU2AUuWek\"; // TOKEN PESSOAL\nconst urlDomain = prod;\n\nexport const configCookies = () => {\n    const token = Cookies.get(\"TokenID\");\n\n    const authorization = {\n        headers: {\n            Authorization: `Bearer ${token}`,\n            \"Content-Type\": \"application/json;charset=UTF-8\",\n            \"Access-Control-Allow-Origin\": \"*\",\n        },\n    };\n\n    return authorization;\n};\n\nexport default  urlDomain;\n","import React from 'react';\nimport { CButton, CPagination } from '@coreui/react';\nimport { TiChevronLeftOutline, TiChevronRightOutline } from 'react-icons/ti';\n\nimport './pagination.css';\n\nfunction Pagination({\n    numberOfPages,\n    page,\n    previousPage,\n    setPreviousPage,\n    currentPage,\n    setCurrentPage,\n    nextPage,\n    setNextPage,\n    qtdElements,\n    name,\n}) {\n    function capturePreviousPage(e, nPage) {\n        if (currentPage == 1) {\n            setPreviousPage('');\n            setNextPage(2);\n        } else if (e == nPage) {\n            setNextPage(2);\n            setCurrentPage(1);\n            setPreviousPage('');\n        } else {\n            setNextPage(currentPage);\n            setCurrentPage(currentPage - 1);\n            setPreviousPage(currentPage - 2);\n        }\n        const aux = e - 1;\n        page(aux);\n    }\n\n    // Proxima pagina\n    function captureNextPage(e, nPage) {\n        if (currentPage == 1 && nPage == 2) {\n            setNextPage('');\n            setCurrentPage(currentPage + 1);\n            setPreviousPage(1);\n        } else if (e == nPage) {\n            setNextPage('');\n            setCurrentPage(e);\n            setPreviousPage(numberOfPages - 1);\n        } else if (currentPage == 1 && nPage != 2) {\n            setNextPage(3);\n            setCurrentPage(currentPage + 1);\n            setPreviousPage(1);\n        } else if (currentPage < nPage - 1) {\n            setNextPage(currentPage + 2);\n            setCurrentPage(currentPage + 1);\n            setPreviousPage(currentPage);\n        }\n        const aux = e - 1;\n        page(aux);\n    }\n\n    return (\n        <CPagination\n            className=\"container-devices-pagination\"\n            aria-label=\"Page navigation example\"\n        >\n            {qtdElements ? (\n                <label className=\"container-qtd-employeer\">\n                    Há {qtdElements} {name}\n                </label>\n            ) : null}\n            <div className=\"container-pagination-align justify-content-end\">\n                {previousPage != '' ? (\n                    <>\n                        <CButton\n                            className=\"btn-user-pagination\"\n                            onClick={() => {\n                                capturePreviousPage(\n                                    previousPage,\n                                    numberOfPages\n                                );\n                            }}\n                            variant=\"outline\"\n                        >\n                            <TiChevronLeftOutline />\n                        </CButton>\n                        {currentPage > 2 ? (\n                            <>\n                                <CButton\n                                    className=\"btn-user-pagination\"\n                                    onClick={() => capturePreviousPage(1, 1)}\n                                    variant=\"outline\"\n                                >\n                                    1\n                                </CButton>\n                                <span>...</span>\n                            </>\n                        ) : null}\n                        <CButton\n                            className=\"btn-user-pagination\"\n                            onClick={() => {\n                                capturePreviousPage(\n                                    previousPage,\n                                    numberOfPages\n                                );\n                            }}\n                            variant=\"outline\"\n                        >\n                            {previousPage}\n                        </CButton>\n                    </>\n                ) : null}\n                {currentPage == 0 ? (\n                    <CButton\n                        className=\"btn-user-pagination\"\n                        defaultChecked\n                        active={true}\n                    >\n                        {currentPage + 1}\n                    </CButton>\n                ) : (\n                    <CButton\n                        className=\"btn-user-pagination\"\n                        defaultChecked\n                        active={true}\n                    >\n                        {currentPage}\n                    </CButton>\n                )}\n                {currentPage === numberOfPages - 1 ? (\n                    <>\n                        <CButton\n                            className=\"btn-user-pagination\"\n                            onClick={() =>\n                                captureNextPage(nextPage, numberOfPages)\n                            }\n                            variant=\"outline\"\n                        >\n                            {nextPage}\n                        </CButton>\n                        <CButton\n                            className=\"btn-user-pagination\"\n                            onClick={() =>\n                                captureNextPage(nextPage, numberOfPages)\n                            }\n                            variant=\"outline\"\n                        >\n                            <TiChevronRightOutline />\n                        </CButton>\n                    </>\n                ) : null}\n                {nextPage < numberOfPages && nextPage !== '' ? (\n                    <>\n                        <CButton\n                            className=\"btn-user-pagination\"\n                            onClick={() =>\n                                captureNextPage(nextPage, numberOfPages)\n                            }\n                            variant=\"outline\"\n                        >\n                            {nextPage}\n                        </CButton>\n                        <span>...</span>\n                        <CButton\n                            className=\"btn-user-pagination\"\n                            onClick={() =>\n                                captureNextPage(numberOfPages, numberOfPages)\n                            }\n                            variant=\"outline\"\n                        >\n                            {numberOfPages}\n                        </CButton>\n                        <CButton\n                            className=\"btn-user-pagination\"\n                            onClick={() =>\n                                captureNextPage(nextPage, numberOfPages)\n                            }\n                            variant=\"outline\"\n                        >\n                            <TiChevronRightOutline />\n                        </CButton>\n                    </>\n                ) : null}\n            </div>\n        </CPagination>\n    );\n}\n\nexport default Pagination;\n","module.exports = require(\"regenerator-runtime\");\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Spinner = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  variant,\n  animation,\n  size,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  className,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'spinner');\n  const bsSpinnerPrefix = `${bsPrefix}-${animation}`;\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsSpinnerPrefix, size && `${bsSpinnerPrefix}-${size}`, variant && `text-${variant}`)\n  });\n});\nSpinner.displayName = 'Spinner';\nexport default Spinner;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import React, { useState } from 'react';\nimport axios from 'axios';\nimport Cookies from 'js-cookie';\n// import UrlDomain, { configCookies } from './../../config'\n\nvar CryptoJS = require('crypto-js');\n\nimport {\n    CButton,\n    CFormInput,\n    CFormLabel,\n    CRow,\n    CCol,\n    CModal,\n    CModalHeader,\n    CModalBody,\n    CForm,\n    CFormSelect,\n    CFormTextarea,\n    CModalFooter,\n    CModalTitle,\n} from '@coreui/react';\n\nconst BtnEdit = (props) => {\n    const [nameService, setNameService] = useState([\n        'Roubo e furto',\n        'Chaveiro',\n        'Capotamento',\n    ]);\n    var usT = Cookies.get('userType');\n    var msg = CryptoJS.AES.decrypt(usT, 'OnnSeguros');\n\n    // const config = configCookies()\n\n    const [visible, setVisible] = useState(false);\n    const [deleteCoverage, setDeleteCoverage] = useState(false);\n\n    const [servico, setServico] = useState(props.item.description);\n    const servicoNome = (e) => {\n        setServico(e.target.value);\n    };\n\n    const [descricao, setDescricao] = useState('Campo ainda não aplicado....');\n    const serviceDescricao = (e) => {\n        setDescricao(e.target.value);\n    };\n\n    const [valueKm, setValueKm] = useState(parseFloat(props.item.valuePerKm));\n    const newValueKm = (e) => {\n        setValueKm(e.target.value);\n    };\n\n    const [status, setStatus] = useState(false);\n    const getStatus = (e) => {\n        setStatus(e);\n    };\n\n    async function salvarEdicoes() {\n        // setVisible(false);\n        // let save = { id: props.item.id, description: servico, disabled: status, valuePerKm: valueKm }\n        // await axios\n        //     .patch(`${UrlDomain}/coverages`, save, config)\n        //     .then((response) => {\n        //         setVisible(false);\n        //         props.parentCallback()\n        //     })\n        //     .catch(r => {\n        //         console.log('error', r), alert('Login expirado') //,window.location.reload()\n        //     }) // window.location.reload();\n    }\n\n    return deleteCoverage ? (\n        <CModal alignment=\"center\" visible={deleteCoverage}>\n            <CModalBody>\n                <p className=\"text-center m-5 text-delete\">\n                    Você tem certeza que deseja deletar esse serviço?\n                </p>\n                <div className=\"mb-3 d-flex justify-content-around\">\n                    <CButton className=\"btn-save-global\" size=\"lg\">\n                        Sim, deletar\n                    </CButton>\n                    <CButton\n                        size=\"lg\"\n                        className=\"btn-cancel-global\"\n                        variant=\"outline\"\n                        onClick={() => setDeleteCoverage(false)}\n                    >\n                        Cancelar\n                    </CButton>\n                </div>\n            </CModalBody>\n        </CModal>\n    ) : (\n        <>\n            <CButton\n                className=\"btn-cancel-global\"\n                variant=\"outline\"\n                onClick={() => setVisible(true)}\n            >\n                Editar\n            </CButton>\n\n            <CModal\n                visible={visible}\n                onClose={() => setVisible(false)}\n                size=\"xl\"\n            >\n                <CModalHeader>\n                    <CModalTitle className=\"title-modal\">Editar</CModalTitle>\n                </CModalHeader>\n                <CModalBody>\n                    <CRow>\n                        <CCol>\n                            <CForm>\n                                <CFormLabel>Nome do Serviço</CFormLabel>\n                                <CFormSelect\n                                    value={servico}\n                                    onChange={servicoNome}\n                                    options={nameService.map(\n                                        (label, value) => ({ label, value })\n                                    )}\n                                />\n                                <br />\n                                <CFormLabel>Descrição</CFormLabel>\n                                <CFormTextarea rows=\"5\"></CFormTextarea>\n                            </CForm>\n                        </CCol>\n                        <CCol>\n                            <CForm>\n                                <CFormLabel>Tipo de serviço</CFormLabel>\n                                <CFormSelect\n                                    // onChange={}\n                                    options={[\n                                        {\n                                            label: 'Sinistro',\n                                            value: 0,\n                                        },\n                                        {\n                                            label: 'Assistência',\n                                            value: 0,\n                                        },\n                                    ]}\n                                />\n                                <br />\n                                <CFormLabel>Valor por km (R$)</CFormLabel>\n                                <div className=\"container-icon-input\">\n                                    <label className=\"icon-search-global  i-absolute-global\">\n                                        R$\n                                    </label>\n                                    <CFormInput\n                                        className=\"input-km\"\n                                        value={valueKm}\n                                        type=\"number\"\n                                        required\n                                        min=\"0.00\"\n                                        step=\".01\"\n                                        onChange={newValueKm}\n                                    />\n                                </div>\n                                <br />\n                                <CFormLabel>Fluxo de assistência</CFormLabel>\n                                <CFormSelect\n                                    // onChange={}\n                                    options={[\n                                        {\n                                            label: 'Fluxo de Alagamentos',\n                                            value: 0,\n                                        },\n                                    ]}\n                                />\n                            </CForm>\n                            <br />\n                        </CCol>\n                    </CRow>\n                </CModalBody>\n\n                <CModalFooter>\n                    <div className=\"flex-grow-1\">\n                        <CButton\n                            className=\"btn-cancel-global\"\n                            variant=\"outline\"\n                            onClick={() => setDeleteCoverage(true)}\n                        >\n                            Deletar serviço\n                        </CButton>\n                    </div>\n\n                    <CButton\n                        className=\"btn-cancel-global\"\n                        variant=\"outline\"\n                        onClick={() => setVisible(false)}\n                    >\n                        Cancelar\n                    </CButton>\n                    <CButton\n                        className=\"btn-save-global\"\n                        onClick={salvarEdicoes}\n                    >\n                        Salvar\n                    </CButton>\n                </CModalFooter>\n            </CModal>\n        </>\n    );\n};\n\nexport default BtnEdit;\n","import React, { useState } from 'react';\nimport axios from 'axios';\nimport Cookies from 'js-cookie';\nimport {\n    CButton,\n    CFormInput,\n    CFormLabel,\n    CRow,\n    CCol,\n    CFormSelect,\n    CFormTextarea,\n    CForm,\n    CModal,\n    CModalTitle,\n    CModalBody,\n    CModalHeader,\n    CModalFooter,\n} from '@coreui/react';\n\nimport UrlDomain, { configCookies } from './../../../config';\n\nconst BtnNewService = (props) => {\n    const [visible, setVisible] = useState(false);\n    const [describe, setDescribe] = useState();\n    const [nameService, setNameService] = useState([\n        'Roubo e furto',\n        'Chaveiro',\n        'Capotamento',\n    ]);\n    const [valuePerKm, setValuePerKm] = useState();\n\n    function captureDescribe(e) {\n        setDescribe(e.target.value);\n    }\n\n    function captureName(e) {\n        setNameService(e.target.value);\n    }\n\n    function captureValue(e) {\n        setValuePerKm(e.target.value);\n    }\n\n    function salvarEdicoes() {\n        // let save = [\n        //     {\n        //         description: nameService,\n        //         valuePerKm: parseFloat(valuePerKm)\n        //     }\n        // ]\n        // const config = configCookies()\n        // axios\n        //     .post(`${UrlDomain}/coverages`, save, config)\n        //     .then((response) => {\n        //         setVisible(false);\n        //         props.attPage()\n        //     })\n        //     .catch(r => {\n        //         console.log('error', r), alert('Login expirado'), window.location.reload()\n        //     }) // window.location.reload();\n    }\n\n    return (\n        <>\n            <CButton\n                className=\"btn-save-global\"\n                onClick={() => setVisible(!visible)}\n            >\n                Adicionar cobertura\n            </CButton>\n\n            <CModal\n                visible={visible}\n                onClose={() => setVisible(false)}\n                size=\"xl\"\n            >\n                <CModalHeader>\n                    <CModalTitle className=\"title-modal\">Adicionar</CModalTitle>\n                </CModalHeader>\n                <CModalBody className=\"container-body\">\n                    <CRow>\n                        <CCol>\n                            <CForm>\n                                <CFormLabel>Nome do Serviço</CFormLabel>\n                                <CFormSelect\n                                    onChange={captureName}\n                                    options={nameService.map(\n                                        (label, value) => ({ label, value })\n                                    )}\n                                />\n                                <br />\n                                <CFormLabel>Descrição</CFormLabel>\n                                <CFormTextarea rows=\"5\"></CFormTextarea>\n                            </CForm>\n                        </CCol>\n                        <CCol>\n                            <CForm>\n                                <CFormLabel>Tipo de serviço</CFormLabel>\n                                <CFormSelect\n                                    // onChange={}\n                                    options={[\n                                        {\n                                            label: 'Sinistro',\n                                            value: 0,\n                                        },\n                                        {\n                                            label: 'Assistência',\n                                            value: 0,\n                                        },\n                                    ]}\n                                />\n                                <br />\n                                <CFormLabel>Valor por km (R$)</CFormLabel>\n                                <div className=\"container-icon-input\">\n                                    <label className=\"icon-search-global  i-absolute-global\">\n                                        R$\n                                    </label>\n                                    <CFormInput\n                                        className=\"input-km\"\n                                        type=\"number\"\n                                        required\n                                        min=\"0.00\"\n                                        step=\".01\"\n                                        placeholder=\"0,00\"\n                                    />\n                                </div>\n                                <br />\n                                <CFormLabel>Fluxo de assistência</CFormLabel>\n                                <CFormSelect\n                                    // onChange={}\n                                    options={[\n                                        {\n                                            label: 'Fluxo de Roubo e Furto',\n                                            value: 0,\n                                        },\n                                    ]}\n                                />\n                            </CForm>\n                        </CCol>\n                    </CRow>\n                </CModalBody>\n\n                <CModalFooter>\n                    <CButton\n                        className=\"btn-cancel-global\"\n                        variant=\"outline\"\n                        onClick={() => setVisible(false)}\n                    >\n                        Cancelar\n                    </CButton>\n                    <CButton\n                        className=\"btn-save-global\"\n                        onClick={salvarEdicoes}\n                    >\n                        Salvar\n                    </CButton>\n                </CModalFooter>\n            </CModal>\n        </>\n    );\n};\n\nexport default BtnNewService;\n","import React from 'react';\nimport { CForm, CFormSwitch } from '@coreui/react';\n\nconst Status = (props) => {\n    if (props.status == true) {\n        return (\n            <CForm className=\"d-flex justify-content-center\">\n                <CFormSwitch defaultChecked />\n            </CForm>\n        );\n    } else {\n        return (\n            <CForm className=\"d-flex justify-content-center\">\n                <CFormSwitch valid={true} defaultChecked />\n            </CForm>\n        );\n    }\n};\n\nexport default Status;\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport {\n    CButton,\n    CCard,\n    CCardBody,\n    CFormInput,\n    CNavbar,\n    CTable,\n    CTableBody,\n    CTableDataCell,\n    CTableHead,\n    CTableHeaderCell,\n    CTableRow,\n} from '@coreui/react';\nimport Cookies from 'js-cookie';\nimport { Spinner } from 'react-bootstrap';\nimport { BiSearchAlt2 } from 'react-icons/bi';\nimport { MdOutlineFilterList } from 'react-icons/md';\n\n// import UrlDomain, { configCookies } from './../../config'\nimport BtnEditarRender from './render/BtnEdit';\nimport NovosServicos from './render/NewServices';\nimport StatusRender from './render/Status';\nimport Pagination from '../components/Pagination';\n\nimport './css/service.css';\n\nvar CryptoJS = require('crypto-js');\n\nconst Services = () => {\n    const [previousPage, setPreviousPage] = useState('');\n    const [currentPage, setCurrentPage] = useState(1);\n    const [nextPage, setNextPage] = useState('');\n    const [numberOfPages, setNumberOfPages] = useState(0);\n    const [qtdElements, setQtdElements] = useState(1);\n\n    function page(e) {}\n    function initPages(e) {\n        if (e.data.totalPages > 1) {\n            setCurrentPage(1);\n            setNextPage(2);\n            setPreviousPage('');\n        }\n    }\n\n    useEffect(() => {\n        initPages({ data: { totalPages: 10 } });\n        setNumberOfPages(4);\n    }, []);\n    // descriptando\n    var usT = Cookies.get('userType');\n    var msg = CryptoJS.AES.decrypt(usT, 'OnnSeguros');\n    var msgOri = msg.toString(CryptoJS.enc.Utf8);\n\n    const [services, setServices] = useState([]);\n    // const token = Cookies.get('TokenID')\n    const userType = msgOri;\n\n    // let config = {\n    //     headers: {\n    //     'Authorization': `Bearer ${token}`,\n    //     'Content-Type': 'application/json;charset=UTF-8',\n    //     \"Access-Control-Allow-Origin\": \"*\",\n    //     }\n    // };\n\n    // const [dados, setDados] = useState(services)\n    const [busca2, setBusca] = useState('');\n    let busca;\n    const dados2 = [];\n\n    const dados = [\n        {\n            id: '93af6e15-438e-42f5-b33f-2e9fcb454d97',\n            eventId: '1',\n            name: 'Pane seca APAGAR',\n            valuePerKm: 0.0,\n            description: 'Pane por falta de combustível',\n            icon: 'sdsd',\n            type: 'Sinistro',\n        },\n    ];\n    const buscaService = (e) => {\n        setBusca(e.target.value);\n        busca = e.target.value;\n        BuscaUser();\n    };\n\n    const BuscaUser = () => {\n        let auxBusca = busca.toLocaleLowerCase();\n\n        services.map((item) => {\n            let auxService = item.description.toLocaleLowerCase(); // ALTERAR AQUI DE ACORDO COM OS CAMPOS DA API\n\n            if (auxService.includes(auxBusca)) {\n                dados2.push(item);\n                setDados(dados2);\n            }\n        });\n    };\n\n    const atualizar = () => {\n        // setDados([])\n        // const config = configCookies()\n        // axios\n        //     .get(`${UrlDomain}/coverages`, config)\n        //     .then((response) => {\n        //         setServices(response.data)\n        //         setDados(response.data)\n        //     })\n        //     .catch(r => {\n        //         console.log('error', r), alert('Login expirado'), window.location.reload()\n        //     }) // window.location.reload();\n    };\n\n    // useEffect(() => {\n    //     const config = configCookies()\n    //     axios\n    //         .get(`${UrlDomain}/coverages`, config)\n    //         .then((response) => {\n    //             setServices(response.data)\n    //             setDados(response.data)\n    //         })\n    //         .catch(r => {\n    //             console.log('error', r), alert('Login expirado'), window.location.reload()\n    //         }) // window.location.reload();\n    // }, [])\n\n    if (dados == '') {\n        return <Spinner animation=\"grow\" variant=\"info\" />;\n    } else {\n        return (\n            <CCard>\n                <CCardBody>\n                    <CNavbar className=\"justify-content-between\">\n                        <div className=\"d-flex\">\n                            <div className=\"container-icon-input\">\n                                <i className=\"icon-search-global i-absolute-global\">\n                                    <BiSearchAlt2 color=\"#6D6D6D\" />\n                                </i>\n                                <CFormInput\n                                    className=\"input-search-global\"\n                                    type=\"search\"\n                                    onChange={buscaService}\n                                    value={busca2}\n                                    placeholder=\"Pesquisar\"\n                                />\n                            </div>\n                            <CButton\n                                className=\"ms-2 btn-search-global\"\n                                variant=\"outline\"\n                                onClick={atualizar}\n                            >\n                                Buscar\n                            </CButton>\n                        </div>\n                        <div>\n                            {userType == 'ADMIN' ? (\n                                <NovosServicos attPage={atualizar} />\n                            ) : null}\n                        </div>\n                    </CNavbar>\n                    <br />\n                    <CTable\n                        striped\n                        align=\"middle\"\n                        className=\"mb-0\"\n                        hover\n                        responsive\n                    >\n                        <CTableHead>\n                            <CTableRow>\n                                <CTableHeaderCell className=\"p-1\">\n                                    Serviços\n                                    <CButton\n                                        onClick={() =>\n                                            console.log('ordenar lista')\n                                        }\n                                        size=\"sm\"\n                                        color=\"link\"\n                                    >\n                                        <MdOutlineFilterList\n                                            size={24}\n                                            color=\"black\"\n                                        />\n                                    </CButton>\n                                </CTableHeaderCell>\n\n                                <CTableHeaderCell className=\"p-1\">\n                                    Tipo\n                                    <CButton\n                                        onClick={() =>\n                                            console.log('ordenar lista')\n                                        }\n                                        size=\"sm\"\n                                        color=\"link\"\n                                    >\n                                        <MdOutlineFilterList\n                                            size={24}\n                                            color=\"black\"\n                                        />\n                                    </CButton>\n                                </CTableHeaderCell>\n\n                                <CTableHeaderCell className=\"text-center\">\n                                    Status\n                                </CTableHeaderCell>\n\n                                <CTableHeaderCell className=\"text-center\">\n                                    Valor por km (R$)\n                                </CTableHeaderCell>\n                                <CTableHeaderCell></CTableHeaderCell>\n                            </CTableRow>\n                        </CTableHead>\n\n                        <CTableBody>\n                            {dados.map((item, index) => (\n                                <CTableRow key={index}>\n                                    <CTableDataCell>\n                                        {item.description}\n                                    </CTableDataCell>\n\n                                    <CTableDataCell>{item.type}</CTableDataCell>\n\n                                    <CTableDataCell>\n                                        <StatusRender status={item.disabled} />\n                                    </CTableDataCell>\n\n                                    <CTableDataCell className=\"text-center\">\n                                        R$ {item.valuePerKm}\n                                    </CTableDataCell>\n\n                                    <CTableDataCell className=\"text-center\">\n                                        {userType == 'ADMIN' ? (\n                                            <BtnEditarRender\n                                                item={item}\n                                                parentCallback={atualizar}\n                                            />\n                                        ) : null}\n                                    </CTableDataCell>\n                                </CTableRow>\n                            ))}\n                        </CTableBody>\n                    </CTable>\n                </CCardBody>\n                <Pagination\n                    page={page}\n                    numberOfPages={numberOfPages}\n                    previousPage={previousPage}\n                    setPreviousPage={setPreviousPage}\n                    currentPage={currentPage}\n                    setCurrentPage={setCurrentPage}\n                    nextPage={nextPage}\n                    setNextPage={setNextPage}\n                    name={'coberturas'}\n                    qtdElements={qtdElements}\n                />\n            </CCard>\n        );\n    }\n};\n\nexport default Services;\n"],"sourceRoot":""}