{"version":3,"sources":["../node_modules/react-icons/lib/esm/iconsManifest.js","../node_modules/react-icons/lib/esm/iconContext.js","../node_modules/react-icons/lib/esm/iconBase.js","views/tracking/components/FormatDate.jsx","views/panel/render/ModalReport.jsx","views/panel/render/ModalGraphic.jsx","views/panel/widgets/WidgetsDropdown.jsx"],"names":["DefaultContext","color","undefined","size","className","style","attr","IconContext","React","createContext","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","Tree2Element","tree","map","node","createElement","tag","key","child","GenIcon","data","props","IconBase","elem","conf","title","svgProps","computedSize","stroke","fill","strokeWidth","height","width","xmlns","children","Consumer","FormatDate","date","Date","week","getDay","day","getDate","month","getMonth","year","getFullYear","hours","getHours","minute","getMinutes","fontSize","ModalReport","visibleReport","setVisibleReport","visible","onClose","closeButton","md","variant","onClick","ModalGraphic","visibleGraphic","setVisibleGraphic","useState","value","onChange","flush","type","placeholder","WidgetsDropdown","valor","porcentagem","acumuladoMensal","widget1","qtdAbertos","sinistroMes","widgetSinistro","planAnalise","planAtivo","planDesativado","planosData","xs","action","alignment","caret","icon","cilOptions","content","name","index","console","log","placement","disabled","chart","labels","datasets","label","backgroundColor","borderColor","pointBackgroundColor","options","plugins","legend","display","maintainAspectRatio","scales","x","grid","drawBorder","ticks","y","min","max","elements","line","borderWidth","tension","point","radius","hitRadius","hoverRadius","sm"],"mappings":"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","file":"static/js/28.0c745159.chunk.js","sourcesContent":["export var IconsManifest = [\n  {\n    \"id\": \"fa\",\n    \"name\": \"Font Awesome\",\n    \"projectUrl\": \"https://fontawesome.com/\",\n    \"license\": \"CC BY 4.0 License\",\n    \"licenseUrl\": \"https://creativecommons.org/licenses/by/4.0/\"\n  },\n  {\n    \"id\": \"io\",\n    \"name\": \"Ionicons 4\",\n    \"projectUrl\": \"https://ionicons.com/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/ionic-team/ionicons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"io5\",\n    \"name\": \"Ionicons 5\",\n    \"projectUrl\": \"https://ionicons.com/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/ionic-team/ionicons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"md\",\n    \"name\": \"Material Design icons\",\n    \"projectUrl\": \"http://google.github.io/material-design-icons/\",\n    \"license\": \"Apache License Version 2.0\",\n    \"licenseUrl\": \"https://github.com/google/material-design-icons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"ti\",\n    \"name\": \"Typicons\",\n    \"projectUrl\": \"http://s-ings.com/typicons/\",\n    \"license\": \"CC BY-SA 3.0\",\n    \"licenseUrl\": \"https://creativecommons.org/licenses/by-sa/3.0/\"\n  },\n  {\n    \"id\": \"go\",\n    \"name\": \"Github Octicons icons\",\n    \"projectUrl\": \"https://octicons.github.com/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/primer/octicons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"fi\",\n    \"name\": \"Feather\",\n    \"projectUrl\": \"https://feathericons.com/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/feathericons/feather/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"gi\",\n    \"name\": \"Game Icons\",\n    \"projectUrl\": \"https://game-icons.net/\",\n    \"license\": \"CC BY 3.0\",\n    \"licenseUrl\": \"https://creativecommons.org/licenses/by/3.0/\"\n  },\n  {\n    \"id\": \"wi\",\n    \"name\": \"Weather Icons\",\n    \"projectUrl\": \"https://erikflowers.github.io/weather-icons/\",\n    \"license\": \"SIL OFL 1.1\",\n    \"licenseUrl\": \"http://scripts.sil.org/OFL\"\n  },\n  {\n    \"id\": \"di\",\n    \"name\": \"Devicons\",\n    \"projectUrl\": \"https://vorillaz.github.io/devicons/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"ai\",\n    \"name\": \"Ant Design Icons\",\n    \"projectUrl\": \"https://github.com/ant-design/ant-design-icons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"bs\",\n    \"name\": \"Bootstrap Icons\",\n    \"projectUrl\": \"https://github.com/twbs/icons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"ri\",\n    \"name\": \"Remix Icon\",\n    \"projectUrl\": \"https://github.com/Remix-Design/RemixIcon\",\n    \"license\": \"Apache License Version 2.0\",\n    \"licenseUrl\": \"http://www.apache.org/licenses/\"\n  },\n  {\n    \"id\": \"fc\",\n    \"name\": \"Flat Color Icons\",\n    \"projectUrl\": \"https://github.com/icons8/flat-color-icons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"gr\",\n    \"name\": \"Grommet-Icons\",\n    \"projectUrl\": \"https://github.com/grommet/grommet-icons\",\n    \"license\": \"Apache License Version 2.0\",\n    \"licenseUrl\": \"http://www.apache.org/licenses/\"\n  },\n  {\n    \"id\": \"hi\",\n    \"name\": \"Heroicons\",\n    \"projectUrl\": \"https://github.com/tailwindlabs/heroicons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"si\",\n    \"name\": \"Simple Icons\",\n    \"projectUrl\": \"https://simpleicons.org/\",\n    \"license\": \"CC0 1.0 Universal\",\n    \"licenseUrl\": \"https://creativecommons.org/publicdomain/zero/1.0/\"\n  },\n  {\n    \"id\": \"im\",\n    \"name\": \"IcoMoon Free\",\n    \"projectUrl\": \"https://github.com/Keyamoon/IcoMoon-Free\",\n    \"license\": \"CC BY 4.0 License\"\n  },\n  {\n    \"id\": \"bi\",\n    \"name\": \"BoxIcons\",\n    \"projectUrl\": \"https://github.com/atisawd/boxicons\",\n    \"license\": \"CC BY 4.0 License\"\n  },\n  {\n    \"id\": \"cg\",\n    \"name\": \"css.gg\",\n    \"projectUrl\": \"https://github.com/astrit/css.gg\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"vsc\",\n    \"name\": \"VS Code Icons\",\n    \"projectUrl\": \"https://github.com/microsoft/vscode-codicons\",\n    \"license\": \"CC BY 4.0\",\n    \"licenseUrl\": \"https://creativecommons.org/licenses/by/4.0/\"\n  }\n]","import React from 'react';\nexport var DefaultContext = {\n  color: undefined,\n  size: undefined,\n  className: undefined,\n  style: undefined,\n  attr: undefined\n};\nexport var IconContext = React.createContext && React.createContext(DefaultContext);","var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React from 'react';\nimport { IconContext, DefaultContext } from './iconContext';\n\nfunction Tree2Element(tree) {\n  return tree && tree.map(function (node, i) {\n    return React.createElement(node.tag, __assign({\n      key: i\n    }, node.attr), Tree2Element(node.child));\n  });\n}\n\nexport function GenIcon(data) {\n  return function (props) {\n    return React.createElement(IconBase, __assign({\n      attr: __assign({}, data.attr)\n    }, props), Tree2Element(data.child));\n  };\n}\nexport function IconBase(props) {\n  var elem = function (conf) {\n    var attr = props.attr,\n        size = props.size,\n        title = props.title,\n        svgProps = __rest(props, [\"attr\", \"size\", \"title\"]);\n\n    var computedSize = size || conf.size || \"1em\";\n    var className;\n    if (conf.className) className = conf.className;\n    if (props.className) className = (className ? className + ' ' : '') + props.className;\n    return React.createElement(\"svg\", __assign({\n      stroke: \"currentColor\",\n      fill: \"currentColor\",\n      strokeWidth: \"0\"\n    }, conf.attr, attr, svgProps, {\n      className: className,\n      style: __assign(__assign({\n        color: props.color || conf.color\n      }, conf.style), props.style),\n      height: computedSize,\n      width: computedSize,\n      xmlns: \"http://www.w3.org/2000/svg\"\n    }), title && React.createElement(\"title\", null, title), props.children);\n  };\n\n  return IconContext !== undefined ? React.createElement(IconContext.Consumer, null, function (conf) {\n    return elem(conf);\n  }) : elem(DefaultContext);\n}","import React from 'react';\n\nfunction FormatDate() {\n    const date = new Date();\n    const dayWeek = {\n        0: 'Domingo',\n        1: 'Segunda-feira',\n        2: 'Terça-feira',\n        3: 'Quarta-feira',\n        4: 'Quinta-feira',\n        5: 'Sexta-feira',\n        6: 'Sábado',\n    };\n\n    const nameMonth = {\n        0: 'Janeiro',\n        1: 'Fevereiro',\n        2: 'Março',\n        3: 'Abril',\n        4: 'Maio',\n        5: 'Junho',\n        6: 'Julho',\n        7: 'Agosto',\n        8: 'Setembro',\n        9: 'Outubro',\n        10: 'Novembro',\n        11: 'Dezembro',\n    };\n\n    const week = dayWeek[date.getDay()];\n    const day = date.getDate() < 10 ? `0${date.getDate()}` : date.getDate();\n    const month = nameMonth[date.getMonth()];\n    const year = date.getFullYear();\n    const hours =\n        date.getHours() < 10 ? `0${date.getHours()}` : date.getHours();\n    const minute =\n        date.getMinutes() < 10 ? `0${date.getMinutes()}` : date.getMinutes();\n\n    return (\n        <span\n            style={{ color: '#C4C4C4', fontSize: '14px' }}\n        >{`${week} - ${day} de ${month} ${year} - ${hours}:${minute}`}</span>\n    );\n}\n\nexport default FormatDate;\n","import React from 'react'\nimport { CButton, CCol, CModal, CModalBody, CModalFooter, CModalHeader, CModalTitle, CRow } from '@coreui/react'\nimport FormatDate from 'src/views/tracking/components/FormatDate';\n\nfunction ModalReport({ visibleReport, setVisibleReport }) {\n    return (\n        <CModal\n            visible={visibleReport}\n            onClose={() => setVisibleReport(false)}\n            size=\"lg\"\n        >\n            <CModalHeader\n                closeButton={false}\n                className='d-block'\n            >\n                <CModalTitle className=\"title-modal\">Relatório</CModalTitle>\n                <CModalTitle><FormatDate /></CModalTitle>\n            </CModalHeader>\n            <CModalBody>\n                <CRow>\n                    <CCol md={6} className=\"mb-5\">\n                        <label>Acumulado (R)</label>\n                        <br />\n                        <label>\n                            999999\n                        </label>\n                    </CCol>\n                    <CCol md={6} className=\"mb-5\">\n                        <label>Sinistros abertos no mês</label>\n                        <br />\n                        <label>\n                            32\n                        </label>\n                    </CCol>\n                    <CCol md={6} className=\"mb-5\">\n                        <label>Situação dos planos</label>\n                        <br />\n                        <label>\n                            24 planos em análise\n                        </label>\n                        <br />\n                        <label>\n                            59 planos ativos\n                        </label>\n                        <br />\n                        <label>\n                            17 planos desativados\n                        </label>\n                    </CCol>\n                    <CCol md={6} className=\"mb-5\">\n                        <label>Planos ativos</label>\n                        <br />\n                        <label>\n                            Plano Bronze: 12 planos\n                        </label>\n                        <br />\n                        <label>\n                            Plano Prata: 26 planos\n                        </label>\n                        <br />\n                        <label>\n                            Plano Ouro: 13 planos\n                        </label>\n                        <br />\n                        <label>\n                            Customizado: 08 planos\n                        </label>\n                    </CCol>\n                    <CCol md={6} className=\"mb-5\">\n                        <label>Situação dos planos</label>\n                        <br />\n                        <label>\n                            105 usuários recorrentes\n                        </label>\n                        <br />\n                        <label>\n                            53 usuários novos\n                        </label>\n                    </CCol>\n                </CRow>\n            </CModalBody>\n            <CModalFooter>\n                <CButton\n                    className='btn-cancel-global'\n                    variant='outline'\n                    onClick={() => setVisibleReport(false)}\n                >\n                    Cancelar\n                </CButton>\n                <CButton\n                    className='btn-save-global'\n                >\n                    Salvar\n                </CButton>\n            </CModalFooter>\n        </CModal>\n    )\n}\n\nexport default ModalReport;\n","import React, { useState } from 'react'\nimport { CButton, CCard, CCardBody, CCardImage, CCardText, CCardTitle, CCol, CFormInput, CFormLabel, CFormSelect, CListGroup, CListGroupItem, CModal, CModalBody, CModalFooter, CModalHeader, CModalTitle, CRow } from '@coreui/react'\nimport FormatDate from 'src/views/tracking/components/FormatDate';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\n\nfunction ModalGraphic({ visibleGraphic, setVisibleGraphic }) {\n    const [value, onChange] = useState(new Date())\n\n    return (\n        <CModal\n            visible={visibleGraphic}\n            onClose={() => setVisibleGraphic(false)}\n            size=\"lg\"\n        >\n            <CModalHeader\n                closeButton={false}\n                className='d-block'\n            >\n                <CModalTitle className=\"title-modal\">Gerar gráfico</CModalTitle>\n                <CModalTitle><FormatDate /></CModalTitle>\n            </CModalHeader>\n            <CModalBody className=\"p-0\" >\n                <CCard>\n                    <CRow className=\"g-0\">\n                        <CCol md={4}>\n                            <CListGroup className='border-card' flush>\n                                <CListGroupItem className=\"background-card\">\n                                    <label>Tipo de gráfico</label>\n                                    <CFormSelect size=\"sm\" className=\"mb-3\">\n                                        <option>Open this select menu</option>\n                                        <option value=\"1\">One</option>\n                                        <option value=\"2\">Two</option>\n                                        <option value=\"3\">Three</option>\n                                    </CFormSelect>\n                                </CListGroupItem>\n                                <CListGroupItem\n                                    className=\"background-card\">\n                                    <label>Títulos do gráfico e dos eixos</label>\n                                    <CFormSelect size=\"sm\" className=\"mb-3\">\n                                        <option>Open this select menu</option>\n                                        <option value=\"1\">One</option>\n                                        <option value=\"2\">Two</option>\n                                        <option value=\"3\">Three</option>\n                                    </CFormSelect>\n                                    <label>Texto do título</label>\n                                    <CFormInput\n                                        type='text'\n                                        placeholder='Título'\n                                        size=\"sm\"\n                                        className=\"mb-3\" />\n                                </CListGroupItem>\n                                <CListGroupItem className=\"background-card\">\n                                    <label>Intervalo de dados</label>\n                                    <CFormSelect size=\"sm\" className=\"mb-3\">\n                                        <option>Seleciona o mês</option>\n                                        <option value=\"1\">Janeiro</option>\n                                        <option value=\"2\">Fevereiro</option>\n                                        <option value=\"3\">Março</option>\n                                        <option value=\"4\">Abril</option>\n                                        <option value=\"5\">Maio</option>\n                                        <option value=\"6\">Junho</option>\n                                        <option value=\"7\">Julho</option>\n                                        <option value=\"8\">Agosto</option>\n                                        <option value=\"9\">Setembro</option>\n                                        <option value=\"10\">Outubro</option>\n                                        <option value=\"11\">Novembro</option>\n                                        <option value=\"12\">Dezembro</option>\n                                    </CFormSelect>\n                                    <Calendar\n                                        onChange={onChange}\n                                        value={value}\n                                        className=\"calendario-css-panel mb-3\"\n                                    />\n\n                                </CListGroupItem>\n                            </CListGroup>\n                        </CCol>\n                        <CCol md={8}>\n                            <CCardBody>\n                               \n                            </CCardBody>\n                        </CCol>\n                    </CRow>\n                </CCard>\n            </CModalBody>\n            <CModalFooter>\n                <CButton\n                    className='btn-cancel-global'\n                    variant='outline'\n                    onClick={() => setVisibleGraphic(false)}\n                >\n                    Cancelar\n                </CButton>\n                <CButton\n                    className='btn-save-global'\n                >\n                    Salvar\n                </CButton>\n            </CModalFooter>\n        </CModal>\n    )\n}\n\nexport default ModalGraphic;\n","import React, { useState } from \"react\";\nimport { CRow, CCol, CDropdown, CDropdownMenu, CDropdownItem, CDropdownToggle, CWidgetStatsA, CCard, CCardBody, CCallout, CPopover, CButton } from \"@coreui/react\";\nimport { CChartLine } from \"@coreui/react-chartjs\";\nimport { BsCircleFill } from \"react-icons/bs\";\nimport CIcon from \"@coreui/icons-react\";\nimport { cilOptions } from \"@coreui/icons\";\n\nimport \"./css/widget.css\";\nimport ModalReport from \"../render/ModalReport\";\nimport ModalGraphic from \"../render/ModalGraphic\";\n\nconst WidgetsDropdown = () => {\n    // WIDGET 1 (Acumulado Mensal)-- Ainda falta colocar dados, labels ex: mes 1,2,3,4 ...\n    const [acumuladoMensal, setAcumuladoMensal] = useState({\n        valor: 9999.99,\n        porcentagem: -12,\n        title: \"Acumulado Mensal\",\n    });\n\n\n    const [widget1, setWidget1] = useState(acumuladoMensal);\n    const [visibleReport, setVisibleReport] = useState(false);\n    const [visibleGraphic, setVisibleGraphic] = useState(false);\n\n    const month = [\n        'Janeiro',\n        'Fevereiro',\n        'Março',\n        'Abril',\n        'MAio',\n        'Junho',\n        'Julho',\n        'Agosto',\n        'Setembro',\n        'Outubro',\n        'Novembro',\n        'Dezembro',\n    ];\n\n    // WIDGET 2 (Abertura de Sinistro)\n    const [sinistroMes, setSinistroMes] = useState({\n        qtdAbertos: 23,\n        porcentagem: 10,\n        title: \"Sinistro abertos no mês\",\n    });\n    // Semana\n    // DIA\n    // Variavel definidora\n    const [widgetSinistro, setWidgetSinistro] = useState(sinistroMes);\n\n    // widget 3 - valores de planos\n    const [planosData, setPlanosData] = useState({\n        planAnalise: 20,\n        planAtivo: 35,\n        planDesativado: 40,\n    });\n\n    return (\n        <>\n            <ModalGraphic visibleGraphic={visibleGraphic} setVisibleGraphic={setVisibleGraphic} />\n            <ModalReport visibleReport={visibleReport} setVisibleReport={setVisibleReport} />\n            <CRow className=\"mb-3\">\n                <CCol xs={4}>\n                    <CCallout className=\"p-0 callout-widget\" color=\"success\">\n                        <CWidgetStatsA\n                            className=\"widget-container\"\n                            value={`R$ ${widget1.valor}`}\n                            title={widget1.title}\n                            action={\n                                <CDropdown alignment=\"end\">\n                                    <CDropdownToggle\n                                        color=\"transparent\"\n                                        caret={false}\n                                        className=\"p-0\"\n                                    >\n                                        <CIcon icon={cilOptions} />\n                                    </CDropdownToggle>\n                                    <CDropdownMenu>\n                                        <CPopover\n                                            content={\n                                                <>\n                                                    {\n                                                        month.map((name, index) => (\n                                                            <div key={index}>\n                                                                <CButton\n                                                                    color=\"link\"\n                                                                    variant=\"outline\"\n                                                                    onClick={() => console.log(\"Funcionouuuuuuu\")}>\n                                                                    {name}\n                                                                </CButton>\n                                                                <br />\n                                                            </div>\n                                                        ))\n                                                    }\n                                                </>\n                                            }\n                                            placement=\"right\"\n                                        >\n                                            <CDropdownItem \n                                            color=\"link\">\n                                                Alterar mês\n                                            </CDropdownItem>\n                                        </CPopover>\n                                        <CDropdownItem\n                                            onClick={() => setVisibleReport(true)}\n                                        >\n                                            Gerar relátorio\n                                        </CDropdownItem>\n                                        <CDropdownItem\n                                            onClick={() => setVisibleGraphic(true)}\n                                        >\n                                            Gerar gráfico\n                                        </CDropdownItem>\n                                        <CDropdownItem disabled>\n                                            Mais Ferramentas\n                                        </CDropdownItem>\n                                    </CDropdownMenu>\n                                </CDropdown>\n                            }\n                            chart={\n                                <CChartLine\n                                    className=\"mt-3 mx-3 \"\n                                    style={{ height: \"70px\" }}\n                                    data={{\n                                        labels: [\n                                            \"Januaryss\",\n                                            \"FebruarySSS\",\n                                            \"March\",\n                                            \"April\",\n                                            \"May\",\n                                            \"June\",\n                                            \"July\",\n                                            \"January\",\n                                            \"February\",\n                                            \"March\",\n                                            \"April\",\n                                            \"May\",\n                                            \"June\",\n                                            \"July\",\n                                        ],\n                                        datasets: [\n                                            {\n                                                label: \"My First dataset\",\n                                                backgroundColor: \"warning\",\n                                                borderColor: \"rgba(29,27,31,0.5)\",\n                                                pointBackgroundColor:\n                                                    \"rgba(35,235,58, 0.8)\",\n                                                data: [\n                                                    65, 59, 84, 84, 51, 55, 40, 65,\n                                                    59, 84, 84, 51, 55, 40,\n                                                ],\n                                            },\n                                        ],\n                                    }}\n                                    options={{\n                                        plugins: {\n                                            legend: {\n                                                display: false,\n                                            },\n                                        },\n                                        maintainAspectRatio: false,\n                                        scales: {\n                                            x: {\n                                                grid: {\n                                                    display: false,\n                                                    drawBorder: false,\n                                                },\n                                                ticks: {\n                                                    display: false,\n                                                },\n                                            },\n                                            y: {\n                                                min: 30,\n                                                max: 89,\n                                                display: false,\n                                                grid: {\n                                                    display: false,\n                                                },\n                                                ticks: {\n                                                    display: false,\n                                                },\n                                            },\n                                        },\n                                        elements: {\n                                            line: {\n                                                borderWidth: 1,\n                                                tension: 0.4,\n                                            },\n                                            point: {\n                                                radius: 4,\n                                                hitRadius: 10,\n                                                hoverRadius: 4,\n                                            },\n                                        },\n                                    }}\n                                />\n                            }\n                        />\n                    </CCallout>\n                </CCol>\n\n                <CCol xs={4}>\n                    <CCallout className=\"p-0 callout-widget\" color=\"danger\">\n                        <CWidgetStatsA\n                            className=\"widget-container\"\n                            value={widgetSinistro.qtdAbertos}\n\n                            title={widgetSinistro.title}\n                            action={\n                                <CDropdown alignment=\"end\">\n                                    <CDropdownToggle\n                                        color=\"transparent\"\n                                        caret={false}\n                                        className=\"p-0\"\n                                    >\n                                        <CIcon icon={cilOptions} />\n                                    </CDropdownToggle>\n                                    <CDropdownMenu>\n                                        <CPopover\n                                            content={\n                                                <>\n                                                    {\n                                                        month.map((name, index) => (\n                                                            <div key={index}>\n                                                                <CButton\n                                                                    color=\"link\"\n                                                                    variant=\"outline\"\n                                                                    onClick={() => console.log(\"Funcionouuuuuuu\")}>\n                                                                    {name}\n                                                                </CButton>\n                                                                <br />\n                                                            </div>\n                                                        ))\n                                                    }\n                                                </>\n                                            }\n                                            placement=\"right\"\n                                        >\n                                            <CDropdownItem>\n                                                Alterar mês\n                                            </CDropdownItem>\n                                        </CPopover>\n                                        <CDropdownItem\n                                            onClick={() => setVisibleReport(true)}\n                                        >\n                                            Gerar relátorio\n                                        </CDropdownItem>\n                                        <CDropdownItem\n                                            onClick={() => setVisibleGraphic(true)}\n                                        >\n                                            Gerar gráfico\n                                        </CDropdownItem>\n                                        <CDropdownItem disabled>\n                                            Mais Ferramentas\n                                        </CDropdownItem>\n                                    </CDropdownMenu>\n                                </CDropdown>\n                            }\n                            chart={\n                                <CChartLine\n                                    className=\"mt-3 mx-3\"\n                                    style={{ height: \"70px\" }}\n                                    data={{\n                                        labels: [\n                                            \"Januaryi\",\n                                            \"February\",\n                                            \"March\",\n                                            \"April\",\n                                            \"May\",\n                                            \"June\",\n                                            \"July\",\n                                        ],\n                                        datasets: [\n                                            {\n                                                label: \"My First dataset  ORIGIM\",\n                                                backgroundColor: \"info\",\n                                                borderColor: \"rgba(29,27,31,0.5)\",\n                                                pointBackgroundColor:\n                                                    \"rgba(235,0,38, 0.8)\",\n                                                data: [1, 18, 9, 17, 34, 22, 11],\n                                            },\n                                        ],\n                                    }}\n                                    options={{\n                                        plugins: {\n                                            legend: {\n                                                display: false,\n                                            },\n                                        },\n                                        maintainAspectRatio: false,\n                                        scales: {\n                                            x: {\n                                                grid: {\n                                                    display: false,\n                                                    drawBorder: false,\n                                                },\n                                                ticks: {\n                                                    display: false,\n                                                },\n                                            },\n                                            y: {\n                                                min: -9,\n                                                max: 39,\n                                                display: false,\n                                                grid: {\n                                                    display: false,\n                                                },\n                                                ticks: {\n                                                    display: false,\n                                                },\n                                            },\n                                        },\n                                        elements: {\n                                            line: {\n                                                borderWidth: 1,\n                                            },\n                                            point: {\n                                                radius: 4,\n                                                hitRadius: 10,\n                                                hoverRadius: 4,\n                                            },\n                                        },\n                                    }}\n                                />\n                            }\n                        />\n                    </CCallout>\n                </CCol>\n\n                <CCol xs={4}>\n\n                    <CCallout className=\"p-0 callout-widget\" color=\"warning\">\n                        <CCard className=\"card-widget\">\n                            <CCardBody className=\"py-0\">\n                                <CRow>\n                                    <CCol className=\"d-flex justify-content-end mt-3\">\n                                        <CDropdown>\n                                            <CDropdownToggle\n                                                color=\"transparent\"\n                                                caret={false}\n                                                className=\"p-0\"\n                                            >\n                                                <CIcon icon={cilOptions} />\n                                            </CDropdownToggle>\n                                            <CDropdownMenu>\n                                                <CPopover\n                                                    content={\n                                                        <>\n                                                            {\n                                                                month.map((name, index) => (\n                                                                    <div key={index}>\n                                                                        <CButton\n                                                                            color=\"link\"\n                                                                            variant=\"outline\"\n                                                                            onClick={() => console.log(\"Funcionouuuuuuu\")}>\n                                                                            {name}\n                                                                        </CButton>\n                                                                        <br />\n                                                                    </div>\n                                                                ))\n                                                            }\n                                                        </>\n                                                    }\n                                                    placement=\"left\"\n                                                >\n                                                    <CDropdownItem>\n                                                        Alterar mês\n                                                    </CDropdownItem>\n                                                </CPopover>\n                                                <CDropdownItem\n                                                    onClick={() => setVisibleReport(true)}>\n                                                    Gerar relátorio\n                                                </CDropdownItem>\n                                                <CDropdownItem\n                                                    onClick={() => setVisibleGraphic(true)}\n                                                >\n                                                    Gerar gráfico\n                                                </CDropdownItem>\n                                                <CDropdownItem disabled>\n                                                    Mais Ferramentas\n                                                </CDropdownItem>\n                                            </CDropdownMenu>\n                                        </CDropdown>\n                                    </CCol>\n                                </CRow>\n                                <CRow>\n                                    <CCol className=\"leftSimbol\" sm=\"auto\">\n                                        <p className=\"circle-orange\">\n                                            <BsCircleFill />\n                                        </p>\n                                        <p className=\"circle-green\">\n                                            <BsCircleFill />\n                                        </p>\n                                        <p className=\"circle-red\">\n                                            <BsCircleFill />\n                                        </p>\n                                    </CCol>\n                                    <CCol xs={9} className=\"p-0\">\n                                        <p>\n                                            {planosData.planAnalise} Planos em\n                                            análise\n                                        </p>\n                                        <p> {planosData.planAtivo} Planos ativos</p>\n                                        <p>\n                                            {planosData.planDesativado} Planos\n                                            desativados\n                                        </p>\n                                    </CCol>\n                                </CRow>\n                            </CCardBody>\n                        </CCard>\n                    </CCallout>\n                </CCol>\n            </CRow>\n        </>\n    );\n};\n\nexport default WidgetsDropdown;\n"],"sourceRoot":""}