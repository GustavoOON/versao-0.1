{"version":3,"sources":["config.js","security/cripto.js","views/login/components/RecoverPassword.jsx","views/login/components/NewAccount.jsx","views/login/components/MainLogin.jsx","views/login/Login.jsx"],"names":["configCookies","token","Cookies","get","headers","Authorization","urlDomain","CryptoJS","require","Cripta","e","typeUser","data","role","ciphertext","AES","encrypt","toString","set","aux","permissions","map","item","push","RecoverPassword","setForgotMyPass","useState","email","setEmail","recoverPasswordEmail","setRecoverPasswordEmail","recoverPassword","includes","className","src","logoOon","alt","height","htmlFor","id","type","onChange","target","value","placeholder","onClick","style","backgroundColor","borderColor","color","variant","NewAccount","showPassword","setShowPassword","setNewAccountBtn","password","setPassword","msgEmailIncorret","setMsgEmailIncorret","msgPasswordIncorret","setMsgPasswordIncorret","hidden","content","size","placement","length","postData","axios","post","UrlDomain","then","res","console","log","catch","r","newUser","border","borderRadius","width","MainLogin","userLogin","user","userPassword","login","newAccountBtn","label","DefaultLayout","React","lazy","Login","setUser","flag","setFlag","forgotMyPass","useEffect","path","name","render","props","response","status","Criptacao","tokenType","criptar","alert"],"mappings":"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","file":"static/js/25.084cebd1.chunk.js","sourcesContent":["import Cookies from \"js-cookie\";\n\n// Endereço padrão das API\n\nconst prod = \"http://dashboardbff.oonpayperuse.com.br\";\nconst dev = \"http://localhost:8080\";\n\nconst tokenMaps = \"AIzaSyB9I7snvZRRQ6faupULeBXYz5tU2AUuWek\"; // TOKEN PESSOAL\nconst urlDomain = prod;\n\nexport const configCookies = () => {\n    const token = Cookies.get(\"TokenID\");\n\n    const authorization = {\n        headers: {\n            Authorization: `Bearer ${token}`,\n            \"Content-Type\": \"application/json;charset=UTF-8\",\n            \"Access-Control-Allow-Origin\": \"*\",\n        },\n    };\n\n    return authorization;\n};\n\nexport default  urlDomain;\n","var CryptoJS = require(\"crypto-js\");\nimport Cookies from 'js-cookie'\n\n// Encripta informações sensiveis e armazena em cookies\n\n// PARA DESEMCRIPTAR A INFORMACAO NO COOKIE \n//var bytes  = CryptoJS.AES.decrypt(ciphertext, 'OnnSeguros');\n//var originalText = bytes.toString(CryptoJS.enc.Utf8);\n\nfunction Cripta(e){\n    var typeUser = e.data.role\n    var ciphertext = CryptoJS.AES.encrypt(typeUser, 'OnnSeguros').toString();\n    Cookies.set('userType', ciphertext) // salva userType\n    \n    let permissions = []\n    let aux = []\n    permissions = e.data.permissions\n\n    permissions.map(item =>{\n        aux.push(CryptoJS.AES.encrypt(item, 'OnnSeguros').toString())\n    })\n\n    Cookies.set('permissions', aux) // salva permissoes \n\n}\n\nexport default  Cripta;\n","import React, { useState } from 'react'\nimport { Form, Modal } from 'react-bootstrap';\nimport { CButton, CRow, CCol, CForm, CFormLabel, CInputGroup, CFormInput, CFormCheck } from '@coreui/react'\nimport logoOon from '../../../assets/images/oon-seguros-logo.svg';\nimport { AiOutlineArrowLeft } from 'react-icons/ai'\n\nconst RecoverPassword = ({ setForgotMyPass }) => {\n    const [email, setEmail] = useState('')\n    const recoverLogin = (e) => { setEmail(e.target.value) } //  pegando valores do email\n    const [recoverPasswordEmail, setRecoverPasswordEmail] = useState(true);\n\n    // const [respEndpoint, setRespEndpoint] = useState(true) // apos o envio do email, pegar resposta\n    // function verifica(data) {\n    //     const handleShow = setShow(true);\n    // }\n\n    // function salvarEdicoes() {\n\n    //     let mySubString\n    //     // caso usuario nao envie nada no email, verificar o campo.console.log('teste', mySubString)\n    //     if (email.length > 1) {\n    //         mySubString = email.substring(\n    //             email.lastIndexOf(\"@\") + 1,\n    //             email.lastIndexOf(\".\")\n    //         );\n    //     } else {\n    //         // Solucao temporaria\n    //         mySubString = 'errado'\n    //     }\n\n\n    //     // permitir o envio do email somente se tiver dominio oonpayperuse, oonseguros\n    //     if ((mySubString === 'oonpayperuse') || (mySubString === 'oonseguros')) {\n    //         verificaMail()\n    //         alert('Dominio Certo')\n    //     } else {\n    //         alert('Dominio Errado')\n    //     }\n\n    //     setShow(false); // fechar modal\n    // }\n\n    // function verificaMail() {\n    //     // envia o email para o endpoint, Firebase faz tudo já\n    //     // so chamar api do firebase\n    //     console.log('email enviado', email)\n    // }\n\n    const recoverPassword = () => {\n        email != '' & email.includes('@')? setRecoverPasswordEmail(false)\n            : null\n    }\n\n    return recoverPasswordEmail ? (\n        <div className='fundo-body-forgot-password min-vh-100 align-items-center d-flex'>\n            <CCol className='forgot-password-container'>\n                <img\n                    className=\"img-oon-forgot-password\"\n                    src={logoOon}\n                    alt=\"logo oon seguros\"\n                    height={120}\n                />\n                <p className=\"subtitle-login-dir\">Esqueceu sua senha?</p>\n                <p className=\"text-new-account\">Não se preocupe, enviaremos a você as instruções de recuperação.</p>\n                <div>\n                    <CForm>\n                        <CFormLabel\n                            htmlFor=\"email\"\n                            className=\"mb-1 email-password-form\"\n                        >\n                            E-mail\n                        </CFormLabel>\n                        <CInputGroup\n                            className=\"mb-3\"\n                        >\n                            <CFormInput\n                                className='radius-border'\n                                id=\"email\"\n                                type=\"email\"\n                                onChange={recoverLogin}\n                                placeholder=\"Digite seu e-mail\"\n                            />\n                        </CInputGroup>\n                    </CForm>\n                    <br />\n                    <CButton\n                        onClick={recoverPassword}\n                        className=\"btns-login\"\n                        style={{\n                            backgroundColor: '#216CFF',\n                            borderColor: '#216CFF'\n                        }}\n                        >\n                        Recuperar senha\n                    </CButton>\n                    <CButton\n                        color=\"link\"\n                        variant='ghost'\n                        onClick={() => setForgotMyPass(true)}\n                        className=\"btn-forgot-password mt-1\"\n                    >\n                        <AiOutlineArrowLeft className='m-1' />\n                        Voltar para o log in\n                    </CButton>\n                </div>\n            </CCol>\n        </div>\n    ) : (\n        <div className='fundo-body-forgot-password min-vh-100 align-items-center d-flex'>\n            <CCol className='forgot-password-container'>\n                <img\n                    className=\"img-oon-forgot-password\"\n                    src={logoOon}\n                    alt=\"logo oon seguros\"\n                    height={120}\n                />\n                <p className=\"subtitle-login-dir\">Confira sua caixa de e-mail!</p>\n                <p className=\"text-new-account\">Nós enviamos o link de recuperação da sua senha para o {<br/>}{email}</p>\n                <div>\n                    <CButton\n                        onClick={() => setForgotMyPass(true)}\n                        className=\"btns-login\"\n                        style={{\n                            backgroundColor: '#216CFF',\n                            borderColor: '#216CFF'\n                        }}\n                    >\n                        Voltar para o log in\n                    </CButton>\n                    <div className=\"btn-forgot-password mt-3 d-flex align-items-center\">\n                        <label> Não recebeu o e-mail? </label>\n                        <CButton\n                            color=\"link\"\n                            onClick={recoverPassword}\n                            className=\"p-0 ps-1\"\n                        >\n                            Enviar novamente.\n                        </CButton>\n                    </div>\n                </div>\n            </CCol>\n        </div>\n    )\n}\n\nexport default  RecoverPassword;\n","import React, { useState } from 'react'\nimport axios from 'axios'\nimport { CButton, CPopover, CForm, CFormLabel, CInputGroup, CFormInput } from '@coreui/react'\n\nimport UrlDomain, { configCookies } from '../../../config'\nimport { FaEye, FaEyeSlash } from 'react-icons/fa';\nimport { MdOutlineHelpOutline, MdCheckCircleOutline } from 'react-icons/md';\n\nimport logoOon from '../../../assets/images/oon-seguros-logo.svg';\n\nimport '../css/newAccount.css';\n\nconst NewAccount = ({ showPassword, setShowPassword, setNewAccountBtn }) => {\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [msgEmailIncorret, setMsgEmailIncorret] = useState(true)\n    const [msgPasswordIncorret, setMsgPasswordIncorret] = useState(true)\n\n    const userEmail = (e) => { setEmail(e.target.value) }\n    const userPassword = (e) => { setPassword(e.target.value) }\n\n\n    const newUser = () => {\n        var postData = {\n            email: email,\n            password: password\n        };\n\n        //const config = configCookies()\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json;charset=UTF-8\",\n                \"Access-Control-Allow-Origin\": \"*\",\n            },\n        };\n\n        // setFlagEmail(true)\n        axios\n            .post(`${UrlDomain}/accounts`, postData, config)\n            .then((res) => {\n                console.log(res)\n                setNewAccountBtn(true)\n                // setFlagEmail(true)\n                // setShow(false)\n            })\n            .catch(r => {\n                console.log('error', r)\n                // setFlagEmail(false)\n            })\n    }\n\n\n    const handleSubmit = () => {\n\n        email.includes('@') ? setMsgEmailIncorret(true) : setMsgEmailIncorret(false)\n\n        password.length >= 6 ? setMsgPasswordIncorret(true) :\n            setMsgPasswordIncorret(false)\n\n        newUser()\n\n    }\n\n    return (\n        <>\n            <img className=\"img-oon\" src={logoOon} alt=\"logo oon seguros\" />\n            <p className=\"subtitle-login-dir\">Criar nova conta</p>\n            <p className=\"text-new-account\">Para a criação de uma nova conta, é necessário que o usuário esteja pré-cadastrado no sistema</p>\n            <div className='inputs-container'>\n                <CForm>\n                    <CFormLabel\n                        htmlFor=\"email\"\n                        className=\"mb-1 email-password-form\"\n                    >\n                        E-mail (cadastrado no sistema)\n                    </CFormLabel>\n                    <CInputGroup\n                        className=\"mb-3 d-flex-wrap\"\n                    >\n                        <div className='w-100'>\n                            <CFormInput\n                                className='radius-border'\n                                id=\"email\"\n                                type=\"email\"\n                                onChange={userEmail}\n                                placeholder=\"Digite um e-mail pré-cadastrado\"\n                            />\n                        </div>\n                        <label className='error-text' hidden={msgEmailIncorret}>Não foi possível encontrar esse e-mail no sistema</label>\n                    </CInputGroup>\n                    <CFormLabel\n                        htmlFor=\"senha\"\n                        className=\"mb-1 email-password-form\"\n                    >\n                        Senha\n                        <CPopover\n                            content={\n                                <div className='d-flex align-items-center p-0' >\n                                    <MdCheckCircleOutline\n                                        className='me-2'\n                                        size={20}\n                                        color='#216CFF'\n                                    />\n                                    <label style={{\n                                        color: '#216CFF'\n                                    }}>A senha deve conter ao menos 6 caracteres</label>\n                                </div>\n                            }\n                            placement=\"bottom\"\n                        >\n                            <i\n                                className='ms-1'\n                            >\n                                <MdOutlineHelpOutline />\n                            </i>\n                        </CPopover>\n                    </CFormLabel>\n                    <CInputGroup\n                        className=\"mb-3\"\n                    >\n                        <div className=\"input-icons d-flex flex-row-reverse w-100\">\n                            <CFormInput\n                                className='radius-border'\n                                id=\"senha\"\n                                type={!showPassword ? 'password' : 'text'}\n                                onChange={userPassword}\n                                value={password}\n                                placeholder=\"Crie uma senha de acesso\"\n                                aria-describedby=\"eye-password\"\n                            />\n                            <i\n                                id=\"eye-password\"\n                                className='icon-login i-absolute'\n                                onClick={() => !showPassword ? setShowPassword(true) : setShowPassword(false)}\n                            >\n                                {!showPassword ? <FaEye /> : <FaEyeSlash />}\n                            </i>\n                        </div>\n                        <label className='error-text' hidden={msgPasswordIncorret}>A senha deve conter pelo menos 6 caracteres.</label>\n                    </CInputGroup>\n                </CForm>\n                <br />\n                <CButton\n                    onClick={handleSubmit}\n                    className=\"btns-login\"\n                    style={{\n                        backgroundColor: '#216CFF',\n                        borderColor: '#216CFF'\n                    }}\n                >\n                    Criar conta\n                </CButton>\n                <p className='pt-5 text-center new-account-text'>Já tem uma contra? Faça login!</p>\n                <CButton\n                    onClick={() => setNewAccountBtn(true)}\n                    style={{\n                        color: '#216CFF',\n                        backgroundColor: '#FFFFFF',\n                        border: '1px solid #216CFF',\n                        borderRadius: '12px',\n                        width: '100%'\n                    }}\n                >\n                    Faça login\n                </CButton>\n            </div>\n        </>\n\n    )\n}\n\n\nexport default  NewAccount;\n","import { CButton, CCol, CForm, CFormCheck, CFormInput, CFormLabel, CInputGroup, CRow } from '@coreui/react'\nimport axios from 'axios';\nimport React, { useState } from 'react'\nimport { FaEye, FaEyeSlash } from 'react-icons/fa'\nimport urlDomain from 'src/config';\n\nimport logoOon from '../../../assets/images/oon-seguros-logo.svg';\nimport NewAccount from './NewAccount';\n\n\nfunction MainLogin({ userLogin, user, userPassword, password, setForgotMyPass, login }) {\n    const [newAccountBtn, setNewAccountBtn] = useState(true)\n    const [showPassword, setShowPassword] = useState(false)\n\n    const lembra = ({ target }) => {\n        // console.log(\n        // \ttarget.checked, 'aa'\n        // );\n\n        // if (target.checked) {\n        // localStorage.setItem('user', JSON.stringify({ user, password, checked: target.checked }))\n        // \t\tsetChecked(true)\n        // \t} else {\n        // \t\tlocalStorage.removeItem('user')\n        // \t\tsetChecked(false)\n        // \t}\n    }\n\n    return (\n        <div className=\"bg-light min-vh-100 d-flex flex-row align-items-center fundo-body\">\n            <CRow>\n                <CCol className='login-esq'>\n                    <p className='title-login-esq'>Bem vindo de volta</p>\n                    <p className='subtitle-login-esq'>Sentimos sua falta!</p>\n                </CCol>\n                {\n                    newAccountBtn ? (\n                        <CCol className='login-dir'>\n                            <img className=\"img-oon\" src={logoOon} alt=\"logo oon seguros\" />\n                            <p className=\"subtitle-login-dir\">Faça login na sua conta</p>\n                            <div className='inputs-container'>\n                                <CForm>\n                                    <CFormLabel\n                                        htmlFor=\"email\"\n                                        className=\"mb-1 email-password-form\"\n                                    >\n                                        E-mail\n                                    </CFormLabel>\n                                    <CInputGroup\n                                        className=\"mb-3\"\n                                    >\n                                        <CFormInput\n                                            className='radius-border'\n                                            id=\"email\"\n                                            type=\"email\"\n                                            onChange={userLogin}\n                                            value={user}\n                                            placeholder=\"Digite seu e-mail\"\n                                        />\n                                    </CInputGroup>\n                                    <CFormLabel\n                                        htmlFor=\"senha\"\n                                        className=\"mb-1 email-password-form\"\n                                    >\n                                        Senha\n                                    </CFormLabel>\n                                    <CInputGroup\n                                        className=\"mb-3\"\n                                    >\n                                        <div className=\"input-icons d-flex flex-row-reverse w-100\">\n                                            <CFormInput\n                                                className='radius-border'\n                                                id=\"senha\"\n                                                type={!showPassword ? 'password' : 'text'}\n                                                onChange={userPassword}\n                                                value={password}\n                                                placeholder=\"Digite sua senha\"\n                                                aria-describedby=\"eye-password\"\n                                            />\n                                            <i\n                                                id=\"eye-password\"\n                                                className='icon-login i-absolute'\n                                                onClick={() => !showPassword ? setShowPassword(true) : setShowPassword(false)}\n                                            >\n                                                {!showPassword ? <FaEye /> : <FaEyeSlash />}\n                                            </i>\n                                        </div>\n                                    </CInputGroup>\n                                    <CFormCheck\n                                        className=\"email-password-form\"\n                                        id=\"Lembrar de min\"\n                                        onChange={lembra}\n                                        label=\"Lembrar de mim\"\n                                    // checked={checked}\n                                    />\n                                </CForm>\n                                <br />\n                                <CButton\n                                    onClick={() => login()}\n                                    className=\"btns-login\"\n                                    style={{\n                                        backgroundColor: '#216CFF',\n                                        borderColor: '#216CFF'\n                                    }}\n                                >\n                                    Entrar na minha conta\n                                </CButton>\n                                <CButton\n                                    color='link'\n                                    style={{ color: '#14142B' }}\n                                    variant='ghost'\n                                    onClick={() => setForgotMyPass(false)}\n                                    className=\"btn-forgot-password\"\n                                >\n                                    Esqueci minha senha\n                                </CButton>\n                                <p className='pt-5 text-center new-account-text'>Não tem uma conta ainda? Crie já!</p>\n                                <CButton\n                                    onClick={() => setNewAccountBtn(false)}\n                                    style={{\n                                        color: '#216CFF',\n                                        backgroundColor: '#FFFFFF',\n                                        border: '1px solid #216CFF',\n                                        borderRadius: '12px',\n                                        width: '100%'\n                                    }}\n                                >\n                                    Criar uma nova conta\n                                </CButton>\n                            </div>\n                        </CCol>) : (\n                        <CCol className='login-dir'>\n                            <NewAccount\n                                showPassword={showPassword}\n                                setShowPassword={setShowPassword}\n                                setNewAccountBtn={setNewAccountBtn}\n                            />\n                        </CCol>\n                    )\n                }\n            </CRow>\n        </div>\n    )\n}\n\nexport default  MainLogin","import React, { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport { Route } from 'react-router-dom';\nimport Cookies from 'js-cookie';\n\n// var CryptoJS = require(\"crypto-js\");\nimport Criptacao from '../../security/cripto';\nimport UrlDomain from '../../config';\nimport RecoverPassword from './components/RecoverPassword';\nimport MainLogin from './components/MainLogin';\nconst DefaultLayout = React.lazy(() => import('../../layout/DefaultLayout'));\n\nimport './css/login.css';\n\nconst Login = () => {\n\tconst [user, setUser] = useState('')\n\tconst [password, setPassword] = useState('')\n\tconst [flag, setFlag] = useState(false)   // AQUI A FLAG DEVE SER FALSE\n\tconst [forgotMyPass, setForgotMyPass] = useState(true)\n\n\t// LEMBRAR DE MIN\n\tconst lembra = ({ target }) => {\n\t\t// console.log(\n\t\t// \ttarget.checked, 'aa'\n\t\t// );\n\n\t\t// if (target.checked) {\n\t\t// localStorage.setItem('user', JSON.stringify({ user, password, checked: target.checked }))\n\t\t// \t\tsetChecked(true)\n\t\t// \t} else {\n\t\t// \t\tlocalStorage.removeItem('user')\n\t\t// \t\tsetChecked(false)\n\t\t// \t}\n\t}\n\n\tuseEffect(() => {\n\t\t// const localStor = JSON.parse(localStorage.getItem('user'));\n\t\t// if(localStor){\n\t\t// \tsetChecked(true)\n\t\t// \tlogin({\n\t\t// \t\temail: localStor.user,\n\t\t// \t\tpassword: localStor.password\n\t\t// \t})\n\t\t// \tsetFlag(true)\n\t\t// }\n\t}, [])\n\n\n\tconst userLogin = (e) => {\n\t\tsetUser(e.target.value)\n\t}\n\n\tconst userPassword = (e) => {\n\t\tsetPassword(e.target.value)\n\t}\n\n\tconst login = () => {\n\t\tconst axiosConfig = {\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json;charset=UTF-8',\n\t\t\t\t\"Access-Control-Allow-Origin\": \"*\",\n\t\t\t}\n\t\t};\n\n\t\tconst postData = {\n\t\t\temail: user,\n\t\t\tpassword: password\n\t\t};\n\n\t\taxios\n\t\t\t.post(`${UrlDomain}/accounts/login`, postData, axiosConfig)\n\t\t\t.then((res) => {\n\t\t\t\tconsole.log(res)\n\t\t\t\tverificaLogin(res)\n\t\t\t})\n\t\t\t.catch(r => {\n\t\t\t\tconsole.log('error', r), alert('Senha errada')\n\t\t\t})\n\t}\n\n\tfunction verificaLogin(response) {\n\t\t// var usT = Cookies.get('userType')\n\t\tconsole.log(response, 'response verif')\n\t\t// resposta 200 permiti o login\n\t\tif (response.status == 200) {\n\t\t\tvar ini = Criptacao(response)\n\t\t\tcriptar(response)\n\n\t\t}\n\t}\n\n\tfunction criptar(response) {\n\t\t// var aux = response.data.tokenType + ' ' + response.data.token\n\t\tconsole.log('token');\n\t\tCookies.set('typeToken', response.data.tokenType)\n\t\tCookies.set('TokenID', response.data.token)\n\t\t//Cookies.set('userType', response.data.role)\n\t\t//Cookies.set('permissions', response.data.permissions)\n\t\tsetFlag(true)\n\t}\n\n\tif (flag) {\n\t\treturn (\n\t\t\t<Route path=\"/\" name=\"Home\" render={(props) => <DefaultLayout {...props} />} />\n\t\t)\n\t} else {\n\t\treturn forgotMyPass ? (\n\t\t\t<MainLogin\n\t\t\t\tuserLogin={userLogin}\n\t\t\t\tuser={user}\n\t\t\t\tuserPassword={userPassword}\n\t\t\t\tpassword={password}\n\t\t\t\tsetForgotMyPass={setForgotMyPass}\n\t\t\t\tlogin={login}\n\t\t\t/>\n\t\t) : (\n\t\t\t<RecoverPassword\n\t\t\t\tsetForgotMyPass={setForgotMyPass}\n\t\t\t\tuserLogin={userLogin}\n\t\t\t/>\n\t\t)\n\t}\n}\n\nexport default  Login;\n"],"sourceRoot":""}