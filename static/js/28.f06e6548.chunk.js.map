{"version":3,"sources":["../node_modules/react-icons/lib/esm/iconsManifest.js","../node_modules/react-icons/lib/esm/iconContext.js","../node_modules/react-icons/lib/esm/iconBase.js","views/widgets/WidgetsDropdown.jsx"],"names":["DefaultContext","color","undefined","size","className","style","attr","IconContext","React","createContext","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","Tree2Element","tree","map","node","createElement","tag","key","child","GenIcon","data","props","IconBase","elem","conf","title","svgProps","computedSize","stroke","fill","strokeWidth","height","width","xmlns","children","Consumer","WidgetsDropdown","useState","valor","porcentagem","acumuladoMensal","widget1","qtdAbertos","sinistroMes","widgetSinistro","planAnalise","planAtivo","planDesativado","planosData","xs","value","action","alignment","caret","icon","cilOptions","disabled","chart","labels","datasets","label","backgroundColor","borderColor","pointBackgroundColor","options","plugins","legend","display","maintainAspectRatio","scales","x","grid","drawBorder","ticks","y","min","max","elements","line","borderWidth","tension","point","radius","hitRadius","hoverRadius","cilArrowTop","sm"],"mappings":"qJAAO,I,gBCCIA,EAAiB,CAC1BC,WAAOC,EACPC,UAAMD,EACNE,eAAWF,EACXG,WAAOH,EACPI,UAAMJ,GAEGK,EAAcC,IAAMC,eAAiBD,IAAMC,cAAcT,GCRhEU,EAAoC,WAWtC,OAVAA,EAAWC,OAAOC,QAAU,SAAUC,GACpC,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAG9C,IAAK,IAAII,KAFTL,EAAIG,UAAUF,GAEOJ,OAAOS,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,IAG5E,OAAON,GAGFH,EAASa,MAAMC,KAAMP,YAG1BQ,EAAgC,SAAUX,EAAGY,GAC/C,IAAIb,EAAI,GAER,IAAK,IAAIM,KAAKL,EAAOH,OAAOS,UAAUC,eAAeC,KAAKR,EAAGK,IAAMO,EAAEC,QAAQR,GAAK,IAAGN,EAAEM,GAAKL,EAAEK,IAE9F,GAAS,MAALL,GAAqD,oBAAjCH,OAAOiB,sBAA2C,KAAIb,EAAI,EAAb,IAAgBI,EAAIR,OAAOiB,sBAAsBd,GAAIC,EAAII,EAAED,OAAQH,IAClIW,EAAEC,QAAQR,EAAEJ,IAAM,GAAKJ,OAAOS,UAAUS,qBAAqBP,KAAKR,EAAGK,EAAEJ,MAAKF,EAAEM,EAAEJ,IAAMD,EAAEK,EAAEJ,KAEhG,OAAOF,GAMT,SAASiB,EAAaC,GACpB,OAAOA,GAAQA,EAAKC,KAAI,SAAUC,EAAMlB,GACtC,OAAOP,IAAM0B,cAAcD,EAAKE,IAAKzB,EAAS,CAC5C0B,IAAKrB,GACJkB,EAAK3B,MAAOwB,EAAaG,EAAKI,WAI9B,SAASC,EAAQC,GACtB,OAAO,SAAUC,GACf,OAAOhC,IAAM0B,cAAcO,EAAU/B,EAAS,CAC5CJ,KAAMI,EAAS,GAAI6B,EAAKjC,OACvBkC,GAAQV,EAAaS,EAAKF,SAG1B,SAASI,EAASD,GACvB,IAAIE,EAAO,SAAUC,GACnB,IAMIvC,EANAE,EAAOkC,EAAMlC,KACbH,EAAOqC,EAAMrC,KACbyC,EAAQJ,EAAMI,MACdC,EAAWpB,EAAOe,EAAO,CAAC,OAAQ,OAAQ,UAE1CM,EAAe3C,GAAQwC,EAAKxC,MAAQ,MAIxC,OAFIwC,EAAKvC,YAAWA,EAAYuC,EAAKvC,WACjCoC,EAAMpC,YAAWA,GAAaA,EAAYA,EAAY,IAAM,IAAMoC,EAAMpC,WACrEI,IAAM0B,cAAc,MAAOxB,EAAS,CACzCqC,OAAQ,eACRC,KAAM,eACNC,YAAa,KACZN,EAAKrC,KAAMA,EAAMuC,EAAU,CAC5BzC,UAAWA,EACXC,MAAOK,EAASA,EAAS,CACvBT,MAAOuC,EAAMvC,OAAS0C,EAAK1C,OAC1B0C,EAAKtC,OAAQmC,EAAMnC,OACtB6C,OAAQJ,EACRK,MAAOL,EACPM,MAAO,+BACLR,GAASpC,IAAM0B,cAAc,QAAS,KAAMU,GAAQJ,EAAMa,WAGhE,YAAuBnD,IAAhBK,EAA4BC,IAAM0B,cAAc3B,EAAY+C,SAAU,MAAM,SAAUX,GAC3F,OAAOD,EAAKC,MACTD,EAAK1C,K,0ICsRGuD,UAzUS,WAEpB,MAA8CC,mBAAS,CACnDC,MAAO,QACPC,aAAc,GACdd,MAAO,qBAHX,mBAAOe,EAAP,KAQA,GARA,KAQ8BH,mBAASG,IAAvC,mBAAOC,EAAP,KAGA,GAHA,KAGsCJ,mBAAS,CAC3CK,WAAY,GACZH,YAAa,GACbd,MAAO,gCAHX,mBAAOkB,EAAP,KAQA,GARA,KAQ4CN,mBAASM,IAArD,mBAAOC,EAAP,KAGA,GAHA,KAGoCP,mBAAS,CACzCQ,YAAa,GACbC,UAAW,GACXC,eAAgB,MAHpB,mBAAOC,EAAP,UAMA,OACI,mCACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAMC,GAAI,EAAV,SACI,cAAC,IAAD,CAAUhE,UAAU,qBAAqBH,MAAM,UAA/C,SACI,cAAC,KAAD,CACIG,UAAU,mBACViE,MACI,mCACI,sBAAKjE,UAAU,GAAf,gBACQwD,EAAQH,WAQxBb,MAAOgB,EAAQhB,MACf0B,OACI,eAAC,IAAD,CAAWC,UAAU,MAArB,UACI,cAAC,IAAD,CACItE,MAAM,cACNuE,OAAO,EACPpE,UAAU,MAHd,SAKI,cAAC,IAAD,CAAOqE,KAAMC,QAEjB,eAAC,IAAD,WACI,cAAC,IAAD,6BACA,cAAC,IAAD,iCAGA,cAAC,IAAD,+BAGA,cAAC,IAAD,CAAeC,UAAQ,EAAvB,oCAMZC,MACI,cAAC,IAAD,CACIxE,UAAU,aACVC,MAAO,CAAE6C,OAAQ,QACjBX,KAAM,CACFsC,OAAQ,CACJ,YACA,cACA,QACA,QACA,MACA,OACA,OACA,UACA,WACA,QACA,QACA,MACA,OACA,QAEJC,SAAU,CACN,CACIC,MAAO,mBACPC,gBAAiB,UACjBC,YAAa,qBACbC,qBACI,uBACJ3C,KAAM,CACF,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5B,GAAI,GAAI,GAAI,GAAI,GAAI,OAKpC4C,QAAS,CACLC,QAAS,CACLC,OAAQ,CACJC,SAAS,IAGjBC,qBAAqB,EACrBC,OAAQ,CACJC,EAAG,CACCC,KAAM,CACFJ,SAAS,EACTK,YAAY,GAEhBC,MAAO,CACHN,SAAS,IAGjBO,EAAG,CACCC,IAAK,GACLC,IAAK,GACLT,SAAS,EACTI,KAAM,CACFJ,SAAS,GAEbM,MAAO,CACHN,SAAS,KAIrBU,SAAU,CACNC,KAAM,CACFC,YAAa,EACbC,QAAS,IAEbC,MAAO,CACHC,OAAQ,EACRC,UAAW,GACXC,YAAa,aAU7C,cAAC,IAAD,CAAMnC,GAAI,EAAV,SACI,cAAC,IAAD,CAAUhE,UAAU,qBAAqBH,MAAM,SAA/C,SACI,cAAC,KAAD,CACIG,UAAU,mBACViE,MACI,qCACKN,EAAeF,WAChB,uBAAMzD,UAAU,iBAAhB,cACM2D,EAAeL,YADrB,IAEI,cAAC,IAAD,CAAOe,KAAM+B,MAFjB,UAMR5D,MAAOmB,EAAenB,MACtB0B,OACI,eAAC,IAAD,CAAWC,UAAU,MAArB,UACI,cAAC,IAAD,CACItE,MAAM,cACNuE,OAAO,EACPpE,UAAU,MAHd,SAKI,cAAC,IAAD,CAAOqE,KAAMC,QAEjB,eAAC,IAAD,WACI,cAAC,IAAD,6BACA,cAAC,IAAD,iCAGA,cAAC,IAAD,+BAGA,cAAC,IAAD,CAAeC,UAAQ,EAAvB,oCAMZC,MACI,cAAC,IAAD,CACIxE,UAAU,YACVC,MAAO,CAAE6C,OAAQ,QACjBX,KAAM,CACFsC,OAAQ,CACJ,WACA,WACA,QACA,QACA,MACA,OACA,QAEJC,SAAU,CACN,CACIC,MAAO,2BACPC,gBAAiB,OACjBC,YAAa,qBACbC,qBACI,sBACJ3C,KAAM,CAAC,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,OAIzC4C,QAAS,CACLC,QAAS,CACLC,OAAQ,CACJC,SAAS,IAGjBC,qBAAqB,EACrBC,OAAQ,CACJC,EAAG,CACCC,KAAM,CACFJ,SAAS,EACTK,YAAY,GAEhBC,MAAO,CACHN,SAAS,IAGjBO,EAAG,CACCC,KAAM,EACNC,IAAK,GACLT,SAAS,EACTI,KAAM,CACFJ,SAAS,GAEbM,MAAO,CACHN,SAAS,KAIrBU,SAAU,CACNC,KAAM,CACFC,YAAa,GAEjBE,MAAO,CACHC,OAAQ,EACRC,UAAW,GACXC,YAAa,aAU7C,cAAC,IAAD,CAAMnC,GAAI,EAAV,SAEI,cAAC,IAAD,CAAUhE,UAAU,qBAAqBH,MAAM,UAA/C,SACI,cAAC,IAAD,CAAOG,UAAU,cAAjB,SACI,eAAC,IAAD,CAAWA,UAAU,OAArB,UACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAMA,UAAU,kCAAhB,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CACIH,MAAM,cACNuE,OAAO,EACPpE,UAAU,MAHd,SAKI,cAAC,IAAD,CAAOqE,KAAMC,QAEjB,eAAC,IAAD,WACI,cAAC,IAAD,6BAGA,cAAC,IAAD,iCAGA,cAAC,IAAD,+BAGA,cAAC,IAAD,CAAeC,UAAQ,EAAvB,wCAOhB,eAAC,IAAD,WACI,eAAC,IAAD,CAAMvE,UAAU,aAAaqG,GAAG,OAAhC,UACI,mBAAGrG,UAAU,gBAAb,SACI,cAAC,IAAD,MAEJ,mBAAGA,UAAU,eAAb,SACI,cAAC,IAAD,MAEJ,mBAAGA,UAAU,aAAb,SACI,cAAC,IAAD,SAGR,eAAC,IAAD,CAAMgE,GAAI,EAAGhE,UAAU,MAAvB,UACI,8BACK+D,EAAWH,YADhB,2BAIA,kCAAKG,EAAWF,UAAhB,oBACA,8BACKE,EAAWD,eADhB","file":"static/js/28.f06e6548.chunk.js","sourcesContent":["export var IconsManifest = [\n  {\n    \"id\": \"fa\",\n    \"name\": \"Font Awesome\",\n    \"projectUrl\": \"https://fontawesome.com/\",\n    \"license\": \"CC BY 4.0 License\",\n    \"licenseUrl\": \"https://creativecommons.org/licenses/by/4.0/\"\n  },\n  {\n    \"id\": \"io\",\n    \"name\": \"Ionicons 4\",\n    \"projectUrl\": \"https://ionicons.com/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/ionic-team/ionicons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"io5\",\n    \"name\": \"Ionicons 5\",\n    \"projectUrl\": \"https://ionicons.com/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/ionic-team/ionicons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"md\",\n    \"name\": \"Material Design icons\",\n    \"projectUrl\": \"http://google.github.io/material-design-icons/\",\n    \"license\": \"Apache License Version 2.0\",\n    \"licenseUrl\": \"https://github.com/google/material-design-icons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"ti\",\n    \"name\": \"Typicons\",\n    \"projectUrl\": \"http://s-ings.com/typicons/\",\n    \"license\": \"CC BY-SA 3.0\",\n    \"licenseUrl\": \"https://creativecommons.org/licenses/by-sa/3.0/\"\n  },\n  {\n    \"id\": \"go\",\n    \"name\": \"Github Octicons icons\",\n    \"projectUrl\": \"https://octicons.github.com/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/primer/octicons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"fi\",\n    \"name\": \"Feather\",\n    \"projectUrl\": \"https://feathericons.com/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/feathericons/feather/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"gi\",\n    \"name\": \"Game Icons\",\n    \"projectUrl\": \"https://game-icons.net/\",\n    \"license\": \"CC BY 3.0\",\n    \"licenseUrl\": \"https://creativecommons.org/licenses/by/3.0/\"\n  },\n  {\n    \"id\": \"wi\",\n    \"name\": \"Weather Icons\",\n    \"projectUrl\": \"https://erikflowers.github.io/weather-icons/\",\n    \"license\": \"SIL OFL 1.1\",\n    \"licenseUrl\": \"http://scripts.sil.org/OFL\"\n  },\n  {\n    \"id\": \"di\",\n    \"name\": \"Devicons\",\n    \"projectUrl\": \"https://vorillaz.github.io/devicons/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"ai\",\n    \"name\": \"Ant Design Icons\",\n    \"projectUrl\": \"https://github.com/ant-design/ant-design-icons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"bs\",\n    \"name\": \"Bootstrap Icons\",\n    \"projectUrl\": \"https://github.com/twbs/icons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"ri\",\n    \"name\": \"Remix Icon\",\n    \"projectUrl\": \"https://github.com/Remix-Design/RemixIcon\",\n    \"license\": \"Apache License Version 2.0\",\n    \"licenseUrl\": \"http://www.apache.org/licenses/\"\n  },\n  {\n    \"id\": \"fc\",\n    \"name\": \"Flat Color Icons\",\n    \"projectUrl\": \"https://github.com/icons8/flat-color-icons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"gr\",\n    \"name\": \"Grommet-Icons\",\n    \"projectUrl\": \"https://github.com/grommet/grommet-icons\",\n    \"license\": \"Apache License Version 2.0\",\n    \"licenseUrl\": \"http://www.apache.org/licenses/\"\n  },\n  {\n    \"id\": \"hi\",\n    \"name\": \"Heroicons\",\n    \"projectUrl\": \"https://github.com/tailwindlabs/heroicons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"si\",\n    \"name\": \"Simple Icons\",\n    \"projectUrl\": \"https://simpleicons.org/\",\n    \"license\": \"CC0 1.0 Universal\",\n    \"licenseUrl\": \"https://creativecommons.org/publicdomain/zero/1.0/\"\n  },\n  {\n    \"id\": \"im\",\n    \"name\": \"IcoMoon Free\",\n    \"projectUrl\": \"https://github.com/Keyamoon/IcoMoon-Free\",\n    \"license\": \"CC BY 4.0 License\"\n  },\n  {\n    \"id\": \"bi\",\n    \"name\": \"BoxIcons\",\n    \"projectUrl\": \"https://github.com/atisawd/boxicons\",\n    \"license\": \"CC BY 4.0 License\"\n  },\n  {\n    \"id\": \"cg\",\n    \"name\": \"css.gg\",\n    \"projectUrl\": \"https://github.com/astrit/css.gg\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"vsc\",\n    \"name\": \"VS Code Icons\",\n    \"projectUrl\": \"https://github.com/microsoft/vscode-codicons\",\n    \"license\": \"CC BY 4.0\",\n    \"licenseUrl\": \"https://creativecommons.org/licenses/by/4.0/\"\n  }\n]","import React from 'react';\nexport var DefaultContext = {\n  color: undefined,\n  size: undefined,\n  className: undefined,\n  style: undefined,\n  attr: undefined\n};\nexport var IconContext = React.createContext && React.createContext(DefaultContext);","var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React from 'react';\nimport { IconContext, DefaultContext } from './iconContext';\n\nfunction Tree2Element(tree) {\n  return tree && tree.map(function (node, i) {\n    return React.createElement(node.tag, __assign({\n      key: i\n    }, node.attr), Tree2Element(node.child));\n  });\n}\n\nexport function GenIcon(data) {\n  return function (props) {\n    return React.createElement(IconBase, __assign({\n      attr: __assign({}, data.attr)\n    }, props), Tree2Element(data.child));\n  };\n}\nexport function IconBase(props) {\n  var elem = function (conf) {\n    var attr = props.attr,\n        size = props.size,\n        title = props.title,\n        svgProps = __rest(props, [\"attr\", \"size\", \"title\"]);\n\n    var computedSize = size || conf.size || \"1em\";\n    var className;\n    if (conf.className) className = conf.className;\n    if (props.className) className = (className ? className + ' ' : '') + props.className;\n    return React.createElement(\"svg\", __assign({\n      stroke: \"currentColor\",\n      fill: \"currentColor\",\n      strokeWidth: \"0\"\n    }, conf.attr, attr, svgProps, {\n      className: className,\n      style: __assign(__assign({\n        color: props.color || conf.color\n      }, conf.style), props.style),\n      height: computedSize,\n      width: computedSize,\n      xmlns: \"http://www.w3.org/2000/svg\"\n    }), title && React.createElement(\"title\", null, title), props.children);\n  };\n\n  return IconContext !== undefined ? React.createElement(IconContext.Consumer, null, function (conf) {\n    return elem(conf);\n  }) : elem(DefaultContext);\n}","import React, { useState } from \"react\";\nimport {\n    CRow,\n    CCol,\n    CDropdown,\n    CDropdownMenu,\n    CDropdownItem,\n    CDropdownToggle,\n    CWidgetStatsA,\n    CCard,\n    CCardBody,\n    CCallout,\n} from \"@coreui/react\";\nimport { CChartLine } from \"@coreui/react-chartjs\";\nimport { BsCircleFill } from \"react-icons/bs\";\nimport CIcon from \"@coreui/icons-react\";\nimport { cilArrowTop, cilOptions } from \"@coreui/icons\";\n\nimport \"./css/widget.css\";\n\nconst WidgetsDropdown = () => {\n    // WIDGET 1 (Acumulado Mensal)-- Ainda falta colocar dados, labels ex: mes 1,2,3,4 ...\n    const [acumuladoMensal, setAcumuladoMensal] = useState({\n        valor: 9999.99,\n        porcentagem: -12,\n        title: \"Acumulado Mensal\",\n    }); // valores mes\n    // valor semana\n    // valor dia\n    // vamos ter que setar o mes, mes será usado de inicio, podendo ser dia ou semana, Uma variavel será usada para definir os campos\n    const [widget1, setWidget1] = useState(acumuladoMensal);\n\n    // WIDGET 2 (Abertura de Sinistro)\n    const [sinistroMes, setSinistroMes] = useState({\n        qtdAbertos: 23,\n        porcentagem: 10,\n        title: \"Sinistro abertos no mês\",\n    });\n    // Semana\n    // DIA\n    // Variavel definidora\n    const [widgetSinistro, setWidgetSinistro] = useState(sinistroMes);\n\n    // widget 3 - valores de planos\n    const [planosData, setPlanosData] = useState({\n        planAnalise: 20,\n        planAtivo: 35,\n        planDesativado: 40,\n    });\n\n    return (\n        <>\n            <CRow>\n                <CCol xs={4}>\n                    <CCallout className=\"p-0 callout-widget\" color=\"success\">\n                        <CWidgetStatsA\n                            className=\"widget-container\"\n                            value={\n                                <>\n                                    <div className=\"\">\n                                        R$ {widget1.valor}\n                                        {/* <span className=\"fs-6 fw-normal\">\n                                        ( {widget1.porcentagem} %\n                                            <CIcon icon={cilArrowBottom} />)\n                                            {/* </span> */}\n                                    </div>\n                                </>\n                            }\n                            title={widget1.title}\n                            action={\n                                <CDropdown alignment=\"end\">\n                                    <CDropdownToggle\n                                        color=\"transparent\"\n                                        caret={false}\n                                        className=\"p-0\"\n                                    >\n                                        <CIcon icon={cilOptions} />\n                                    </CDropdownToggle>\n                                    <CDropdownMenu>\n                                        <CDropdownItem>Alterar mês</CDropdownItem>\n                                        <CDropdownItem>\n                                            Gerar relátorio\n                                        </CDropdownItem>\n                                        <CDropdownItem>\n                                            Gerar gráfico\n                                        </CDropdownItem>\n                                        <CDropdownItem disabled>\n                                            Mais Ferramentas\n                                        </CDropdownItem>\n                                    </CDropdownMenu>\n                                </CDropdown>\n                            }\n                            chart={\n                                <CChartLine\n                                    className=\"mt-3 mx-3 \"\n                                    style={{ height: \"70px\" }}\n                                    data={{\n                                        labels: [\n                                            \"Januaryss\",\n                                            \"FebruarySSS\",\n                                            \"March\",\n                                            \"April\",\n                                            \"May\",\n                                            \"June\",\n                                            \"July\",\n                                            \"January\",\n                                            \"February\",\n                                            \"March\",\n                                            \"April\",\n                                            \"May\",\n                                            \"June\",\n                                            \"July\",\n                                        ],\n                                        datasets: [\n                                            {\n                                                label: \"My First dataset\",\n                                                backgroundColor: \"warning\",\n                                                borderColor: \"rgba(29,27,31,0.5)\",\n                                                pointBackgroundColor:\n                                                    \"rgba(35,235,58, 0.8)\",\n                                                data: [\n                                                    65, 59, 84, 84, 51, 55, 40, 65,\n                                                    59, 84, 84, 51, 55, 40,\n                                                ],\n                                            },\n                                        ],\n                                    }}\n                                    options={{\n                                        plugins: {\n                                            legend: {\n                                                display: false,\n                                            },\n                                        },\n                                        maintainAspectRatio: false,\n                                        scales: {\n                                            x: {\n                                                grid: {\n                                                    display: false,\n                                                    drawBorder: false,\n                                                },\n                                                ticks: {\n                                                    display: false,\n                                                },\n                                            },\n                                            y: {\n                                                min: 30,\n                                                max: 89,\n                                                display: false,\n                                                grid: {\n                                                    display: false,\n                                                },\n                                                ticks: {\n                                                    display: false,\n                                                },\n                                            },\n                                        },\n                                        elements: {\n                                            line: {\n                                                borderWidth: 1,\n                                                tension: 0.4,\n                                            },\n                                            point: {\n                                                radius: 4,\n                                                hitRadius: 10,\n                                                hoverRadius: 4,\n                                            },\n                                        },\n                                    }}\n                                />\n                            }\n                        />\n                    </CCallout>\n                </CCol>\n\n                <CCol xs={4}>\n                    <CCallout className=\"p-0 callout-widget\" color=\"danger\">\n                        <CWidgetStatsA\n                            className=\"widget-container\"\n                            value={\n                                <>\n                                    {widgetSinistro.qtdAbertos}\n                                    <span className=\"fs-6 fw-normal\">\n                                        ({widgetSinistro.porcentagem}%\n                                        <CIcon icon={cilArrowTop} />)\n                                    </span>\n                                </>\n                            }\n                            title={widgetSinistro.title}\n                            action={\n                                <CDropdown alignment=\"end\">\n                                    <CDropdownToggle\n                                        color=\"transparent\"\n                                        caret={false}\n                                        className=\"p-0\"\n                                    >\n                                        <CIcon icon={cilOptions} />\n                                    </CDropdownToggle>\n                                    <CDropdownMenu>\n                                        <CDropdownItem>Alterar mês</CDropdownItem>\n                                        <CDropdownItem>\n                                            Gerar relátorio\n                                        </CDropdownItem>\n                                        <CDropdownItem>\n                                            Gerar gráfico\n                                        </CDropdownItem>\n                                        <CDropdownItem disabled>\n                                            Mais Ferramentas\n                                        </CDropdownItem>\n                                    </CDropdownMenu>\n                                </CDropdown>\n                            }\n                            chart={\n                                <CChartLine\n                                    className=\"mt-3 mx-3\"\n                                    style={{ height: \"70px\" }}\n                                    data={{\n                                        labels: [\n                                            \"Januaryi\",\n                                            \"February\",\n                                            \"March\",\n                                            \"April\",\n                                            \"May\",\n                                            \"June\",\n                                            \"July\",\n                                        ],\n                                        datasets: [\n                                            {\n                                                label: \"My First dataset  ORIGIM\",\n                                                backgroundColor: \"info\",\n                                                borderColor: \"rgba(29,27,31,0.5)\",\n                                                pointBackgroundColor:\n                                                    \"rgba(235,0,38, 0.8)\",\n                                                data: [1, 18, 9, 17, 34, 22, 11],\n                                            },\n                                        ],\n                                    }}\n                                    options={{\n                                        plugins: {\n                                            legend: {\n                                                display: false,\n                                            },\n                                        },\n                                        maintainAspectRatio: false,\n                                        scales: {\n                                            x: {\n                                                grid: {\n                                                    display: false,\n                                                    drawBorder: false,\n                                                },\n                                                ticks: {\n                                                    display: false,\n                                                },\n                                            },\n                                            y: {\n                                                min: -9,\n                                                max: 39,\n                                                display: false,\n                                                grid: {\n                                                    display: false,\n                                                },\n                                                ticks: {\n                                                    display: false,\n                                                },\n                                            },\n                                        },\n                                        elements: {\n                                            line: {\n                                                borderWidth: 1,\n                                            },\n                                            point: {\n                                                radius: 4,\n                                                hitRadius: 10,\n                                                hoverRadius: 4,\n                                            },\n                                        },\n                                    }}\n                                />\n                            }\n                        />\n                    </CCallout>\n                </CCol>\n\n                <CCol xs={4}>\n\n                    <CCallout className=\"p-0 callout-widget\" color=\"warning\">\n                        <CCard className=\"card-widget\">\n                            <CCardBody className=\"py-0\">\n                                <CRow>\n                                    <CCol className=\"d-flex justify-content-end mt-3\">\n                                        <CDropdown>\n                                            <CDropdownToggle\n                                                color=\"transparent\"\n                                                caret={false}\n                                                className=\"p-0\"\n                                            >\n                                                <CIcon icon={cilOptions} />\n                                            </CDropdownToggle>\n                                            <CDropdownMenu>\n                                                <CDropdownItem>\n                                                    Alterar mês\n                                                </CDropdownItem>\n                                                <CDropdownItem>\n                                                    Gerar relátorio\n                                                </CDropdownItem>\n                                                <CDropdownItem>\n                                                    Gerar gráfico\n                                                </CDropdownItem>\n                                                <CDropdownItem disabled>\n                                                    Mais Ferramentas\n                                                </CDropdownItem>\n                                            </CDropdownMenu>\n                                        </CDropdown>\n                                    </CCol>\n                                </CRow>\n                                <CRow>\n                                    <CCol className=\"leftSimbol\" sm=\"auto\">\n                                        <p className=\"circle-orange\">\n                                            <BsCircleFill />\n                                        </p>\n                                        <p className=\"circle-green\">\n                                            <BsCircleFill />\n                                        </p>\n                                        <p className=\"circle-red\">\n                                            <BsCircleFill />\n                                        </p>\n                                    </CCol>\n                                    <CCol xs={9} className=\"p-0\">\n                                        <p>\n                                            {planosData.planAnalise} Planos em\n                                            análise\n                                        </p>\n                                        <p> {planosData.planAtivo} Planos ativos</p>\n                                        <p>\n                                            {planosData.planDesativado} Planos\n                                            desativados\n                                        </p>\n                                    </CCol>\n\n\n                                </CRow>\n                            </CCardBody>\n                        </CCard>\n                    </CCallout>\n                </CCol>\n            </CRow>\n        </>\n    );\n};\n\nexport default WidgetsDropdown;\n"],"sourceRoot":""}