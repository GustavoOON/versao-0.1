{"version":3,"sources":["config.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/react-bootstrap/esm/Spinner.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","views/coverages/render/BtnEdit.jsx","views/coverages/render/Describe.jsx","views/coverages/render/NewServices.jsx","views/coverages/render/Service.jsx","views/coverages/render/Status.jsx","views/coverages/Services.jsx"],"names":["configCookies","token","Cookies","get","headers","Authorization","urlDomain","module","exports","Spinner","React","ref","bsPrefix","variant","animation","size","as","Component","className","props","useBootstrapPrefix","bsSpinnerPrefix","_jsx","classNames","displayName","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","CryptoJS","require","EditarService","cilAccountLogout","cilActionRedo","cilActionUndo","cilAddressBook","cilAirplaneModeOff","cilAirplaneMode","cilAirplay","cilAlarm","usT","config","AES","decrypt","toString","enc","Utf8","useState","show","setShow","handleClose","item","description","servico","setServico","descricao","setDescricao","parseFloat","valuePerKm","valueKm","setValueKm","status","setStatus","getStatus","e","a","save","id","disabled","axios","patch","UrlDomain","response","parentCallback","catch","r","console","log","alert","onClick","color","Modal","onHide","Header","closeButton","Title","Body","Form","Group","controlId","type","onChange","target","required","min","step","Label","name","label","defaultChecked","Control","rows","Footer","Button","Describe","BtnNewService","iconeEscolhido","setIconeEscolhido","setDescribe","nameService","setNameService","setValuePerKm","escolha","placeholder","icon","cilAnimal","cilBabyCarriage","cilBaby","cilBellExclamation","cilBurn","cilBusAlt","cilCarAlt","cilCalendar","cilCursor","cilCreditCard","cilEnvelopeClosed","cilGarage","cilHospital","cilLocationPin","cilMagnifyingGlass","cilPaperPlane","cilRain","cilRss","cilTaxi","cilTruck","post","attPage","window","location","reload","Service","Status","Services","busca","msgOri","services","setServices","userType","dados","setDados","busca2","setBusca","dados2","BuscaUser","auxBusca","toLocaleLowerCase","map","includes","push","atualizar","data","useEffect","fluid","href","cilLoop","striped","align","hover","responsive","index","BtnEdit"],"mappings":"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","file":"static/js/24.58d346b4.chunk.js","sourcesContent":["import Cookies from \"js-cookie\";\n\n// Endereço padrão das API\n\nconst prod = \"http://dashboardbff.oonpayperuse.com.br\";\nconst dev = \"http://localhost:8080\";\n\nconst tokenMaps = \"AIzaSyB9I7snvZRRQ6faupULeBXYz5tU2AUuWek\"; // TOKEN PESSOAL\nconst urlDomain = prod;\n\nexport const configCookies = () => {\n    const token = Cookies.get(\"TokenID\");\n\n    const authorization = {\n        headers: {\n            Authorization: `Bearer ${token}`,\n            \"Content-Type\": \"application/json;charset=UTF-8\",\n            \"Access-Control-Allow-Origin\": \"*\",\n        },\n    };\n\n    return authorization;\n};\n\nexport default  urlDomain;\n","module.exports = require(\"regenerator-runtime\");\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Spinner = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  variant,\n  animation,\n  size,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  className,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'spinner');\n  const bsSpinnerPrefix = `${bsPrefix}-${animation}`;\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsSpinnerPrefix, size && `${bsSpinnerPrefix}-${size}`, variant && `text-${variant}`)\n  });\n});\nSpinner.displayName = 'Spinner';\nexport default Spinner;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import React, {useState} from 'react'\nimport axios from 'axios'\nimport Cookies  from 'js-cookie'\n\nimport UrlDomain from './../../../config'\nvar CryptoJS = require(\"crypto-js\");\n\nimport { Button, Modal,  Form, Container, Row, Col    }  from 'react-bootstrap';\nimport {\n    CButton ,\n    CFormInput,\n    CFormLabel,\n    CRow,\n    CFormCheck,\n    CCol,\n    \n  } from '@coreui/react'\n  import CIcon from '@coreui/icons-react'\n\n  const icons = [cilAccountLogout, cilActionRedo, cilActionUndo, cilAddressBook, cilAirplaneModeOff, cilAirplaneMode, cilAirplay, cilAlarm]\n  import {cilAccountLogout, cilActionRedo, cilActionUndo, cilAddressBook, cilAirplaneModeOff, cilAirplaneMode, cilAirplay, cilAlarm } from '@coreui/icons'\n\nconst EditarService = (props) =>{\n    const token = Cookies.get('TokenID')\n    \n    var usT = Cookies.get('userType')\n    var msg  = CryptoJS.AES.decrypt(usT, 'OnnSeguros');\n    var msgOri = msg.toString(CryptoJS.enc.Utf8);\n\n    const userType = msgOri\n\n    let config = {\n        headers: {\n          'Authorization': `Bearer ${token}`, \n          \"Accept\": \"*/*\",\n          \"Content-Type\": \"application/json\",\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Access-Control-Allow-Methods\": \"PATCH\"\n        }\n    };\n    const [visible, setVisible] = useState(false)  \n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n\n    const [servico, setServico ] = useState(props.item.description)\n    const servicoNome = (e) =>{setServico(e.target.value)}\n\n    const [descricao, setDescricao] = useState('Campo ainda não aplicado....')\n    const serviceDescricao = (e) =>{setDescricao(e.target.value)}  \n\n    const [valueKm, setValueKm] = useState(parseFloat(props.item.valuePerKm))\n    const newValueKm = e =>{setValueKm(e.target.value)}\n    \n    const [status, setStatus] = useState(false)\n    const getStatus = (e) =>{setStatus(e)}\n\n  \n   \n    function verifica(){\n        const handleShow =  setShow(true);\n    }\n\n    async function salvarEdicoes (){\n        setShow(false);\n        let save = {id:props.item.id , description:servico , disabled:status, valuePerKm:valueKm}\n        \n       await  axios \n            .patch(`${UrlDomain}/coverages`, save, config)\n            .then((response) => { \n                setShow(false);\n                props.parentCallback()\n            })\n            .catch(r =>{ \n                console.log('error', r), alert('Login expirado') //,window.location.reload()\n            }) // window.location.reload();\n    }\n\n\n\n    return (\n        <>\n            <CButton disabled onClick={verifica} color=\"light\">Editar</CButton>\n\n            <Modal \n                show={show} \n                onHide={handleClose}\n                size=\"xl\"\n            >\n                    \n                <Modal.Header  closeButton>\n                    <Modal.Title>Editar  serviço </Modal.Title>\n                </Modal.Header>\n                <Modal.Body className='container-body'>\n                    \n                    <CRow>\n                        <CCol>\n                            <Form>\n                                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                                    <div className='containers-inputs-coverages'>\n                                        <CFormLabel >Nome do Serviço</CFormLabel>\n                                        <CFormInput type=\"text\" id=\"namePlan\" value = {servico} onChange={servicoNome} />\n                                    </div>\n                                   \n                                    <div className='containers-inputs-coverages'>\n                                        <CFormLabel >Valor por Km</CFormLabel>\n                                        <CFormInput type=\"number\" id=\"namePlan\" value = {valueKm} required  min=\"0.00\"  step=\".01\" onChange={newValueKm} />\n                                    </div>\n\n                                    <div className='containers-inputs-coverages'>\n                                        <Form.Label> Desativar cobertura ? </Form.Label>\n                                        <CFormCheck type=\"radio\" onChange={() =>{getStatus(true)}} name=\"statusUser\" id=\"statusUser1\" label=\"Sim\"/>\n                                        <CFormCheck type=\"radio\" onChange={() =>{getStatus(false)}} name=\"statusUser\" id=\"statusUser2\" label=\"Não\" defaultChecked/>\n                                    </div>\n                                    <br />\n                                    {/*\n                                    <CContainer className='container-select'>\n                                        <CButton onClick={()=> escolha('cilAccountLogout')} className='iconContainer' variant='ghost' color='dark'>\n                                            <CIcon icon={cilAccountLogout}  size=\"xl\" />\n                                        </CButton>\n                                        <CButton onClick={()=> escolha('cilActionRedo')}  className='iconContainer' variant='ghost' color='dark'>\n                                            <CIcon icon={cilActionRedo}  size=\"xl\" />\n                                        </CButton>\n                                        <CButton onClick={()=> escolha('cilActionUndo')}  className='iconContainer' variant='ghost' color='dark'>\n                                            <CIcon icon={cilActionUndo}  size=\"xl\" />\n                                        </CButton>\n                                        <CButton onClick={()=> escolha('cilAddressBook')}  className='iconContainer' variant='ghost' color='dark'>\n                                            <CIcon icon={cilAddressBook}  size=\"xl\" />\n                                        </CButton>\n                                        <CButton onClick={()=> escolha('cilAirplaneModeOff')}  className='iconContainer' variant='ghost' color='dark'>\n                                            <CIcon icon={cilAirplaneModeOff}  size=\"xl\" />\n                                        </CButton>\n                                        <CButton onClick={()=> escolha('cilAirplaneMode')}  className='iconContainer' variant='ghost' color='dark'>\n                                            <CIcon icon={cilAirplaneMode}  size=\"xl\" />\n                                        </CButton>\n                                        <CButton onClick={()=> escolha('cilAirplay')}  className='iconContainer' variant='ghost' color='dark'>\n                                            <CIcon icon={cilAirplay}  size=\"xl\" />\n                                        </CButton>\n                                        \n\n\n                                        <CButton onClick={()=> escolha('cilAirplay')}  className='iconContainer' variant='ghost' color='dark'>\n                                            <CIcon icon={cilAirplay}  size=\"xl\" />\n                                        </CButton> \n                                        <CButton onClick={()=> escolha('cilAirplay')}  className='iconContainer' variant='ghost' color='dark'>\n                                            <CIcon icon={cilAirplay}  size=\"xl\" />\n                                        </CButton> \n                                        <CButton onClick={()=> escolha('cilAirplay')}  className='iconContainer' variant='ghost' color='dark'>\n                                            <CIcon icon={cilAirplay}  size=\"xl\" />\n                                        </CButton> \n                                        <CButton onClick={()=> escolha('cilAirplay')}  className='iconContainer' variant='ghost' color='dark'>\n                                            <CIcon icon={cilAirplay}  size=\"xl\" />\n                                        </CButton> \n                                        <CButton onClick={()=> escolha('cilAirplay')}  className='iconContainer' variant='ghost' color='dark'>\n                                            <CIcon icon={cilAirplay}  size=\"xl\" />\n                                        </CButton> \n                                        <CButton onClick={()=> escolha('cilAirplay')}  className='iconContainer' variant='ghost' color='dark'>\n                                            <CIcon icon={cilAirplay}  size=\"xl\" />\n                                        </CButton> \n                                        <CButton onClick={()=> escolha('cilAirplay')}  className='iconContainer' variant='ghost' color='dark'>\n                                            <CIcon icon={cilAirplay}  size=\"xl\" />\n                                        </CButton> \n                                        <CButton onClick={()=> escolha('cilAirplay')}  className='iconContainer' variant='ghost' color='dark'>\n                                            <CIcon icon={cilAirplay}  size=\"xl\" />\n                                        </CButton> \n                                        <CButton onClick={()=> escolha('cilAirplay')}  className='iconContainer' variant='ghost' color='dark'>\n                                            <CIcon icon={cilAirplay}  size=\"xl\" />\n                                        </CButton> \n                                        <CButton onClick={()=> escolha('cilAirplay')}  className='iconContainer' variant='ghost' color='dark'>\n                                            <CIcon icon={cilAirplay}  size=\"xl\" />\n                                        </CButton> \n                                        <CButton onClick={()=> escolha('cilAirplay')}  className='iconContainer' variant='ghost' color='dark'>\n                                            <CIcon icon={cilAirplay}  size=\"xl\" />\n                                        </CButton> \n                                        <CButton onClick={()=> escolha('cilAirplay')}  className='iconContainer' variant='ghost' color='dark'>\n                                            <CIcon icon={cilAirplay}  size=\"xl\" />\n                                        </CButton> \n                                        <CButton onClick={()=> escolha('cilAirplay')}  className='iconContainer' variant='ghost' color='dark'>\n                                            <CIcon icon={cilAirplay}  size=\"xl\" />\n                                        </CButton> \n                                        <CButton onClick={()=> escolha('cilAirplay')}  className='iconContainer' variant='ghost' color='dark'>\n                                            <CIcon icon={cilAirplay}  size=\"xl\" />\n                                        </CButton> \n                                        <CButton onClick={()=> escolha('cilAirplay')}  className='iconContainer' variant='ghost' color='dark'>\n                                            <CIcon icon={cilAirplay}  size=\"xl\" />\n                                        </CButton> \n                                        <CButton onClick={()=> escolha('cilAirplay')}  className='iconContainer' variant='ghost' color='dark'>\n                                            <CIcon icon={cilAirplay}  size=\"xl\" />\n                                        </CButton> \n                                        <CButton onClick={()=> escolha('cilAirplay')}  className='iconContainer' variant='ghost' color='dark'>\n                                            <CIcon icon={cilAirplay}  size=\"xl\" />\n                                        </CButton> \n                                        <CButton onClick={()=> escolha('cilAirplay')}  className='iconContainer' variant='ghost' color='dark'>\n                                            <CIcon icon={cilAirplay}  size=\"xl\" />\n                                        </CButton> \n                                        <CButton onClick={()=> escolha('cilAirplay')}  className='iconContainer' variant='ghost' color='dark'>\n                                            <CIcon icon={cilAirplay}  size=\"xl\" />\n                                        </CButton> \n                                        <CButton onClick={()=> escolha('cilAirplay')}  className='iconContainer' variant='ghost' color='dark'>\n                                            <CIcon icon={cilAirplay}  size=\"xl\" />\n                                        </CButton> \n                                        <CButton onClick={()=> escolha('cilAirplay')}  className='iconContainer' variant='ghost' color='dark'>\n                                            <CIcon icon={cilAirplay}  size=\"xl\" />\n                                        </CButton>\n                                        <CButton onClick={()=> escolha('cilAirplay')}  className='iconContainer' variant='ghost' color='dark'>\n                                            <CIcon icon={cilAirplay}  size=\"xl\" />\n                                        </CButton>\n                                        <CButton onClick={()=> escolha('cilAirplay')}  className='iconContainer' variant='ghost' color='dark'>\n                                            <CIcon icon={cilAirplay}  size=\"xl\" />\n                                        </CButton>\n                                        <CButton onClick={()=> escolha('cilAirplay')}  className='iconContainer' variant='ghost' color='dark'>\n                                            <CIcon icon={cilAirplay}  size=\"xl\" />\n                                        </CButton>\n                                        <CButton onClick={()=> escolha('cilAirplay')}  className='iconContainer' variant='ghost' color='dark'>\n                                            <CIcon icon={cilAirplay}  size=\"xl\" />\n                                        </CButton>\n                                    </CContainer> \n                                    */}\n                                  \n\n                                </Form.Group>\n                            </Form>\n                        </CCol>\n                        <CCol >\n                            <div className='containers-inputs-coverages'>\n                                <Form.Label>Descrição do serviço </Form.Label>\n                                <Form.Control as=\"textarea\" value = {descricao} onChange={serviceDescricao} rows={8} />\n                            </div>\n                      \n                            \n                            \n                                \n                                \n                        </CCol>\n                    </CRow>\n\n\n\n\n\n                </Modal.Body>\n                \n                <Modal.Footer>  \n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Sair\n                    </Button>\n                    <Button onClick = {salvarEdicoes} variant=\"primary\" >\n                        Salvar Alterações\n                    </Button>\n                </Modal.Footer>\n                    \n            </Modal>\n        </>\n    )\n}\n\n\nexport default  EditarService","import React from 'react'\n\n\nconst Describe = (props) =>{\n\n    return (\n        <>\n            <p>R$ {props.descricao}</p>\n        </>\n    )\n}\n\n\nexport default  Describe ","import React, {useState} from 'react'\nimport { Button, Modal,  Form, Container, Row, Col    }  from 'react-bootstrap';\nimport axios from \"axios\";\nimport IconRender from './IconNewService'\nimport CIcon from '@coreui/icons-react'\nimport Cookies  from 'js-cookie'\n\nimport UrlDomain from './../../../config'\n\nimport {\n    cilAddressBook, \n    cilAirplaneModeOff, \n    cilAirplaneMode, \n    cilAlarm, \n    cilAnimal, \n    cilBabyCarriage, \n    cilBaby, \n    cilBellExclamation,\n    cilBurn,\n    cilBusAlt,\n    cilCarAlt,\n    cilCalendar,\n    cilCursor,\n    cilCreditCard,\n    cilEnvelopeClosed,\n    cilGarage,\n    cilHospital,\n    cilLocationPin,\n    cilMagnifyingGlass,\n    cilPaperPlane,\n    cilRain,\n    cilRss,\n    cilTaxi,\n    cilTruck,\n    cilAirplay\n\n\n} from '@coreui/icons'\n\nimport \n  {\n    CButton ,\n    CFormInput,\n    CFormLabel,\n    CRow,\n    CContainer,\n    CCol,\n   \n   \n  } from '@coreui/react'\n\n\nconst BtnNewService = (props)=>{\n\n    const [visible, setVisible] = useState(false)  \n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const [iconeEscolhido, setIconeEscolhido] = useState()\n    const [describe, setDescribe] = useState()\n    const [nameService, setNameService] = useState()\n    const [valuePerKm, setValuePerKm] = useState()\n    function captureDescribe(e){\n        setDescribe(e.target.value)\n    }\n\n    function captureName(e){\n        setNameService(e.target.value)\n    }\n\n    function captureValue(e){\n        setValuePerKm(e.target.value)\n    }\n\n    function verifica(){\n        const handleShow =  setShow(true);\n    }\n\n    function salvarEdicoes (){\n        \n        let save = [\n            {\n                description:nameService,\n                valuePerKm: parseFloat(valuePerKm)\n            }\n        ]\n           \n        const token = Cookies.get('TokenID')\n        const userType = Cookies.get('userType')\n        let config = {\n            headers: {\n                'Authorization': `Bearer ${token}`, \n                'Content-Type': 'application/json;charset=UTF-8',\n                \"Access-Control-Allow-Origin\": \"*\",\n            }\n        };\n\n        axios \n            .post(`${UrlDomain}/coverages`, save, config)\n            .then((response) => { \n                setShow(false);\n                props.attPage()                \n            })\n            .catch(r =>{ \n                console.log('error', r), alert('Login expirado'),window.location.reload()\n            }) // window.location.reload();\n\n\n        \n    }\n\n    function escolha (e){\n        setIconeEscolhido(e)\n    }\n    \n    return (\n        <> \n            <CButton  color=\"dark\"  variant=\"outline\" onClick={ verifica} >\n                +Adicionar\n            </CButton>\n\n\n            <Modal \n                show={show} \n                onHide={handleClose}\n                size=\"xl\"\n            >\n                    \n                <Modal.Header  closeButton>\n                    <Modal.Title>Adicionar novo serviço </Modal.Title>\n                </Modal.Header>\n                <Modal.Body className='container-body'>\n                    \n                    <CRow>\n                        <CCol>\n                            <Form>\n                                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                                    <CFormLabel >Nome do Serviço</CFormLabel>\n                                    <CFormInput type=\"text\" onChange={captureName} id=\"namePlan\" placeholder=\"\"/>\n                                    <br />\n                                    <CContainer className='container-select'>\n                                        {/* ICONES USAVEIS  */}\n                                        <CButton onClick={()=> escolha('cilAddressBook')} className='iconContainer' variant='ghost' color='dark'>\n                                            <CIcon icon={cilAddressBook}  size=\"xl\" />\n                                        </CButton>\n                                        <CButton onClick={()=> escolha('cilAirplaneModeOff')}  className='iconContainer' variant='ghost' color='dark'>\n                                            <CIcon icon={cilAirplaneModeOff}  size=\"xl\" />\n                                        </CButton>\n                                        <CButton onClick={()=> escolha('cilAirplaneMode')}  className='iconContainer' variant='ghost' color='dark'>\n                                            <CIcon icon={cilAirplaneMode}  size=\"xl\" />\n                                        </CButton>\n                                        <CButton onClick={()=> escolha('cilAlarm')}  className='iconContainer' variant='ghost' color='dark'>\n                                            <CIcon icon={cilAlarm}  size=\"xl\" />\n                                        </CButton>\n                                        <CButton onClick={()=> escolha('cilAnimal')}  className='iconContainer' variant='ghost' color='dark'>\n                                            <CIcon icon={cilAnimal}  size=\"xl\" />\n                                        </CButton>\n                                        <CButton onClick={()=> escolha('cilBabyCarriage')}  className='iconContainer' variant='ghost' color='dark'>\n                                            <CIcon icon={cilBabyCarriage}  size=\"xl\" />\n                                        </CButton>\n                                        <CButton onClick={()=> escolha('cilBaby')}  className='iconContainer' variant='ghost' color='dark'>\n                                            <CIcon icon={cilBaby}  size=\"xl\" />\n                                        </CButton>\n                                        <CButton onClick={()=> escolha('cilBellExclamation')}  className='iconContainer' variant='ghost' color='dark'>\n                                            <CIcon icon={cilBellExclamation}  size=\"xl\" />\n                                        </CButton> \n                                        <CButton onClick={()=> escolha('cilBurn')}  className='iconContainer' variant='ghost' color='dark'>\n                                            <CIcon icon={cilBurn}  size=\"xl\" />\n                                        </CButton> \n                                        <CButton onClick={()=> escolha('cilBusAlt')}  className='iconContainer' variant='ghost' color='dark'>\n                                            <CIcon icon={cilBusAlt}  size=\"xl\" />\n                                        </CButton> \n                                        <CButton onClick={()=> escolha('cilCarAlt')}  className='iconContainer' variant='ghost' color='dark'>\n                                            <CIcon icon={cilCarAlt}  size=\"xl\" />\n                                        </CButton> \n                                        <CButton onClick={()=> escolha('cilCalendar')}  className='iconContainer' variant='ghost' color='dark'>\n                                            <CIcon icon={cilCalendar}  size=\"xl\" />\n                                        </CButton> \n                                        <CButton onClick={()=> escolha('cilCursor')}  className='iconContainer' variant='ghost' color='dark'>\n                                            <CIcon icon={cilCursor}  size=\"xl\" />\n                                        </CButton> \n                                        <CButton onClick={()=> escolha('cilCreditCard')}  className='iconContainer' variant='ghost' color='dark'>\n                                            <CIcon icon={cilCreditCard}  size=\"xl\" />\n                                        </CButton> \n                                        <CButton onClick={()=> escolha('cilEnvelopeClosed')}  className='iconContainer' variant='ghost' color='dark'>\n                                            <CIcon icon={cilEnvelopeClosed}  size=\"xl\" />\n                                        </CButton> \n                                        <CButton onClick={()=> escolha('cilGarage')}  className='iconContainer' variant='ghost' color='dark'>\n                                            <CIcon icon={cilGarage}  size=\"xl\" />\n                                        </CButton> \n                                        <CButton onClick={()=> escolha('cilHospital')}  className='iconContainer' variant='ghost' color='dark'>\n                                            <CIcon icon={cilHospital}  size=\"xl\" />\n                                        </CButton> \n                                        <CButton onClick={()=> escolha('cilLocationPin')}  className='iconContainer' variant='ghost' color='dark'>\n                                            <CIcon icon={cilLocationPin}  size=\"xl\" />\n                                        </CButton> \n                                        <CButton onClick={()=> escolha('cilMagnifyingGlass')}  className='iconContainer' variant='ghost' color='dark'>\n                                            <CIcon icon={cilMagnifyingGlass}  size=\"xl\" />\n                                        </CButton> \n                                        <CButton onClick={()=> escolha('cilPaperPlane')}  className='iconContainer' variant='ghost' color='dark'>\n                                            <CIcon icon={cilPaperPlane}  size=\"xl\" />\n                                        </CButton> \n                                        <CButton onClick={()=> escolha('cilRain')}  className='iconContainer' variant='ghost' color='dark'>\n                                            <CIcon icon={cilRain}  size=\"xl\" />\n                                        </CButton> \n                                        <CButton onClick={()=> escolha('cilRss')}  className='iconContainer' variant='ghost' color='dark'>\n                                            <CIcon icon={cilRss}  size=\"xl\" />\n                                        </CButton> \n                                        <CButton onClick={()=> escolha('cilTaxi')}  className='iconContainer' variant='ghost' color='dark'>\n                                            <CIcon icon={cilTaxi}  size=\"xl\" />\n                                        </CButton> \n                                        <CButton onClick={()=> escolha('cilTruck')}  className='iconContainer' variant='ghost' color='dark'>\n                                            <CIcon icon={cilTruck}  size=\"xl\" />\n                                        </CButton> \n                                        <CButton onClick={()=> escolha('cilAirplay')}  className='iconContainer' variant='ghost' color='dark'>\n                                            <CIcon icon={cilAirplay}  size=\"xl\" />\n                                        </CButton> \n                                        <CButton onClick={()=> escolha('cilAirplay')}  className='iconContainer' variant='ghost' color='dark'>\n                                            <CIcon icon={cilAirplay}  size=\"xl\" />\n                                        </CButton> \n                                        <CButton onClick={()=> escolha('cilAirplay')}  className='iconContainer' variant='ghost' color='dark'>\n                                            <CIcon icon={cilAirplay}  size=\"xl\" />\n                                        </CButton> \n                                        <CButton onClick={()=> escolha('cilAirplay')}  className='iconContainer' variant='ghost' color='dark'>\n                                            <CIcon icon={cilAirplay}  size=\"xl\" />\n                                        </CButton>\n                                        <CButton onClick={()=> escolha('cilAirplay')}  className='iconContainer' variant='ghost' color='dark'>\n                                            <CIcon icon={cilAirplay}  size=\"xl\" />\n                                        </CButton>\n                                        <CButton onClick={()=> escolha('cilAirplay')}  className='iconContainer' variant='ghost' color='dark'>\n                                            <CIcon icon={cilAirplay}  size=\"xl\" />\n                                        </CButton>\n                                        <CButton onClick={()=> escolha('cilAirplay')}  className='iconContainer' variant='ghost' color='dark'>\n                                            <CIcon icon={cilAirplay}  size=\"xl\" />\n                                        </CButton>\n                                        <CButton onClick={()=> escolha('cilAirplay')}  className='iconContainer' variant='ghost' color='dark'>\n                                            <CIcon icon={cilAirplay}  size=\"xl\" />\n                                        </CButton>\n                                        \n                                    </CContainer>\n\n                                    <br />\n                                    {iconeEscolhido && (\n                                            <div> \n                                                <label> Ícone escolhido  </label>\n                                                <br />\n                                                <CIcon icon={iconeEscolhido}  size=\"xl\" />\n                                            </div>\n                                            \n                                        )\n                                    }\n                                  \n\n                                </Form.Group>\n                            </Form>\n                        </CCol>\n                        <CCol >\n                            <Form>\n                                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                                    <Form.Label>Descrição do serviço </Form.Label>\n                                    <Form.Control as=\"textarea\" onChange={captureDescribe} className='descricao-container'rows={6} />\n                                    <br />\n                                    <Form.Label>Valor em reais por Km </Form.Label>\n                                    <br />\n                                    <input className='container-input-value-service' type=\"number\" onChange={captureValue} required  min=\"0.00\"  step=\".01\"/>\n                                </Form.Group>\n                            </Form>\n                        </CCol>\n                    </CRow>\n\n                </Modal.Body>\n                \n                <Modal.Footer>  \n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Sair\n                    </Button>\n                    <Button onClick = {salvarEdicoes} variant=\"primary\" >\n                        Salvar Alterações\n                    </Button>\n                </Modal.Footer>\n                    \n            </Modal>\n        </>\n    )\n}\n\nexport default  BtnNewService","import React from 'react'\n\n\nconst Service = (props) =>{\n\n    return (\n        <>\n            <p>{props.servico}</p>\n        </>\n    )\n}\n\n\nexport default  Service","import React from 'react'\nimport {\n    CFormSwitch\n  } from '@coreui/react'\n\nconst Status = (props) =>{\n\n    if(props.status == true){\n        return (\n            <>\n               <CFormSwitch  id=\"formSwitchCheckChecked\" size=\"xl\" defaultChecked/>\n            </>\n        )\n    }else{\n        return (\n            <>\n               <CFormSwitch  id=\"formSwitchCheckChecked\" size=\"xl\"  defaultChecked />\n            </>\n        )\n    }\n    \n}\n\n\nexport default  Status","import React, { useEffect, useState } from 'react'\nimport axios from \"axios\"\n\nimport UrlDomain, { configCookies } from './../../config'\n\nimport {\n    CButton, CCard, CCardBody, CContainer,\n    CForm, CFormInput, CNavbar, CNavbarBrand, CTable,\n    CTableBody,\n    CTableDataCell,\n    CTableHead,\n    CTableHeaderCell,\n    CTableRow\n} from '@coreui/react'\nimport { cilLoop } from '@coreui/icons'\nimport CIcon from '@coreui/icons-react'\n\nimport { Spinner } from 'react-bootstrap'\nimport BtnEditarRender from './render/BtnEdit'\nimport DescricaoRender from './render/Describe'\nimport NovosServicos from './render/NewServices'\nimport Service from './render/Service'\nimport ServiceRender from './render/Service'\nimport StatusRender from './render/Status'\nimport './service.css'\nimport Cookies from 'js-cookie'\n\nvar CryptoJS = require(\"crypto-js\");\n\nconst Services = () =>{\n\n    // descriptando \n    var usT = Cookies.get('userType')\n    var msg  = CryptoJS.AES.decrypt(usT, 'OnnSeguros');\n    var msgOri = msg.toString(CryptoJS.enc.Utf8);\n\n    const [services, setServices] = useState([])\n    // const token = Cookies.get('TokenID')\n    const userType = msgOri\n\n    // let config = {\n    //     headers: {\n    //     'Authorization': `Bearer ${token}`, \n    //     'Content-Type': 'application/json;charset=UTF-8',\n    //     \"Access-Control-Allow-Origin\": \"*\",\n    //     }\n    // };\n    \n    const [dados, setDados] = useState(services)\n    const [busca2, setBusca] = useState('')\n    let busca\n    const dados2 =[]\n\n    const buscaService = (e) =>{\n        setBusca(e.target.value)\n        busca = e.target.value\n        BuscaUser()\n    }\n\n    const BuscaUser = () =>{\n        let auxBusca = busca.toLocaleLowerCase()\n\n        services.map(item =>{   \n      \n            let auxService = item.description.toLocaleLowerCase()     // ALTERAR AQUI DE ACORDO COM OS CAMPOS DA API\n            \n            if(auxService.includes(auxBusca) ){\n              dados2.push(item)\n              setDados(dados2)\n            }\n          })\n    }\n\n    const atualizar = () =>{\n        setDados([])\n        const config = configCookies()\n        axios \n            .get(`${UrlDomain}/coverages`, config)\n            .then((response) => {\n                setServices(response.data)\n                setDados(response.data)\n            })\n            .catch(r =>{ \n                console.log('error', r), alert('Login expirado'),window.location.reload()\n            }) // window.location.reload();\n    }\n\n    useEffect(() => {\n        axios \n            .get(`${UrlDomain}/coverages`, config)\n            .then((response) => {\n                setServices(response.data)\n                setDados(response.data)\n            })\n            .catch(r =>{ \n                console.log('error', r), alert('Login expirado'),window.location.reload()\n            }) // window.location.reload();\n    }, [])\n\n    if( dados == '') {\n        return ( <>  <h4> <Spinner animation=\"grow\" variant=\"info\" />  </h4> </> )\n    }else{\n        return (\n            <> \n                <CCard className=\"w-100 cardService\">\n                    <CCardBody>\n                        <CNavbar >\n                            <CContainer fluid>\n                                <CNavbarBrand href=\"#\"></CNavbarBrand>\n                                <CForm className=\"d-flex\">\n                                    <CFormInput type=\"search\" onChange={buscaService} value={busca2} className=\"me-2\" placeholder=\"Procurar\" />\n                                    <CButton  className='btn-pesq' variant=\"ghost\" onClick={atualizar} color=\"dark\" >\n                                        <CIcon icon={cilLoop}  size=\"xl\"/>\n                                    </CButton>\n                                    {userType == \"ADMIN\" ?\n                                        (<NovosServicos  attPage={atualizar}/>)\n                                        : null\n                                    }\n                                    \n                                </CForm>\n                            </CContainer>\n                        </CNavbar>\n                        <br />\n                        <CTable striped align=\"middle\" className=\"mb-0 \" hover responsive>\n                            {/* Cabeca head da tabela do clientes */}\n                            <CTableHead>\n                                <CTableRow>\n                                {/* <CTableHeaderCell ></CTableHeaderCell> */}\n                                <CTableHeaderCell >Serviços</CTableHeaderCell>\n                                <CTableHeaderCell >Status</CTableHeaderCell>\n                                <CTableHeaderCell>Valor por KM</CTableHeaderCell>\n                                <CTableHeaderCell >\n                                            {userType == \"ADMIN\" ?\n                                                (<> Ações</>)\n                                                : null\n                                            }\n                                </CTableHeaderCell>\n                                </CTableRow>\n                            </CTableHead>\n    \n                            <CTableBody>\n                                {dados.map((item, index) => (\n                                    <CTableRow key={index}>\n                                        {/* <CTableDataCell >\n                                            <IconRender icone={item.icone} />\n                                        </CTableDataCell> */}\n                                        <CTableDataCell  >\n                                            <ServiceRender servico={item.description} />\n                                        </CTableDataCell>\n                                        <CTableDataCell >\n                                            <StatusRender status={item.disabled} />\n                                        </CTableDataCell>\n                                        <CTableDataCell >\n                                            <DescricaoRender descricao={item.valuePerKm} />\n                                        </CTableDataCell>\n                                        <CTableDataCell >\n                                            {userType == \"ADMIN\" ?\n                                                (<BtnEditarRender item={item} parentCallback={atualizar} />)\n                                                : null\n                                            }\n                                            \n                                        </CTableDataCell>\n                                    </CTableRow>\n                                ))}\n    \n                            </CTableBody>\n                        </CTable>\n                            \n                    </CCardBody>\n                </CCard>\n                \n    \n            </>\n        )\n    }\n    \n}\n\nexport default  Services"],"sourceRoot":""}