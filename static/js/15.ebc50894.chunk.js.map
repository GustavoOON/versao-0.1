{"version":3,"sources":["config.js","assets/images/carro01.jpeg","views/devices/render/components/DescriptionImg.jsx","views/devices/render/components/CarrocelImg.jsx","views/devices/render/btn/BtnMidia.jsx","assets/images/car_enable.png","assets/images/car_disable.png","views/mapBox/reports/Resume.jsx","views/mapBox/reports/Travel.jsx","views/mapBox/reports/Routes.jsx","views/mapBox/render/Report.jsx","views/mapBox/render/InfoCar.jsx","views/mapBox/render/Popup.jsx","views/mapBox/Map.jsx"],"names":["configCookies","token","Cookies","get","headers","Authorization","urlDomain","DescriptionImg","props","desc","className","Carrocel","midia","setFailPhoto","useState","btnSelectedOk","setBtnSelectedOk","btnSelectedIndexOk","setBtnSelectedIndexOk","btnSelectedFail","setBtnSelectedFail","btnSelectedIndexFail","setBtnSelectedIndexFail","photoDisapproved","setPhotoDisapproved","length","map","item","i","index","original","url","thumbnail","width","height","ref","open","find","onClick","removeIndex","filter","removeItem","id","handleClickOk","size","color","some","handleClickFail","src","description","toString","BtnMidia","show","setShow","handleClose","data","setData","config","axios","UrlDomain","then","catch","r","console","log","alert","window","location","reload","verifica","visible","onClose","closeButton","CarrocelImg","variant","Resume","fullscreen","setFullscreen","breakpoint","Date","Report","setDay","setMouth","setYear","hourPass","setHourPass","hourActually","setHourActually","dateInicio","setDateInicio","dateFinal","setDateFinal","dateMax","setDateMax","useEffect","getDate","getMonth","getFullYear","aux","getHours","fluid","disabled","options","label","value","placeholder","type","onChange","e","target","max","min","style","Editar","Form","Group","controlId","PopupRen","show2","setShow2","handleClose2","statusCarro","carroInfo","setCarroInfo","posicao","latitude","lat","longitude","lng","parentCallback","sm","carro","name","shape","onHide","closeButton2","InfoCar","mapBox","React","zoom","viewport","setViewport","dados","setDados","closePopup","SelectedHotspot","object","Provider","mapStyle","MAP_STYLE","mapboxApiAccessToken","onViewportChange","right","top","status","title","offsetLeft","offsetTop","carEnable","Popup","carDisable","icon","cilAlignCenter","CModalBody"],"mappings":"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","file":"static/js/15.ebc50894.chunk.js","sourcesContent":["import Cookies from \"js-cookie\";\n\n// Endereço padrão das API\n\nconst prod = \"http://dashboardbff.oonpayperuse.com.br\";\nconst dev = \"http://localhost:8080\";\n\nconst tokenMaps = \"AIzaSyB9I7snvZRRQ6faupULeBXYz5tU2AUuWek\"; // TOKEN PESSOAL\nconst urlDomain = prod;\n\nexport const configCookies = () => {\n    const token = Cookies.get(\"TokenID\");\n\n    const authorization = {\n        headers: {\n            Authorization: `Bearer ${token}`,\n            \"Content-Type\": \"application/json;charset=UTF-8\",\n            \"Access-Control-Allow-Origin\": \"*\",\n        },\n    };\n\n    return authorization;\n};\n\nexport default  urlDomain;\n","export default __webpack_public_path__ + \"static/media/carro01.33222a01.jpeg\";","import React from 'react'\n\nimport '../../css/description.css'\n\nconst DescriptionImg = (props) => {\n    const { desc } = props;\n\n    if (desc == 'ADDRESS') {\n        return (<p className='text'>Endereço</p>)\n    } else if (desc == 'CAR_DOCUMENT') {\n        return (<p className='text'>Documento do carro</p>)\n    } else if (desc == 'CNH') {\n        return (<p className='text'>CNH</p>)\n    } else if (desc == 'BACK') {\n        return (<p className='text'>Atrás</p>)\n    } else if (desc == 'BACK_LEFT') {\n        return (<p className='text'>Traseira esquerda</p>)\n    } else if (desc == 'BACK_RIGHT') {\n        return (<p className='text'>Traseira direita</p>)\n    } else if (desc == 'CHASSIS') {\n        return (<p className='text'>Chassi</p>)\n    } else if (desc == 'FRONT') {\n        return (<p className='text'>Frente</p>)\n    } else if (desc == 'LEFT') {\n        return (<p className='text'>Lat. Esquerda</p>)\n    } else if (desc == 'PANEL') {\n        return (<p className='text'>Painel</p>)\n    } else if (desc == 'RIGHT') {\n        return (<p className='text'>Lat. Direita</p>)\n    } else if (desc == 'MOTOR') {\n        return (<p className='text'>Motor</p>)\n    }\n}\n\nexport default  DescriptionImg;\n","import React, { useState } from 'react';\nimport { Gallery, Item } from 'react-photoswipe-gallery';\n\nimport 'photoswipe/dist/photoswipe.css';\nimport 'photoswipe/dist/default-skin/default-skin.css';\nimport DescriptionImg from './DescriptionImg';\n\nimport { BsFillCheckCircleFill, BsFillXCircleFill } from 'react-icons/bs';\n\nimport '../../css/carrocel.css';\n\nconst Carrocel = (props) => {\n    const { midia, setFailPhoto } = props;\n\n    const [btnSelectedOk, setBtnSelectedOk] = useState(false);\n    const [btnSelectedIndexOk, setBtnSelectedIndexOk] = useState([]);\n    const [btnSelectedFail, setBtnSelectedFail] = useState(false);\n    const [btnSelectedIndexFail, setBtnSelectedIndexFail] = useState([]);\n\n    const [photoDisapproved, setPhotoDisapproved] = useState([]);\n\n    const handleClickOk = (index, item) => {\n        setBtnSelectedOk(true);\n        setBtnSelectedIndexOk([index, ...btnSelectedIndexOk]);\n\n        const removeIndex = btnSelectedIndexFail.filter((i) => index !== i);\n        setBtnSelectedIndexFail(removeIndex);\n\n        const removeItem = photoDisapproved.filter((i) => item.id !== i.id);\n        setPhotoDisapproved(removeItem);\n        setFailPhoto(removeItem);\n    };\n\n    const handleClickFail = (index, item) => {\n        setBtnSelectedFail(true);\n        setBtnSelectedIndexFail([index, ...btnSelectedIndexFail]);\n\n        const removeIndex = btnSelectedIndexOk.filter((i) => index !== i);\n        setBtnSelectedIndexOk(removeIndex);\n\n        const contain = photoDisapproved.some(({ id }) => id === item.id);\n\n        if (contain) {\n            setPhotoDisapproved(photoDisapproved);\n            setFailPhoto(photoDisapproved);\n        } else {\n            setPhotoDisapproved([item, ...photoDisapproved]);\n            setFailPhoto([item, ...photoDisapproved]);\n        }\n    };\n\n    return midia.length !== 0 ? (\n        <div className=\"container-menu\">\n            <Gallery>\n                {midia.map((item, i) => {\n                    const index = i + 1;\n                    return (\n                        <Item\n                            original={item.url}\n                            thumbnail={item.url}\n                            width=\"1024\"\n                            height=\"768\"\n                            key={index.toString()}\n                        >\n                            {({ ref, open }) => (\n                                <div className=\"container-carrocel\">\n                                    <div className=\"btn-photo\">\n                                        <i className=\"me-5 p-1\">\n                                            <BsFillCheckCircleFill\n                                                className={\n                                                    btnSelectedOk &&\n                                                    btnSelectedIndexOk.find(\n                                                        (i) => index === i\n                                                    )\n                                                        ? 'btn-selected-ok'\n                                                        : 'btn-radius'\n                                                }\n                                                onClick={() =>\n                                                    handleClickOk(index, item)\n                                                }\n                                                size={30}\n                                                color=\"green\"\n                                            />\n                                        </i>\n                                        <i className=\"ms-5 p-1\">\n                                            <BsFillXCircleFill\n                                                className={\n                                                    btnSelectedFail &&\n                                                    btnSelectedIndexFail.find(\n                                                        (i) => index === i\n                                                    )\n                                                        ? 'btn-selected-x'\n                                                        : 'btn-radius'\n                                                }\n                                                onClick={() =>\n                                                    handleClickFail(index, item)\n                                                }\n                                                size={30}\n                                                color=\"red\"\n                                            />\n                                        </i>\n                                    </div>\n                                    <img\n                                        ref={ref}\n                                        onClick={open}\n                                        width=\"256\"\n                                        height=\"170\"\n                                        src={item.url}\n                                    />\n                                    <DescriptionImg desc={item.description} />\n                                </div>\n                            )}\n                        </Item>\n                    );\n                })}\n            </Gallery>\n        </div>\n    ) : (\n        <h1 className=\"text-not-image\">Não há fotos disponíveis</h1>\n    );\n};\n\nexport default Carrocel;\n","import React, { useState } from 'react';\nimport axios from 'axios';\nimport {\n    CButton,\n    CModal,\n    CModalBody,\n    CModalFooter,\n    CModalHeader,\n    CModalTitle,\n} from '@coreui/react';\nimport { MdPhotoCamera } from 'react-icons/md';\n\nimport CarrocelImg from '../components/CarrocelImg';\nimport UrlDomain, { configCookies } from '../../../../config';\n\nimport '../../css/btnMidia.css';\n\nconst BtnMidia = (props) => {\n    const { midia } = props;\n\n    const [show, setShow] = useState(false);\n    const [failPhoto, setFailPhoto] = useState([]);\n\n    const handleClose = () => setShow(false);\n\n    const [data, setData] = useState([]);\n\n    function verifica() {\n        const config = configCookies();\n        axios\n            .get(`${UrlDomain}/images/vehicle/${midia}`, config)\n            .then(({ data }) => {\n                setData(data);\n                setShow(true);\n            })\n            .catch((r) => {\n                console.log('error', r),\n                    alert('Login expirado'),\n                    window.location.reload();\n            });\n    }\n\n    const savePhotos = () => {\n        // enviar array com todas as fotos que foram negadas!\n        // failPhoto <<< onde as fotos estão\n    };\n\n    return (\n        <>\n            <div className=\"container-device-midia-actions\">\n                <CButton\n                    onClick={() => verifica(midia)}\n                    size=\"sm\"\n                    className=\"icon-css-midia\"\n                    color=\"black\"\n                >\n                    <MdPhotoCamera size={24} color=\"black\" />\n                </CButton>\n            </div>\n\n            <CModal visible={show} onClose={handleClose} size=\"xl\">\n                <CModalHeader closeButton>\n                    <CModalTitle className=\"title-modal\">\n                        Fotos do Veículo\n                    </CModalTitle>\n                </CModalHeader>\n                <CModalBody>\n                    <CarrocelImg midia={data} setFailPhoto={setFailPhoto} />\n                </CModalBody>\n                <CModalFooter>\n                    {data.length !== 0 ? (\n                        <>\n                            <CButton\n                                className=\"btn-cancel-global\"\n                                variant=\"outline\"\n                                onClick={handleClose}\n                            >\n                                Não aprovar\n                            </CButton>\n                            <CButton\n                                className=\"btn-save-global\"\n                                onClick={savePhotos}\n                            >\n                                Aprovar\n                            </CButton>\n                        </>\n                    ) : (\n                        <CButton\n                            className=\"btn-cancel-global\"\n                            variant=\"outline\"\n                            onClick={handleClose}\n                        >\n                            Cancelar\n                        </CButton>\n                    )}\n                    {/* <CButton\n                        className=\"btn-cancel-global\"\n                        variant=\"outline\"\n                        onClick={handleClose}\n                    >\n                        Cancelar\n                    </CButton>\n                    <CButton className=\"btn-save-global\" onClick={handleClose}>\n                        Salvar\n                    </CButton> */}\n                </CModalFooter>\n            </CModal>\n        </>\n    );\n};\n\nexport default BtnMidia;\n","export default __webpack_public_path__ + \"static/media/car_enable.c9f3153b.png\";","export default __webpack_public_path__ + \"static/media/car_disable.4efdbbe1.png\";","import React, { useState } from 'react'\nimport {\n    CButton, CModal, CModalBody, CModalFooter, CModalHeader, CModalTitle,\n\n  } from '@coreui/react'\n\nimport { Modal } from 'react-bootstrap';\n\nconst Resume = () =>{\n\n    const [visible, setVisible] = useState(false)  \n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const [fullscreen, setFullscreen] = useState(true);\n    \n    function verifica(breakpoint){\n        setFullscreen(breakpoint);\n        const handleShow =  setShow(true);\n        \n    }\n    return (\n        <> \n            <CButton onClick={verifica} > Gerar relatório </CButton>\n\n            <CModal \n                visible={show} \n                onClose={handleClose}\n                fullscreen={fullscreen}\n                // size=\"xl\"\n            >\n                    \n                <CModalHeader  closeButton>\n                    <CModalTitle className=\"title-modal\">Resumo da operação </CModalTitle>\n                </CModalHeader>\n                <CModalBody className='container-body'>\n                    <p>Lorem, ipsum dolor sit amet consectetur adipisicing elit. Doloribus repellat suscipit consequatur dignissimos veritatis! Dolores, voluptates iure quasi laboriosam aperiam, tempore praesentium est rerum itaque commodi, quos dignissimos magnam excepturi?</p>\n                </CModalBody>\n                <CModalFooter>  \n                    <CButton onClick={handleClose}>\n                        Sair\n                    </CButton>\n                    \n                </CModalFooter>\n                    \n            </CModal>\n        </>\n    )   \n}\n\nexport default  Resume","import React, { useState } from 'react'\nimport {\n    CButton, CModal, CModalBody, CModalFooter, CModalHeader, CModalTitle,\n\n  } from '@coreui/react'\n\nimport { Modal } from 'react-bootstrap';\n\nconst Resume = () =>{\n\n    const [visible, setVisible] = useState(false)  \n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const [fullscreen, setFullscreen] = useState(true);\n    \n    function verifica(breakpoint){\n        setFullscreen(breakpoint);\n        const handleShow =  setShow(true);\n        \n    }\n    return (\n        <> \n            <CButton onClick={verifica} > Gerar relatório </CButton>\n            <CModal \n                visible={show} \n                onClose={handleClose}\n                fullscreen={fullscreen}\n                // size=\"xl\"\n            >\n                <CModalHeader  closeButton>\n                    <CModalTitle className=\"title-modal\">Resumo da operação </CModalTitle>\n                </CModalHeader>\n                <CModalBody className='container-body'>\n                    <p>Lorem, ipsum dolor sit amet consectetur adipisicing elit. Doloribus repellat suscipit consequatur dignissimos veritatis! Dolores, voluptates iure quasi laboriosam aperiam, tempore praesentium est rerum itaque commodi, quos dignissimos magnam excepturi?</p>\n                </CModalBody>\n                <CModalFooter>  \n                    <CButton  onClick={handleClose}>\n                        Sair\n                    </CButton>\n                 \n                </CModalFooter>\n                    \n            </CModal>\n        </>\n    )   \n}\n\nexport default  Resume","import React, { useState } from 'react'\nimport { CButton, CModal, CModalBody, CModalFooter, CModalHeader, CModalTitle } from '@coreui/react'\n\nimport { Modal } from 'react-bootstrap';\n\nconst Resume = () =>{\n\n    const [visible, setVisible] = useState(false)  \n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const [fullscreen, setFullscreen] = useState(true);\n    \n    function verifica(breakpoint){\n        setFullscreen(breakpoint);\n        const handleShow =  setShow(true);\n        \n    }\n    return (\n        <> \n            <CButton onClick={verifica} > Gerar relatório </CButton>\n            <CModal \n                visible={show} \n                onClose={handleClose}\n                fullscreen={fullscreen}\n                // size=\"xl\"\n            >\n                    \n                <CModalHeader closeButton>\n                    <CModalTitle className=\"title-modal\">Resumo da operação </CModalTitle>\n                </CModalHeader>\n                <CModalBody className='container-body'>\n                    <p>Lorem, ipsum dolor sit amet consectetur adipisicing elit. Doloribus repellat suscipit consequatur dignissimos veritatis! Dolores, voluptates iure quasi laboriosam aperiam, tempore praesentium est rerum itaque commodi, quos dignissimos magnam excepturi?</p>\n                </CModalBody>\n                <CModalFooter>  \n                    <CButton onClick={handleClose}>\n                        Sair\n                    </CButton>\n                    \n                </CModalFooter>\n                    \n            </CModal>\n        </>\n    )   \n}\n\nexport default  Resume","import React, { useState,  useEffect } from 'react'\nimport './report.css'\n\n// import bibliotecas\nimport Resumo from './../reports/Resume'\nimport Viagens from './../reports/Travel'\nimport Rotas from './../reports/Routes'\n\nimport {\n    CButton,\n    CCard,\n    CCardBody,\n    CCardTitle,\n    CRow, \n    CCol,\n    CContainer,\n    CCardText,\n    CInputGroup,\n    CFormSelect,\n    CFormInput, \n  } from '@coreui/react'\n\nvar data = new Date();\nconst Report = () => {\n    const [visible, setVisible] = useState(false)\n    const [day, setDay] = useState()\n    const [mounth, setMouth] = useState()\n    const [year, setYear] = useState()\n\n    const [hourPass, setHourPass] = useState()\n    const [hourActually, setHourActually] = useState()\n\n    const [dateInicio, setDateInicio] = useState()\n    const [dateFinal, setDateFinal] = useState()\n    const [dateMax, setDateMax] = useState() // data maxima \n    // Pega data e hora\n    useEffect(()=>{\n        setDay(data.getDate())\n        setMouth(data.getMonth()+1)\n        setYear(data.getFullYear())\n\n        // Pegando hora\n        let aux = data.getHours() - 1\n        if(aux < 10){\n            aux = '0'+aux\n        }\n        console.log('aux', aux)\n        setHourPass( aux +':'+'00')\n        setHourActually(data.getHours()+':'+'00')\n\n        // setando a data\n        setDateInicio(data.getFullYear()+'-'+(data.getMonth()+1)+'-'+data.getDate()) // data que será pega no filtro\n        setDateFinal(data.getFullYear()+'-'+(data.getMonth()+1)+'-'+data.getDate())\n        setDateMax(data.getFullYear()+'-'+(data.getMonth()+1)+'-'+data.getDate()) // limita a data maxima de hoje\n    },[])\n\n    const selectDateInicio = (e) =>{\n        setDateInicio(e.target.value)\n    }\n    const selectDateFinal = (e) =>{\n        setDateFinal(e.target.value)\n    }\n    const selectHourPass = (e) =>{\n        setHourPass(e.target.value)\n    }\n    const selectHourActually = (e) =>{\n        setHourActually(e.target.value)\n    }\n    return (\n        <>  \n            <h5>Filtrar Relatórios</h5>\n            <CContainer fluid className='menu-report'>\n                <CRow className=\"align-items-start\">\n                    <CCol>\n                        <CFormSelect \n                            disabled\n                            aria-label=\"Selecione o Local\"\n                            options={[\n                                'Selecione o Local',\n                                { label: 'BH', value: '1' },\n                                { label: 'SP', value: '2' },\n                                { label: 'RJ', value: '3' }\n                        ]}\n                        />\n                    </CCol>\n                    <CCol>\n                        <CFormSelect \n                            aria-label=\"Selecione o Grupo\"\n                            options={[\n                                'Selecione o Grupo',\n                                { label: 'A', value: '1' },\n                                { label: 'B', value: '2' },\n                                { label: 'C', value: '3' }\n                        ]}\n                        />\n                    </CCol>\n                    <CCol>\n                        <CInputGroup className=\"mb-3\">\n                            <CFormInput aria-label=\"Sizing example input\" placeholder='Digite a placa' aria-describedby=\"inputGroup-sizing-default\"/>\n                        </CInputGroup>\n                    </CCol>\n                </CRow>\n                <CRow className=\"align-items-start\">\n                    \n                    {/* data atual - uma hr atras */}\n                    <CCol>\n                        <h6> Início </h6>\n                        <input id=\"date\" type=\"date\" onChange={selectDateInicio} value={dateInicio} max={dateMax} min='2018-01-01' ></input>\n                        <input type=\"time\" id=\"inicio\" onChange={selectHourPass} value={hourPass} ></input>\n                    \n                    </CCol>\n                    {/* data atual e hora atual */}\n                    <CCol>\n                        <h6> Fim </h6>\n                        <input id=\"date\" type=\"date\"  onChange={selectDateFinal} value={dateFinal} max={dateMax} min='2018-01-01'></input>\n                        <input type=\"time\" id=\"fim\" onChange={selectHourActually} value={hourActually} ></input>\n                        \n                    </CCol>\n                </CRow>\n            </CContainer>           \n                        \n\n            <br />\n           <CRow>\n                <CCard style={{ width: '18rem' }} className=\"container-card\">\n                    <CCardBody>\n                        <CCardTitle>Resumo</CCardTitle>\n                        <CCardText>\n                            Informações sobre a placa do veículo selecionada.\n                        </CCardText>\n\n                        {/* Passar valores do filtro  */}\n                       <Resumo />\n                    </CCardBody>\n                </CCard>\n            \n            \n                <CCard style={{ width: '18rem' }} className=\"container-card\">\n                    <CCardBody>\n                        <CCardTitle>Viagens</CCardTitle>\n                        <CCardText>\n                            Relatórios de viagens do dispositivo.\n                        </CCardText>\n                        {/* Passar valores do filtro  */}\n                        <Viagens />\n                    </CCardBody>\n                </CCard>\n            \n                <CCard style={{ width: '18rem' }} className=\"container-card\">\n                <CCardBody>\n                    <CCardTitle>Rotas</CCardTitle>\n                    <CCardText>\n                            Relatório de rotas do dispositivo\n                    </CCardText>\n                    {/* Passar valores do filtro  */}\n                    <Rotas />\n                </CCardBody>\n                </CCard>\n            </CRow>\n            <br />\n        </>\n    )\n}\n\nexport default  Report","import React, {useState} from 'react'\nimport { Button, Modal,  Form, Container, Row, Col    }  from 'react-bootstrap';\n\nimport './infoCar.css'\n\nimport {\n    CRow,\n    CCol,\n  } from '@coreui/react'\n\nconst Editar = (props) => {\n\n    // Pegar dados do veiculo pelo props\n    return (\n        <div> \n            \n            <CRow>\n                <CCol>\n                    <Form>\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                            <label className='font-sub2'> Grupo </label>\n                            <p className='font-text2'> A </p>\n\n                            <label className='font-sub2'> Número SIM</label>\n                            <p className='font-text2'> 8938u329823 </p>\n\n                            <label className='font-sub2' > Model</label>\n                            <p className='font-text2'> C63 - AMG esportivo </p>\n\n                            <label className='font-sub2'> Contato  </label>\n                            <p className='font-text2'> 34 99800989</p>\n\n                            <label className='font-sub2'> Categoria </label>\n                            <p className='font-text2'> Esportivo </p>\n\n                            <label className='font-sub2'> Status Pagamento</label>\n                            <p className='font-text2'> Ativo ou desativo etc </p>\n\n                            <label className='font-sub2'> valor </label>\n                            <p className='font-text2'> R$ 510000 </p>\n\n                            <label className='font-sub2'> Marca do veículo</label>\n                            <p className='font-text2'> Mercedes Benz</p>\n\n                            <label className='font-sub2'> Chassi do Veículo </label>\n                            <p className='font-text2'> jjhdS23ds-23</p>\n                        </Form.Group>\n                    </Form> \n                </CCol>\n                <CCol>\n                    <Form>\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                            <label className='font-sub2'> Cidade do usuário </label>\n                            <p className='font-text2'> Belo Horizonte </p>\n                            <label className='font-sub2'> Cor do veículo</label>\n                            <p className='font-text2'> Preto </p>\n                            <label className='font-sub2'> Fipe code </label>\n                            <p className='font-text2'> xxxssssddd </p>\n                            <label className='font-sub2'> Tipos Combustíveis </label>\n                            <p className='font-text2'> Gasolina </p>\n                            <label className='font-sub2'> Modelo do Carro </label>\n                            <p className='font-text2'> AMG - 2020</p>\n                            <label className='font-sub2'> Placa do Veículo </label>\n                            <p className='font-text2'> XXXX-4334 </p>\n                            <label className='font-sub2'> Usuário Status </label>\n                            <p className='font-text2'> Ativo </p>\n                            <label className='font-sub2'> Zip Code</label>\n                            <p className='font-text2'> 34788-89 </p>\n                            <label className='font-sub2'> Estado </label>\n                            <p className='font-text2'> MG </p>\n                        </Form.Group>\n                    </Form> \n                </CCol>\n            </CRow>\n\n                    \n                \n               \n            \n\n        </div>\n    )\n}\n\nexport default  Editar ","import React, { useEffect, useState } from 'react'\n\nimport ReactMapGL, {Popup} from 'react-map-gl';\n\nimport { CImage, CButton, CContainer, CRow, CCol, CModal, CModalHeader, CModalTitle, CModalBody, CModalFooter } from '@coreui/react'\nimport carro from './../../../assets/images/carro01.jpeg'\nimport BtnMidia from '../../devices/render/btn/BtnMidia'\n\nimport { Modal } from 'react-bootstrap';\nimport Report from './Report'\nimport InfoCar from './InfoCar'\n\nimport './popup.css'\n\nconst PopupRen = ( props) => {\n   // Modal 1 - Relatorio\n    const [visible, setVisible] = useState(false)  \n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    function verifica(){\n        const handleShow =  setShow(true);\n    }\n    \n    // Modal 2 - informacoes do Carro\n    const [visible2, setVisible2] = useState(false)  \n    const [show2, setShow2] = useState(false);\n    const handleClose2 = () => setShow2(false);\n    function verifica2(){\n        const handleShow2 =  setShow2(true);\n    }\n\n    // funcoes e variaveis do codigo\n    const [statusCarro, setStatusCarro] = useState(true)\n    const [statusPagamento, setStatusPagamento] = useState(false)\n    \n    // dados do carro\n    const [carroInfo, setCarroInfo] = useState()\n\n    useEffect(() =>{\n        if(props.posicao != null){\n            setCarroInfo(props.posicao)\n        }\n    }, [])\n\n     const lats =  -19.964512\n    const longs = -43.962461\n    \n    \n\n    const closePopup = () => {\n        console.log('aqui mostra ', carroInfo.lng)\n        console.log('tipo da ', typeof lats)\n        props.parentCallback(null)\n    }\n\n\n    if(carroInfo == null){\n        return (\n            <> </>\n        )\n    }else{\n        return(\n            <> \n                \n                <Popup\n                // props.posicao.lng\n                    latitude = {props.posicao.lat } // props.posicao.lat  carroInfo.lat   -19.964512\n                    longitude = {props.posicao.lng }// carroInfo.lng    -43.962461\n                    onClose={closePopup}\n                    closeButton={false}\n                >   \n                    <CRow className=\"align-items-start colunas-popup \">\n                        <CCol className='andar1-col-esq' sm=\"auto\">\n                            <CImage  fluid src = {carro} className='img-pop' />\n                        </CCol>\n                        <CCol  className = 'andar1-col-dir'sm=\"auto\">\n                            <label className='font-sub'> Placa </label>\n                            <br />\n                            <label className='font-text'>XXX-1234</label> \n                            <br />\n                            <label className='font-text'>{props.posicao.name}</label>\n                            <br />\n                        </CCol>\n                    </CRow>\n                    <CRow  className = \"justify-content-around colunas-popup2\" >\n                        <CCol className='andar2-col-esq' sm=\"auto\">\n                            <label className='font-sub'> Status </label>\n                            <br />\n                            { statusCarro == true ? (\n                                <label className='font-text'>Em Movimento </label> \n                             )\n                                : \n                                    <label className='font-text'>Parado</label> \n                                \n                            }\n                            <br />\n                            <label className='font-sub'> Velocidade </label>\n                            <br />\n                            <label className='font-text'> 60 km/h</label> \n                            \n                        </CCol>\n                        <CCol className='andar2-col-meio' sm=\"auto\"> \n                            <label className='font-sub'> Motorista </label>\n                            <br />\n                            <label className='font-text'> Gustavo Alcantara </label> \n                            <br />\n                            <label className='font-sub'> Pagamento </label>\n                            <br />\n                            <label className='font-text'> R$ 450,20</label> \n                            <br />\n                           \n                        </CCol>\n                        <CCol className='andar2-col-dir' sm=\"auto\">\n                            <CButton className= \"btn-relatorio\" size='sm' color=\"secondary\" shape=\"rounded-pill\" onClick={verifica}>\n                                <label className='font-sub'> Relatório Completo </label>\n                            </CButton>\n                            <br />\n                            <CButton className= \"btn-carro\" size='sm' color=\"secondary\" shape=\"rounded-pill\" onClick={verifica2}>\n                                <label className='font-sub'> Informações Veículo  </label>\n                            </CButton>\n                        </CCol>\n                    </CRow>\n    \n                    <CModal \n                        visible={show} \n                        onClose={handleClose}\n                        size=\"xl\"\n                    >\n                        <CModalHeader  closeButton>\n                            <CModalTitle className=\"title-modal\">Relatórios</CModalTitle>\n                        </CModalHeader>\n                        <CModalBody className='container-body'>\n                            <Report /> \n                        </CModalBody>\n                        <CModalFooter>  \n                            <CButton  onClick={handleClose}>\n                                Sair\n                            </CButton>\n                        \n                        </CModalFooter>\n                    </CModal>\n    \n                    <CModal \n                        show={show2} \n                        onHide={handleClose2}\n                        size=\"xl\"\n                    >\n                        <CModalHeader  closeButton2>\n                            <CModalTitle className=\"title-modal\">Informações Carro</CModalTitle>\n                        </CModalHeader>\n                        <CModalBody className='container-body'>\n                            <InfoCar />\n                        </CModalBody>\n                        <CModalFooter>  \n                            {/* Passar o props aqui do veículo depois  */}\n                            <BtnMidia /> \n                        \n                            <CButton  onClick={handleClose2}>\n                                Sair\n                            </CButton>\n                        \n                        </CModalFooter>\n                    </CModal>\n                  \n                </Popup>\n                \n                       \n            </>\n        )\n    }\n    \n}\n\nexport default  PopupRen","import React, { useState } from 'react'\nimport ReactMapGL, {Marker, FullscreenControl, MapContext, Source, Layer } from 'react-map-gl';\n\n\nimport './Map.css'\n// Estilizacao do mapa usado\nimport MAP_STYLE from './map-V8.json';\nimport carEnable from '../../assets/images/car_enable.png';\nimport carDisable from '../../assets/images/car_disable.png'\n\n//componentes\nimport Report from './render/Report.jsx'\nimport PopupRender from './render/Popup.jsx'\nimport RouteDraw from './render/RouteDraw'\n// Bibliotecas e imagens\nimport { CImage, CButton, CModal, CModalHeader, CModalTitle, CModalFooter } from '@coreui/react'\nimport { Modal } from 'react-bootstrap';\nimport CIcon from '@coreui/icons-react'\nimport {cilAlignCenter} from '@coreui/icons'\n\nconst mapBox = () =>{\n    const [visible, setVisible] = useState(false)  \n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n\n    function verifica(){\n        const handleShow =  setShow(true);\n        \n    }\n    const pos = [\n        {   \n            id:1,\n            name:'Celta',\n            lat: -19.9191912,\n            lng: -43.9387852,\n            status:0, \n            title: \"Uluru (Ayers Rock)\"\n        },\n        {   \n            id:2,\n            name:'Gol bola',\n            lat: -19.8127 ,\n            lng: -43.9512,\n            status:1, \n            title: \"Uluru (Ayers Rock)\"\n        },\n        {   \n            id:3,\n            name:'pegeout 207',\n            lat: -19.813,\n            lng: -43.9238,\n            status:1, \n            title: \"Uluru (Ayers Rock)222\"\n        },\n        {   \n            id:4,\n            name:'Camaro',\n            lat: -19.8132,\n            lng: -43.9238,\n            status:1, \n            title: \"Uluru (Ayers Rock)222\"\n        },\n        {   \n            id:5,\n            name:'Mustang',\n            lat: -19.964512,\n            lng: -43.962461,\n            status:0,  \n            title: \"Uluru (Ayers Rock)22\"\n        },\n    ]\n    const [showPopup, togglePopup] = React.useState(false);\n\n    const [viewport, setViewport] = React.useState({\n        latitude: -19.91912,\n        longitude: -43.9387852,\n        zoom: 10\n      });\n    const fullscreenControlStyle= {\n    right: 10,\n    top: 10\n    };\n\n         // Fazendo popup \n    const [dados, setDados] = useState(null)\n    \n    \n    // fecha o popup\n    const closePopup = () => {\n        setDados(null)\n    }\n    // Escolheu um dispositivo, e abriu o popup \n    const SelectedHotspot = object => {\n        setDados(object)\n        \n    };\n\n    const geojson = {\n        type: 'FeatureCollection',\n        features: [\n          {\n            type: 'Feature', \n            geometry: \n                {\n                    type: 'Point', \n                    coordinates:  [-19.9192, 43.93878]\n                }\n          }\n        ]\n      };\n\n    const layerStyle = {\n        id: 'point',\n        type: 'circle',\n        paint: {\n          'circle-radius': 10,\n          'circle-color': '#007cbf'\n        }\n      };\n   const rotas = [[-19.91912, -43.9387852], [-19.91914, -43.9387854], [-19.91912, -43.9387852]]\n\n    return (    \n        <>  \n        \n            <MapContext.Provider>\n                <ReactMapGL\n                    {...viewport}\n                    width=\"100%\"\n                    height=\"80vh\"\n                    className='mapBoxContainer'\n                    mapStyle={MAP_STYLE}\n                    mapboxApiAccessToken='pk.eyJ1IjoiZ3VzdGF2b2FsY3QiLCJhIjoiY2t4ZzZ3YzVpMmExaDMwb2N1eG9iaWkyeSJ9.NmvzyFhoDboy3y8f0uAtvg'\n                    onViewportChange={(viewport) => setViewport(viewport)}\n                >   \n                    <FullscreenControl style={fullscreenControlStyle} />\n                    \n                    {\n                        pos.map((item, index) =>{\n                            // ativo\n                            if(item.status == 1 ){\n                                return(\n                                    <div> \n                                        \n                                        <Marker latitude={item.lat} longitude={item.lng} offsetLeft={-20} offsetTop={-10}>\n                                            <CImage fluid onClick={ () =>{SelectedHotspot(item)}} src = {carEnable} width={30} height={30}  />\n                                        </Marker>\n\n                                        {dados !== null ? (\n                                            <> \n                                                <PopupRender   parentCallback = {closePopup}   />\n                                            </>\n                                        )\n                                            : null\n                                        }\n                                    </div>\n                                    \n                                )  \n                            }else{\n                                return(\n                                    <> \n                                        <Marker latitude={item.lat} longitude={item.lng} offsetLeft={-20} offsetTop={-10}>\n                                            <CImage onClick={ () =>{SelectedHotspot(item)}} fluid src = {carDisable} width={25} height={25}  />\n                                        </Marker> \n                                        {dados !== null ? (\n                                            <> \n                                                <PopupRender  parentCallback = {closePopup}   posicao={dados}   />\n                                            </>\n                                        )\n                                            : null\n                                        }                                      \n                                        \n                                    </>\n                                    \n                                )  \n                            }\n                        })\n                    }\n\n                   \n                     <div>\n                        <CButton className='button-css' onClick={verifica} color=\"light\" >\n                            <CIcon  icon={cilAlignCenter}   size=\"xl\" />\n                        </CButton>\n                        <CModal \n                            visible={show} \n                            onClose={handleClose}\n                            size=\"xl\"\n                        >\n                            <CModalHeader  closeButton>\n                                <CModalTitle className=\"title-modal\">Relatórios</CModalTitle>\n                            </CModalHeader>\n                            <CModalBody className='container-body'>\n                                <Report /> \n                            </CModalBody>\n                            <CModalFooter>  \n                                <CButton  onClick={handleClose}>\n                                    Sair\n                                </CButton>\n                            \n                            </CModalFooter>\n                        </CModal>\n                    </div>\n                </ReactMapGL>\n               \n            </MapContext.Provider> \n            \n        </> \n    )\n}\n\nexport default  mapBox \n\n\n"],"sourceRoot":""}