{"version":3,"sources":["assets/images/oon-seguros-logo.svg","routes.js","components/AppContent.jsx","components/AppFooter.js","components/notify/Render/RenderNotify.jsx","components/notify/Notify.jsx","assets/images/avatars/2.jpg","components/header/AppHeaderDropdown.js","assets/images/oon.svg","components/AppHeader.js","components/AppSidebarNav.js","views/navBar/NavBar.jsx","components/AppSidebar.js","layout/DefaultLayout.js","App.jsx","serviceWorker.js","store.js","index.js"],"names":["Panel","React","lazy","Usuarios","Device","Rastreamento","Financeiro","mapBox","Plano","Cobertura","Chamados","Configuracoes","Sinistro","Riscos","Home","Assistencia","routes","path","exact","name","component","AppContent","fluid","fallback","color","map","route","idx","render","props","from","to","memo","AppFooter","className","Render","notificacoes","item","index","titulo","text","toString","Notify","cont","useState","flag","setFlag","handleClose","setShow","show","verifica","notificacao","numNot","length","rest","ClearNotify","content","variant","size","onClick","icon","cilRecycle","Modal","onHide","Body","RenderNotify","placement","cilBellExclamation","position","shape","cilBell","AppHeaderDropdown","caret","src","avatar8","href","cilUser","Cookies","remove","window","location","reload","cilAccountLogout","AppHeader","dispatch","useDispatch","sidebarShow","useSelector","state","data","Date","diaSemana","Array","getDay","mesAno","getMonth","anoAtual","getFullYear","diaAtual","getDate","style","type","cilMenu","logoOON","width","height","AppSidebarNav","items","activeKey","setActiveKey","console","log","useLocation","navLink","badge","colorIcon","customClassName","Fragment","navGroup","Component","displayName","NavLink","activeClassName","key","borderColor","borderWidth","borderStyle","backgroundColor","borderRadius","active","navItem","CryptoJS","require","navAll","CNavItem","cilHome","CNavTitle","cilCarAlt","cilMap","cilWarning","cilCog","cilPhone","cilCreditCard","cilBarChart","cilDescription","cilList","cilPeople","NavBar","usT","get","msgOri","AES","decrypt","enc","Utf8","gerente","usuario","AppSidebar","unfoldable","sidebarUnfoldable","visible","onVisibleChange","DefaultLayout","loading","Login","App","Suspense","Boolean","hostname","match","initialState","store","createStore","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.29768717.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/oon-seguros-logo.8df0a669.svg\";","import React from 'react'\n\nconst Panel = React.lazy(() => import('./views/panel/Panel')) // painel\nconst Usuarios = React.lazy(() => import('./views/employees/Users'))\nconst Device = React.lazy(() => import('./views/devices/Devices'))\nconst Permissoes = React.lazy(() => import('./views/permissons/Permissions'))\nconst Rastreamento = React.lazy(() => import('./views/tracking/Tracking'))\nconst Financeiro = React.lazy(() => import('./views/finance/Finance'))\nconst mapBox = React.lazy(() => import('./views/mapBox/Map'))\nconst Plano = React.lazy(() => import('./views/plans/Plans'))\nconst Cobertura = React.lazy(() => import('./views/coverages/Services'))\nconst Chamados = React.lazy(() => import('./views/calls/Call'))\nconst Configuracoes  = React.lazy(() => import('./views/settings/Setting'))\nconst Sinistro  = React.lazy(() => import('./views/sinister/Sinister'))\nconst Riscos = React.lazy(() => import('./views/scratchs/Scratchs'))\nconst Home = React.lazy(() => import('./views/home/Home'))\nconst Assistencia = React.lazy(() => import('./views/assistence24h/Assistence'))\n\nconst webSocket = React.lazy(() => import('./views/tracking/WebSocketTest'))\n\nconst routes = [\n  {path: '/', exact: true, name: 'Home' },\n  {path: '/panel', name: 'Panel', component: Panel },\n  {path: '/Users', name: 'Usuarios', component: Usuarios },\n  {path: '/devices', name: 'Veículos', component: Device },\n  {path: '/rastreamento', name: 'Rastreamento', component: Rastreamento },\n  {path: '/mapbox', name: 'Rastreamento', component: mapBox },\n  {path: '/financeiro', name:'Financeiro', component: Financeiro},\n  {path: '/planos', name:'Planos', component: Plano},\n  {path: '/coberturas', name:'Coberturas', component: Cobertura},\n  {path: '/chamados', name:'Chamados', component: Chamados},\n  {path: '/configuracoes', name:'Configurações', component: Configuracoes},\n  {path: '/sinistro', name:'Sinistro', component: Sinistro},\n  {path: '/riscos', name:'Riscos', component: Riscos},\n  {path: '/home', name:'Home2', component: Home},\n  {path: '/assistencia', name:'Assistencia', component: Assistencia},\n  // {path: '/webSocket', name:'webSocket', component: webSocket},\n  \n]\n\nexport default  routes;\n","import React, { Suspense } from 'react'\nimport { Redirect, Route, Switch } from 'react-router-dom'\nimport { CContainer, CSpinner } from '@coreui/react'\n// routes config\nimport routes from '../routes'\n\n\nconst AppContent = () => {\n  return (\n    <CContainer fluid>\n      <Suspense fallback={<CSpinner color=\"primary\" />}>\n        <Switch>\n          {routes.map((route, idx) => {\n            return (\n              route.component && (\n                <Route\n                  key={idx}\n                  path={route.path}\n                  exact={route.exact}\n                  name={route.name}\n                  render={(props) => (\n                    <>\n                      <route.component {...props} />\n                    </>\n                  )}\n                />\n              )\n            )\n          })}\n          <Redirect from=\"/\" to=\"/home\" />\n        </Switch>\n      </Suspense>\n    </CContainer>\n  )\n}\n\nexport default  React.memo(AppContent)\n","import React from 'react';\nimport { CFooter } from '@coreui/react';\n\nconst AppFooter = () => {\n  return (\n    <CFooter>\n      <div className=\"ms-auto\">\n         <span className=\"ms-1\">&copy; OON PAYPER USE</span>\n        {/*\n        <a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\">\n          OON Payper Use\n        </a>  */}\n       \n      </div>\n    </CFooter>\n  )\n}\n\nexport default  AppFooter;\n\n","import React from 'react'\n\nconst Render = (props) =>{\n\n    return (\n        <>\n            {props.notificacoes.map( (item, index) =>(\n                <div key={index.toString()}> \n                    <label className='Titulo-notificacao'> {item.titulo}</label>\n                    <br />\n                    <p className='texto-notificacao'> {item.text}</p>\n                    <hr />\n                </div> \n           \n           ))}\n        </>\n    )\n}\n\nexport default  Render;","import React, {useState} from 'react'\nimport { Button, Modal,  Form  }  from 'react-bootstrap';\nimport CIcon from '@coreui/icons-react'\nimport { cilBell, cilBellExclamation, cilRecycle, cilMenu } from '@coreui/icons'\nimport {\n    CContainer,\n    CHeader,\n    CHeaderBrand,\n    CButton,\n    CBadge,\n    CPopover,\n  } from '@coreui/react'\nimport './notify.css'\n\nimport RenderNotify from './Render/RenderNotify'\n\nconst Notify = () =>{\n    let cont =0 \n    \n    const [flag, setFlag] = useState(1) // pegar quantidade de novas notificacoes\n    const handleClose = () => setShow(false);\n    const [visible, setVisible] = useState(false)  \n    const [show, setShow] = useState(false);\n    const verifica = ()=>setShow(true)\n    const salvarInfos = () => {\n        setShow(false);\n    }\n\n\n    const [notificacao, setNotificacao]= useState(\n        [\n            {titulo:'Notificacao 1', text:'texto notificacao1'},\n            {titulo:'Notificacao 2', text:'texto notificacao2'},\n            {titulo:'Notificacao 3', text:'texto notificacao3'},\n            {titulo:'Notificacao 1', text:'texto notificacao1'},\n            {titulo:'Notificacao 2', text:'texto notificacao2'},\n            {titulo:'Notificacao 3', text:'texto notificacao3'},\n            {titulo:'Notificacao 1', text:'texto notificacao1'},\n            {titulo:'Notificacao 2', text:'texto notificacao2'},\n        ]\n    ) \n    const numNot = notificacao.length\n    const rest = numNot - 5\n    // limpa notificacoes, provavelmente isso vai ser feito pelo BFF\n    const ClearNotify = () => {\n        setFlag(0)\n    }\n\n    if(flag > 0){\n        return (\n            <>  \n    \n                <CPopover\n                    content={\n                        <div>\n                            <div className='container-lixeira'> \n                                <CButton variant='outline' size=\"sm\" color=\"danger\" className=\"position-lixeira-relative\" onClick={ClearNotify} > \n                                    <CIcon icon={cilRecycle} size=\"xl\" />\n                                </CButton>\n                            </div>\n                            \n                            <hr />\n                            {notificacao.map((item, index)=>{\n                                    if(index < 5){\n                                        return(\n                                            <div key={index.toString()}> \n                                                <label className='Titulo-notificacao'> {item.titulo}</label>\n                                                <br />\n                                                <p className='texto-notificacao'> {item.text}</p>\n                                                <hr />\n                                                \n                                            </div> \n                                        )\n                                    }else if(cont <1){\n                                        cont = 1\n                                        return(\n                                            <div key={index.toString()}>\n                                                {/* Abre um modal listando todas notificações. */}\n                                                <CButton onClick={verifica} size=\"sm\" className='btn-notificacao-modal' color='dark' variant='ghost'> Mais {rest} notificações </CButton>\n                                                <Modal \n                                                    show={show} \n                                                    onHide={handleClose}\n                                                    size=\"xl\"\n                                                >\n                                                    <Modal.Body className='container-body'>\n                                                        <RenderNotify notificacoes = {notificacao} /> \n                                                    </Modal.Body>\n                                                    \n                                                </Modal>\n                                            </div>\n                                        )\n                                    }\n                                }\n                            )}\n                            \n                        </div>\n                    }\n                    placement=\"bottom\"\n                    className='notificacao-popover'\n                >\n                    <CButton variant='ghost' size=\"sm\" color=\"danger\" onClick={ClearNotify} className=\"position-relative\">\n                        <CIcon icon={cilBellExclamation} size=\"xl\" />\n                        <CBadge color=\"danger\"  position=\"top-end\" shape=\"rounded-pill\">\n                            {numNot}\n                        </CBadge>\n                    </CButton>\n                </CPopover>\n                \n            </>\n        )\n    }else{\n        return (\n            <>  \n                <CPopover\n                    content={<h6>Não há notificações</h6>}\n                    placement=\"bottom\"\n                    className='notificacao-popover'\n                >\n                    <CButton variant='ghost' color=\"dark\">\n                        <CIcon icon={cilBell} size=\"xl\" />\n                    </CButton>\n                </CPopover>\n                \n            </>\n        )\n    }\n   \n}\n\nexport default  Notify","export default __webpack_public_path__ + \"static/media/2.0c06e43d.jpg\";","import React, { useState } from \"react\";\nimport {\n    CAvatar,\n    CBadge,\n    CButton,\n    CDropdown,\n    CDropdownDivider,\n    CDropdownHeader,\n    CDropdownItem,\n    CDropdownMenu,\n    CDropdownToggle,\n} from \"@coreui/react\";\n\nimport Cookies from \"js-cookie\";\nimport \"./appHeader.css\";\n\nimport {\n    cilBell,\n    cilCreditCard,\n    cilCommentSquare,\n    cilEnvelopeOpen,\n    cilFile,\n    cilLockLocked,\n    cilSettings,\n    cilExitToApp,\n    cilTask,\n    cilUser,\n    cilAccountLogout,\n} from \"@coreui/icons\";\nimport CIcon from \"@coreui/icons-react\";\n\nimport avatar8 from \"./../../assets/images/avatars/2.jpg\";\nimport { Link } from \"react-router-dom\";\n\nconst AppHeaderDropdown = () => {\n    const sairTela = () => {\n        // localStorage.removeItem(\"TokenID\") // exclui o token\n        // localStorage.removeItem(\"user\");\n        Cookies.remove(\"TokenID\", { path: \"\" });\n        window.location.reload();\n    };\n\n    const [configRoute, setConfigRoute] = useState(false);\n    const configScreen = () => {\n        setConfigRoute(true);\n    };\n\n    return (\n        <CDropdown variant=\"nav-item\">\n            <CDropdownToggle\n                placement=\"bottom-end\"\n                className=\"py-0\"\n                caret={false}\n            >\n                <CAvatar src={avatar8} size=\"md\" />\n            </CDropdownToggle>\n            <CDropdownMenu placement=\"bottom-end\">\n                {/* <CDropdownItem href=\"#/configuracoes\">\n                    <CAvatar src={avatar8} size=\"md\" className=\"mx-2\" />\n                    <label>gustavo2@oonseguros.com</label>\n                </CDropdownItem>\n                <CDropdownDivider /> */}\n                <CDropdownItem href=\"#/configuracoes\">\n                    <CIcon icon={cilUser} className=\"me-2\" />\n                    <label>Configurações do perfil</label>\n                </CDropdownItem>\n                <CDropdownItem onClick={sairTela} href=\"/\" className=\"mt-2\">\n                    <CIcon\n                        \n                        icon={cilAccountLogout}\n                        className=\"me-2 btn-config-screen\"\n                    />\n                    <label className=\"btn-font-exit\"> Sair </label>\n                </CDropdownItem>\n            </CDropdownMenu>\n        </CDropdown>\n    );\n};\n\nexport default  AppHeaderDropdown;\n","export default __webpack_public_path__ + \"static/media/oon.cd79f0e4.svg\";","import React, { useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n    CContainer,\n    CHeader,\n    CHeaderBrand,\n    CHeaderNav,\n    CHeaderToggler,\n    CImage,\n    CNavItem,\n} from \"@coreui/react\";\nimport CIcon from \"@coreui/icons-react\";\nimport { cilMenu } from \"@coreui/icons\";\nimport \"./appHeader.css\";\nimport NotifySino from \"./notify/Notify\";\n\nimport { AppHeaderDropdown } from \"./header/index\";\nimport logoOON from \"./../assets/images/oon.svg\";\n\nconst AppHeader = () => {\n    const dispatch = useDispatch();\n    const sidebarShow = useSelector((state) => state.sidebarShow);\n\n    var data = new Date();\n    var dias = new Array(\n        \"  domingo\",\n        \"  segunda-feira\",\n        \"  terça-feira\",\n        \"  quarta-feira\",\n        \"  quinta-feira\",\n        \"  sexta-feira\",\n        \"  sábado\"\n    );\n    const diaSemana = dias[data.getDay()];\n\n    var mes = new Array(\n        \"Janeiro \",\n        \"Fevereiro \",\n        \"Março \",\n        \"Abril \",\n        \"Maio \",\n        \"Junho \",\n        \"Julho \",\n        \"Agosto \",\n        \"Setembro \",\n        \"Outubro \",\n        \"Novembro \",\n        \"Dezembro \"\n    );\n    const space = \"    \";\n    const mesAno = mes[data.getMonth()];\n    const anoAtual = data.getFullYear();\n    // Mes ano, dia e diaNum\n    const diaAtual = data.getDate();\n    return (\n        <CHeader position=\"sticky\" className=\"headerContainer pb-3\" style={{\n            // borderRadius: '0px 0px 20px 20px'\n        }}>\n            <CContainer fluid>\n                <CHeaderToggler\n                    className=\"ps-1\"\n                    onClick={() =>\n                        dispatch({ type: \"set\", sidebarShow: !sidebarShow })\n                    }\n                >\n                    <CIcon icon={cilMenu} size=\"lg\" />\n                </CHeaderToggler>\n                {/* LOGO QUANDO A TELA FICA MENOR */}\n                <CHeaderBrand className=\"mx-auto d-md-none\" to=\"/\">\n                    <CImage fluid src={logoOON} width={180} height={180} />\n                </CHeaderBrand>\n                <CHeaderNav className=\"d-none d-md-flex me-auto\">\n                    <CNavItem className=\"container-data\">\n                        <label className=\"text-ano-mes\">\n                            {mesAno} {anoAtual}\n                        </label>\n                        <label className=\"text-dia\">\n                            {space} {diaSemana}, {diaAtual}\n                        </label>\n                    </CNavItem>\n                </CHeaderNav>\n\n                <CHeaderNav>\n                    <CNavItem>\n                        <NotifySino />\n                    </CNavItem>\n                </CHeaderNav>\n                <CHeaderNav className=\"ms-3\">\n                    <AppHeaderDropdown />\n                </CHeaderNav>\n                <CHeaderNav className=\"ms-3\">\n                    <div className=\"container-header-name\">\n                        <label className=\"name-header\">Gustavo Alcantara</label>\n                        <br />\n                        <label className=\"funcao-header\">Administrador</label>\n                    </div>\n                </CHeaderNav>\n            </CContainer>\n\n            {/* <CContainer fluid>\n        <AppBreadcrumb />\n      </CContainer> */}\n        </CHeader>\n    );\n};\n\nexport default  AppHeader;\n","import React, { useState } from \"react\";\nimport { NavLink, useLocation } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nimport { CBadge, CNavLink } from \"@coreui/react\";\nimport CIcon from \"@coreui/icons-react\";\n\nexport const AppSidebarNav = ({ items }) => {\n    const [activeKey, setActiveKey] = useState(0);\n    console.log(activeKey);\n\n    const location = useLocation();\n    const navLink = (name, icon, badge, colorIcon) => {\n        return (\n            <>\n                <CIcon\n                    style={{ color: colorIcon }}\n                    icon={icon}\n                    customClassName=\"nav-icon\"\n                />\n                {name && name}\n                {badge && <CBadge className=\"ms-auto\">{badge.text}</CBadge>}\n            </>\n        );\n    };\n\n    const navItem = (item, index) => {\n        const { component, name, badge, icon, ...rest } = item;\n        const Component = component;\n        let colorIcon = \"#6D6D6D\";\n        activeKey !== index ? colorIcon : (colorIcon = \"#216CFF\");\n        return component.render.displayName === 'CNavTitle' ? (\n            <Component\n                style={{ color: \"#6D6D6D\" }}\n                {...(rest.to &&\n                    !rest.items && {\n                        component: NavLink,\n                        activeClassName: \"active\",\n                    })}\n                key={index}\n                {...rest}\n            >\n                {navLink(name, icon, badge)}\n            </Component>\n        ) : (\n            <Component key={index}>\n                <CNavLink\n                    style={\n                        activeKey === index\n                            ? {\n                                  borderColor: \"#216CFF\",\n                                  borderWidth: \"3px\",\n                                  borderStyle: \"none none none solid\",\n                                  backgroundColor: \"rgba(231, 231, 231, 0.35)\",\n                                  borderRadius: 0,\n                                  color: \"#216CFF\",\n                              }\n                            : { color: \"#6D6D6D\" }\n                    }\n                    active={activeKey === index}\n                    onClick={() => setActiveKey(index)}\n                    {...(rest.to &&\n                        !rest.items && {\n                            component: NavLink,\n                        })}\n                    {...rest}\n                >\n                    {navLink(name, icon, badge, colorIcon)}\n                </CNavLink>\n            </Component>\n        );\n    };\n\n    // const navGroup = (item, index) => {\n    //     const { component, name, icon, to, ...rest } = item;\n    //     const Component = component;\n    //     return (\n    //         <Component\n    //             idx={String(index)}\n    //             key={index}\n    //             toggler={navLink(name, icon)}\n    //             visible={location.pathname.startsWith(to)}\n    //             {...rest}\n    //         >\n    //             {item.items?.map((item, index) =>\n    //                 item.items ? navGroup(item, index) : navItem(item, index)\n    //             )}\n    //         </Component>\n    //     );\n    // };\n\n    return (\n        <React.Fragment>\n            {items &&\n                items.map((item, index) =>\n                    item.items ? navGroup(item, index) : navItem(item, index)\n                )}\n        </React.Fragment>\n    );\n};\n\nAppSidebarNav.propTypes = {\n    items: PropTypes.arrayOf(PropTypes.any).isRequired,\n};\n","import React from 'react'\nimport CIcon from '@coreui/icons-react'\nimport { cilPeople, cilCarAlt, cilWarning, cilDescription, cilPhone, cilCog, cilHome, cilMap, cilCreditCard, cilBarChart, cilList } from '@coreui/icons';\nimport Cookies from 'js-cookie';\nimport { CNavItem, CNavTitle } from '@coreui/react';\nvar CryptoJS = require(\"crypto-js\");\n\nconst navAll = [\n    {\n        component: CNavItem,\n        name: 'Home',\n        to: '/home',\n        icon: cilHome,\n    },\n\n    // GRUPO SETORES \n    {\n        component: CNavTitle,\n        name: 'Setores',\n    },\n    {\n        component: CNavItem,\n        name: 'Veículos',\n        to: '/devices',\n        icon: cilCarAlt,\n    },\n    {\n        component: CNavItem,\n        name: 'Rastreamento',\n        to: '/rastreamento',\n        icon: cilMap,\n    },\n    {\n        component: CNavItem,\n        name: 'Sinistro',\n        to: '/sinistro',\n        icon: cilWarning,\n    },\n    {\n        component: CNavItem,\n        name: 'Assistência',\n        to: '/assistencia',\n        icon: cilCog,\n    },\n    {\n        component: CNavItem,\n        name: 'Chamados',\n        to: '/chamados',\n        icon: cilPhone,\n    },\n    {\n        component: CNavItem,\n        name: 'Financeiro',\n        to: '/financeiro',\n        icon: cilCreditCard,\n    },\n    {\n        component: CNavItem,\n        name: 'Painel',\n        to: '/panel',\n        icon: cilBarChart,\n    },\n\n    // GRUPO SERVICÇOS\n    {\n        component: CNavTitle,\n        name: 'Serviços',\n    },\n    {\n        component: CNavItem,\n        name: 'Planos',\n        to: '/planos',\n        icon: cilDescription,\n    },\n\n    {\n        component: CNavItem,\n        name: 'Coberturas',\n        to: '/coberturas',\n        icon: cilList,\n    },\n\n    //GRUPO OUTROS \n    {\n        component: CNavTitle,\n        name: 'Outros',\n    },\n    {\n        component: CNavItem,\n        name: 'Funcionários',\n        to: '/Users',\n        icon: cilPeople,\n    },\n    {\n        component: CNavItem,\n        name: 'Configurações',\n        to: '/configuracoes',\n        icon: cilCog,\n    },\n\n\n    // {\n    //   component: CNavItem,\n    //   name: 'Riscos',\n    //   to: '/riscos',\n    //   icon: cilFlagAlt,\n    // },\n]\n\n\n\n// const admin = [\n\n//   {\n//     component: CNavItem,\n//     name: 'Home',\n//     to: '/home',\n//     icon: <CIcon icon={cilHome} customClassName=\"nav-icon\" />,\n//   },\n\n\n//   // GRUPO SETORES \n//   {\n//     component: CNavTitle,\n//     name: 'Setores',\n//   },\n//   {\n//     component: CNavItem,\n//     name: 'Veículos',\n//     to: '/devices',\n//     icon: <CIcon icon={cilCarAlt} customClassName=\"nav-icon\" />,\n//   },\n//   // {\n//   //   component: CNavItem,\n//   //   name: 'webSocket',\n//   //   to: '/websocket',\n//   //   icon: <CIcon icon={cilCarAlt} customClassName=\"nav-icon\" />,\n//   // },\n//   {\n//     component: CNavItem,\n//     name: 'Rastreamento',\n//     to: '/rastreamento',\n//     icon: <CIcon icon={cilCog} customClassName=\"nav-icon\" />,\n//   },\n//   // {\n//   //   component: CNavItem,\n//   //   name: 'Rastreamento',\n//   //   to: '/mapbox',\n//   //   icon:  <CIcon icon={cilLocationPin} customClassName=\"nav-icon\" />,\n//   // },\n//   {\n//     component: CNavItem,\n//     name: 'Financeiro',\n//     to: '/financeiro',\n//     icon: <CIcon icon={cilMoney} customClassName=\"nav-icon\" />,\n//   },\n//   {\n//     component: CNavItem,\n//     name: 'Painel', // Dashboard\n//     to: '/dashboard',\n//     icon: <CIcon icon={cilSpeedometer} customClassName=\"nav-icon\" />,\n//     // badge: {\n//     //   color: 'info',\n//     //   text: 'NEW',\n//     // },\n//   },\n//   {\n//     component: CNavItem,\n//     name: 'Sinistro',\n//     to: '/sinistro',\n//     icon: <CIcon icon={cilWarning} customClassName=\"nav-icon\" />,\n//   },\n//   {\n//     component: CNavItem,\n//     name: 'Assistência',\n//     to: '/assistencia',\n//     icon: <CIcon icon={cilCog} customClassName=\"nav-icon\" />,\n//   },\n//   {\n//     component: CNavItem,\n//     name: 'Riscos',\n//     to: '/riscos',\n//     icon: <CIcon icon={cilFlagAlt} disabled customClassName=\"nav-icon\" />,\n//   },\n//   {\n//     component: CNavItem,\n//     name: 'Funcionários',\n//     to: '/Users',\n//     icon: <CIcon icon={cilPeople} customClassName=\"nav-icon\" />,\n//   },\n\n\n//   // GRUPO SERVICÇOS\n//   {\n//     component: CNavTitle,\n//     name: 'Serviços',\n//   },\n//   {\n//     component: CNavItem,\n//     name: 'Planos',\n//     to: '/planos',\n//     icon: <CIcon icon={cilDescription} customClassName=\"nav-icon\" />,\n//   },\n\n//   {\n//     component: CNavItem,\n//     name: 'Coberturas',\n//     to: '/coberturas',\n//     icon: <CIcon icon={cilTask} customClassName=\"nav-icon\" />,\n//   },\n\n//   //GRUPO OUTROS \n//   {\n//     component: CNavTitle,\n//     name: 'Outros',\n//   },\n\n//   {\n//     component: CNavItem,\n//     name: 'Chamados',\n//     to: '/chamados',\n//     icon: <CIcon icon={cilPhone} customClassName=\"nav-icon\" />,\n//   },\n\n//   {\n//     component: CNavItem,\n//     name: 'Configurações',\n//     to: '/configuracoes',\n//     icon: <CIcon icon={cilCog} customClassName=\"nav-icon\" />,\n//   },\n\n\n// ]\n\n// const gerente = [\n//   {\n//     component: CNavItem,\n//     name: 'Home',\n//     to: '/home',\n//     icon: <CIcon icon={cilHome} customClassName=\"nav-icon\" />,\n//   },\n//   {\n//     component: CNavTitle,\n//     name: 'Setores',\n//   },\n//   {\n//     component: CNavItem,\n//     name: 'Sinistro',\n//     to: '/sinistro',\n//     icon: <CIcon icon={cilWarning} customClassName=\"nav-icon\" />,\n//   },\n//   {\n//     component: CNavItem,\n//     name: 'Assistência',\n//     to: '/assistencia',\n//     icon: <CIcon icon={cilCog} customClassName=\"nav-icon\" />,\n//   },\n//   {\n//     component: CNavItem,\n//     name: 'Riscos',\n//     to: '/riscos',\n//     icon: <CIcon icon={cilFlagAlt} disabled customClassName=\"nav-icon\" />,\n//   },\n//   {\n//     component: CNavItem,\n//     name: 'Funcionários',\n//     to: '/Users',\n//     icon: <CIcon icon={cilPeople} customClassName=\"nav-icon\" />,\n//   },\n//   {\n//     component: CNavTitle,\n//     name: 'Serviços',\n//   },\n//   {\n//     component: CNavItem,\n//     name: 'Planos',\n//     to: '/planos',\n//     icon: <CIcon icon={cilDescription} customClassName=\"nav-icon\" />,\n//   },\n\n//   {\n//     component: CNavItem,\n//     name: 'Coberturas',\n//     to: '/coberturas',\n//     icon: <CIcon icon={cilTask} customClassName=\"nav-icon\" />,\n//   },\n//   {\n//     component: CNavItem,\n//     name: 'Chamados',\n//     to: '/chamados',\n//     icon: <CIcon icon={cilPhone} customClassName=\"nav-icon\" />,\n//   },\n\n//   {\n//     component: CNavTitle,\n//     name: 'Outros',\n//   },\n//   {\n//     component: CNavItem,\n//     name: 'Configurações',\n//     to: '/configuracoes',\n//     icon: <CIcon icon={cilCog} customClassName=\"nav-icon\" />,\n//   },\n\n\n// ]\n\n// const usuario = [\n//   {\n//     component: CNavItem,\n//     name: 'Home',\n//     to: '/home',\n//     icon: <CIcon icon={cilHome} customClassName=\"nav-icon\" />,\n//   },\n\n//   // GRUPO SETORES \n//   {\n//     component: CNavTitle,\n//     name: 'Setores',\n//   },\n//   {\n//     component: CNavItem,\n//     name: 'Veículos',\n//     to: '/devices',\n//     icon: <CIcon icon={cilCarAlt} customClassName=\"nav-icon\" />,\n//   },\n//   {\n//     component: CNavItem,\n//     name: 'Sinistro',\n//     to: '/sinistro',\n//     icon: <CIcon icon={cilWarning} customClassName=\"nav-icon\" />,\n//   },\n//   {\n//     component: CNavItem,\n//     name: 'Assistência',\n//     to: '/assistencia',\n//     icon: <CIcon icon={cilCog} customClassName=\"nav-icon\" />,\n//   },\n//   {\n//     component: CNavItem,\n//     name: 'Riscos',\n//     to: '/riscos',\n//     icon: <CIcon icon={cilFlagAlt} customClassName=\"nav-icon\" />,\n//   },\n//   {\n//     component: CNavItem,\n//     name: 'Funcionários',\n//     to: '/Users',\n//     icon: <CIcon icon={cilPeople} customClassName=\"nav-icon\" />,\n//   },\n//   {\n//     component: CNavTitle,\n//     name: 'Outros',\n//   },\n//   {\n//     component: CNavItem,\n//     name: 'Configurações',\n//     to: '/configuracoes',\n//     icon: <CIcon icon={cilCog} customClassName=\"nav-icon\" />,\n//   },\n// ]\n\n\nfunction NavBar() {\n\n    var usT = Cookies.get('userType')\n    var msg = CryptoJS.AES.decrypt(usT, 'OnnSeguros');\n    var msgOri = msg.toString(CryptoJS.enc.Utf8);\n\n    const userType = msgOri\n    const user = { userDepart: 'ADMIN', userType: userType } //userType} \n\n    if (user.userType === 'ADMIN') {\n        return navAll\n    } else if (userType === 'MANAGER') {\n        return gerente\n    } else {\n        return usuario\n    }\n\n}\n\n\nexport default  NavBar;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport SimpleBar from \"simplebar-react\";\nimport { CSidebar, CSidebarBrand, CSidebarNav, CSidebarToggler, CImage } from \"@coreui/react\";\n\nimport { AppSidebarNav } from \"./AppSidebarNav\";\nimport logoOON from \"./../assets/images/oon-seguros-logo.svg\";\n\nimport \"simplebar/dist/simplebar.min.css\";\n\n// sidebar nav config\nimport NavBar from \"../views/navBar/NavBar\";\n\nconst AppSidebar = () => {\n    const dispatch = useDispatch();\n    const unfoldable = useSelector((state) => state.sidebarUnfoldable);\n    const sidebarShow = useSelector((state) => state.sidebarShow);\n\n    return (\n        <CSidebar\n            position=\"fixed\"\n            className=\"sideBarContainer bg-light\"\n            unfoldable={unfoldable}\n            visible={sidebarShow}\n            onVisibleChange={(visible) => {\n                dispatch({ type: \"set\", sidebarShow: visible });\n            }}\n        >\n            <CSidebarBrand\n                className=\"d-none d-md-flex logoContainer mb-3 radius-border\"\n                to=\"/\"\n                style={{\n                    backgroundColor: \"#F9F7F7\",\n                    borderRadius: '0px 0px 20px 20px'\n                }}\n            >\n                <CImage fluid src={logoOON} width={110} className=\"p-2\" />\n            </CSidebarBrand>\n            <CSidebarNav>\n                <SimpleBar\n                    className=\"fontItemNav\"\n                    style={{\n                        backgroundColor: \"#F9F7F7\",\n                    }}\n                >\n                    <AppSidebarNav items={NavBar()} />\n                    <CSidebarToggler\n                        className=\"d-none d-lg-flex controlerSideBar\"\n                        onClick={() =>\n                            dispatch({\n                                type: \"set\",\n                                sidebarUnfoldable: !unfoldable,\n                            })\n                        }\n                    />\n                </SimpleBar>\n            </CSidebarNav>\n        </CSidebar>\n    );\n};\n\nexport default  React.memo(AppSidebar);\n","import React from \"react\";\n\nimport {\n    AppContent,\n    AppSidebar,\n    AppFooter,\n    AppHeader,\n} from \"../components/index\";\n\nconst DefaultLayout = () => {\n    return (\n        <div>\n            <AppSidebar />\n            <div className=\"wrapper d-flex flex-column min-vh-100 bg-light\">\n                <AppHeader />\n                <br />\n                <div className=\"flex-grow-1 px-1\">\n                    <AppContent />\n                </div>\n                <br />\n                <AppFooter />\n            </div>\n        </div>\n    );\n};\n\nexport default  DefaultLayout;\n","import React, { useState, Component, useEffect } from 'react'\nimport { HashRouter, Route, Switch } from 'react-router-dom'\n\nimport DefaultLayout from './layout/DefaultLayout';\n\nimport './scss/style.scss'\n\nconst loading = (\n  <div className=\"pt-3 text-center\">\n    <div className=\"sk-spinner sk-spinner-pulse\"></div>\n  </div>\n)\n\n\n// Pages\nconst Login = React.lazy(() => import('./views/login/Login'))\n// const Register = React.lazy(() => import('./views/pages/register/Register'))\nconst Page404 = React.lazy(() => import('./views/pages/page404/Page404'))\nconst Page500 = React.lazy(() => import('./views/pages/page500/Page500'))\n\n\n\nconst App = () => {\n\n  const [flag, setFlag] = useState(false)\n\n\n  // useEffect(()=> {\n  //   // pegar o token \n  //   const token = localStorage.getItem(\"TokenID\");\n  //   // console.log('tokem em cash..',token)\n  //   const config = {\n  //     headers: { \n  //         'Authorization': token, \n  //         'Content-Type': 'application/json;charset=UTF-8',\n  //         \"Access-Control-Allow-Origin\": \"*\"\n  //     }\n  //   }\n\n  //     // requisito login\n  //   axios\n  //     .post('http://dashboardbff.oonpayperuse.com.br:8080/dashboardbff/login', \n  //       token,\n  //       config\n  //     )\n  //     .then((res) => {\n  //       console.log('resultado', res)\n  //       // tinha que analisar o resultado dessa requisicao, depois redirecionar\n  //       setFlag(true)\n\n  //     })\n  //     .catch((err) => {\n  //       console.log(\"Err Token: \", err);\n  //       // setFlag(true)\n  //     })\n  // },[])\n\n\n\n  if (flag == true) {\n    return (\n      <HashRouter>\n        <React.Suspense fallback={loading}>\n          <Switch>\n            <Route path=\"/\" name=\"Home\" render={(props) => <DefaultLayout {...props} />} />\n          </Switch>\n        </React.Suspense>\n      </HashRouter>\n    )\n  } else {\n    return (\n      <HashRouter>\n        <React.Suspense fallback={loading}>\n          <Switch>\n            <Route path=\"/\" name=\"Login Page\" render={(props) => <Login {...props} />} />\n          </Switch>\n        </React.Suspense>\n      </HashRouter>\n    )\n  }\n}\n\nexport default  App\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ',\n          )\n        })\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.')\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister()\n    })\n  }\n}\n","import { createStore } from 'redux'\n\nconst initialState = {\n  sidebarShow: true,\n}\n\nconst changeState = (state = initialState, { type, ...rest }) => {\n  switch (type) {\n    case 'set':\n      return { ...state, ...rest }\n    default:\n      return state\n  }\n}\n\nconst store = createStore(changeState)\nexport default  store\n","import 'react-app-polyfill/stable'\nimport 'core-js'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n)\n\nserviceWorker.unregister()\n"],"sourceRoot":""}